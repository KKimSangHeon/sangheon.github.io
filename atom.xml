<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kim Sang Heon&#39;s Bolg</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://KKimSangHeon.github.io/"/>
  <updated>2017-07-11T18:16:32.668Z</updated>
  <id>http://KKimSangHeon.github.io/</id>
  
  <author>
    <name>Kim Sang Heon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ThisIsLinux28</title>
    <link href="http://KKimSangHeon.github.io/2017/07/11/ThisIsLinux28/"/>
    <id>http://KKimSangHeon.github.io/2017/07/11/ThisIsLinux28/</id>
    <published>2017-07-11T08:30:49.000Z</published>
    <updated>2017-07-11T18:16:32.668Z</updated>
    
    <content type="html"><![CDATA[<p>네임서버를 만들었으니 이메일을 보내는 메일서버를 만들어 보자.</p>
<h3 id="1-서버-메일서버를-만들자-naver"><a href="#1-서버-메일서버를-만들자-naver" class="headerlink" title="1.서버 메일서버를 만들자(naver)"></a>1.서버 메일서버를 만들자(naver)</h3><h4 id="1-1-서버에서-메일-서버를-만들자-서버에서-진행"><a href="#1-1-서버에서-메일-서버를-만들자-서버에서-진행" class="headerlink" title="1.1 서버에서 메일 서버를 만들자(서버에서 진행)"></a>1.1 서버에서 메일 서버를 만들자(서버에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"># yum -y install sendmail-cf dovecot  </div><div class="line">          //sendmail-cf 보내는메일서버</div><div class="line">          //devoct 받는 메일서버</div><div class="line"></div><div class="line"># vi /etc/mail/sendmail.cf          </div><div class="line">:set number</div><div class="line">85를 Cwnaver.com 으로 수정</div><div class="line">264  Addr=127.0.0.1 를 지운다</div><div class="line">저장</div><div class="line"></div><div class="line">외부 호스트가 메일을 전달할 수 있도록 허가</div><div class="line"># vi /etc/mail/access  다음을 추가</div><div class="line">naver.com       RELAY</div><div class="line">daum.net        RELAY</div><div class="line">192.168.111     RELAY</div><div class="line"></div><div class="line"># makemap hash /etc/mail/access &lt; /etc/mail/access  //변경내용 적용</div><div class="line"></div><div class="line">사용자의 메일박스에서 메일을 꺼내 사용자에게 전달하는 도베캇 설정</div><div class="line"># vi /etc/dovecot/dovecot.conf</div><div class="line">:set number</div><div class="line">24행 30행 33행 주석제거</div><div class="line">저장</div><div class="line"># vi /etc/dovecot/conf.d/10-ssl.conf</div><div class="line">:set number</div><div class="line">8행 ssl=yes로 수정</div><div class="line">저장</div><div class="line"># vi /etc/dovecot/conf.d/10-mail.conf</div><div class="line">:set number</div><div class="line">25행 주석제거</div><div class="line">119행 mail_access_groups =mail 으로 수정</div><div class="line">159행 주석제거</div><div class="line">저장</div></pre></td></tr></table></figure>
<h4 id="1-2-서버에-사용자를-만들자-서버에서-진행"><a href="#1-2-서버에-사용자를-만들자-서버에서-진행" class="headerlink" title="1.2 서버에 사용자를 만들자(서버에서 진행)"></a>1.2 서버에 사용자를 만들자(서버에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># adduser lee</div><div class="line"># passwd lee</div><div class="line">암호 lee</div><div class="line"> 이 사용자는 lee@naver.com</div></pre></td></tr></table></figure>
<h4 id="1-3-서비스를-시작하자-서버에서-진행"><a href="#1-3-서비스를-시작하자-서버에서-진행" class="headerlink" title="1.3 서비스를 시작하자(서버에서 진행)"></a>1.3 서비스를 시작하자(서버에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># systemctl restart sendmail</div><div class="line"># systemctl enable sendmail</div><div class="line"></div><div class="line"># systemctl restart dovecot</div><div class="line"># systemctl enable dovecot</div></pre></td></tr></table></figure>
<h4 id="1-4-서버에서-만든-메일서버가-잘-작동하나-확인해보자-클라이언트에서-진행"><a href="#1-4-서버에서-만든-메일서버가-잘-작동하나-확인해보자-클라이언트에서-진행" class="headerlink" title="1.4 서버에서 만든 메일서버가 잘 작동하나 확인해보자(클라이언트에서 진행)"></a>1.4 서버에서 만든 메일서버가 잘 작동하나 확인해보자(클라이언트에서 진행)</h4><p>이를 위해 클라이언트에서 메일을 보낸다.(클라이언트에서 실행)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"># su</div><div class="line"></div><div class="line"># vi /etc/resolv.conf</div><div class="line">nameserver 192.168.111.100</div><div class="line"></div><div class="line"># yum -y install evolution    //이메일 클라이언트 프로그램</div><div class="line"></div><div class="line">프로그램-&gt;오피스-&gt;에볼루션</div><div class="line">계속-&gt;계속    </div><div class="line">전체이름: 이네이버</div><div class="line">전자메일 주소: lee@naver.com</div><div class="line">계속</div><div class="line"></div><div class="line">서버종류 pop선택</div><div class="line">서버: mail.naver.com</div><div class="line">사용자이름: lee</div><div class="line">포트: 995</div><div class="line">암호화방식: SSL특정방식사용</div><div class="line">계속</div><div class="line">계속</div><div class="line"></div><div class="line">서버 mail.naver.com</div><div class="line">계속</div><div class="line"></div><div class="line">이름 : 네이버 메일</div><div class="line">계속</div><div class="line">적용</div><div class="line"></div><div class="line">계속 허용       //꼭 해야한다.</div><div class="line">암호: lee</div><div class="line">로그인 암호:centos</div><div class="line"></div><div class="line">새로만들기</div><div class="line">받는사람 lee@naver.com</div></pre></td></tr></table></figure><br>새로만들기를 눌러 lee@naver.com으로 메일을 하나 보내보자. 그러면 보낸편지함에 하나 들어있고 메일박스로 들어가있는상태. 그 후 보내기/받기를 누르면 받은편지함에 메일이 하나 생성된다.</p>
<h3 id="2-서버B-메일서버를-만들자-daum"><a href="#2-서버B-메일서버를-만들자-daum" class="headerlink" title="2.서버B 메일서버를 만들자(daum)"></a>2.서버B 메일서버를 만들자(daum)</h3><h4 id="2-1-서버B에-메일-서버를-만들자-서버B에서-진행"><a href="#2-1-서버B에-메일-서버를-만들자-서버B에서-진행" class="headerlink" title="2.1 서버B에 메일 서버를 만들자(서버B에서 진행)"></a>2.1 서버B에 메일 서버를 만들자(서버B에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"># yum -y install sendmail-cf dovecot  </div><div class="line">          //sendmail-cf 보내는메일서버</div><div class="line">          //devoct 받는 메일서버</div><div class="line"></div><div class="line"># vi /etc/mail/sendmail.cf          </div><div class="line">:set number</div><div class="line">85를 Cwdaum.net 으로 수정</div><div class="line">264  Addr=127.0.0.1 를 지운다</div><div class="line">저장</div><div class="line"></div><div class="line">외부 호스트가 메일을 전달할 수 있도록 허가</div><div class="line"># vi /etc/mail/access  다음을 추가</div><div class="line">naver.com       RELAY</div><div class="line">daum.net        RELAY</div><div class="line">192.168.111     RELAY</div><div class="line"></div><div class="line"># makemap hash /etc/mail/access &lt; /etc/mail/access  //변경내용 적용</div><div class="line"></div><div class="line">사용자의 메일박스에서 메일을 꺼내 사용자에게 전달하는 도베캇 설정</div><div class="line"># vi /etc/dovecot/dovecot.conf</div><div class="line">:set number</div><div class="line">24행 30행 33행 주석제거</div><div class="line">저장</div><div class="line"># vi /etc/dovecot/conf.d/10-ssl.conf</div><div class="line">:set number</div><div class="line">8행 ssl=yes로 수정</div><div class="line">저장</div><div class="line"># vi /etc/dovecot/conf.d/10-mail.conf</div><div class="line">:set number</div><div class="line">25행 주석제거</div><div class="line">119행 mail_access_groups =mail 으로 수정</div><div class="line">159행 주석제거</div><div class="line">저장</div></pre></td></tr></table></figure>
<h4 id="2-2-서버B에-사용자를-만들자-서버B에서-진행"><a href="#2-2-서버B에-사용자를-만들자-서버B에서-진행" class="headerlink" title="2.2 서버B에 사용자를 만들자(서버B에서 진행)"></a>2.2 서버B에 사용자를 만들자(서버B에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># adduser kim</div><div class="line"># passwd kim</div><div class="line">암호 kim</div><div class="line"> 이 사용자는 kim@daum.net</div></pre></td></tr></table></figure>
<h4 id="2-3-서비스를-시작하자-서버B에서-진행"><a href="#2-3-서비스를-시작하자-서버B에서-진행" class="headerlink" title="2.3 서비스를 시작하자(서버B에서 진행)"></a>2.3 서비스를 시작하자(서버B에서 진행)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># systemctl restart sendmail</div><div class="line"># systemctl enable sendmail</div><div class="line"></div><div class="line"># systemctl restart dovecot</div><div class="line"># systemctl enable dovecot</div><div class="line"></div><div class="line"># systemctl stop firewalld    //방화벽 끄기</div><div class="line"># systemctl disable firewalld //방화벽 끄기</div></pre></td></tr></table></figure>
<h3 id="3-최종테스트를-해보자"><a href="#3-최종테스트를-해보자" class="headerlink" title="3. 최종테스트를 해보자"></a>3. 최종테스트를 해보자</h3><h4 id="3-1-윈도우-클라이언트에서-해보자"><a href="#3-1-윈도우-클라이언트에서-해보자" class="headerlink" title="3.1 윈도우 클라이언트에서 해보자"></a>3.1 윈도우 클라이언트에서 해보자</h4><p>썬더버드를 받자. 이때 네이버에 접속되지 않는데 아까 도메인 서버를 100으로 세팅해놔서 그렇다..<br>이름 : 김다음<br>메일주소 : kim@daum.net<br>암호 : kim<br>POP3 선택하고 완료<br>lee@naver.com 으로 메일을 보내보자<br>클라이언트로 돌아와 보내기/받기를 눌러보자 그 후 회신을 눌러보자<br>그 후 윈도우 클라이언트로 와서 받기를 눌러보자.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;네임서버를 만들었으니 이메일을 보내는 메일서버를 만들어 보자.&lt;/p&gt;
&lt;h3 id=&quot;1-서버-메일서버를-만들자-naver&quot;&gt;&lt;a href=&quot;#1-서버-메일서버를-만들자-naver&quot; class=&quot;headerlink&quot; title=&quot;1.서버 메일서버를
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>10장. 메일서버 개념, 메일서버를 위한 네임서버 구현</title>
    <link href="http://KKimSangHeon.github.io/2017/07/11/ThisIsLinux27/"/>
    <id>http://KKimSangHeon.github.io/2017/07/11/ThisIsLinux27/</id>
    <published>2017-07-10T15:56:35.000Z</published>
    <updated>2017-07-11T17:41:52.193Z</updated>
    
    <content type="html"><![CDATA[<h3 id="메일서버"><a href="#메일서버" class="headerlink" title="메일서버"></a>메일서버</h3><p>네임서버에 대한이해가 필수적이므로 이해하고 넘어올것.<br>E-mail의 송수신에서 사용되는 프로토콜</p>
<p>다음, 네이버의 메일서버 계정을 갖고있다면 kim@daum.net  /   lee.naver.com 가 있다.</p>
<p>kim@daum.net -&gt; lee.naver.com 메일전송<br>smtp를 통해 kim 메일서버의 큐에 들어가고 여유가 있을 때 smtp 프로토콜을 이용해 lee의 메일서버로 보내놓는다. 메일서버는 메일 박스에 넣어놓고 lee는 pop3 imap프로토콜을 써서 자신의 컴퓨터로 확인한다.<br>보내는 프로토콜 : smtp<br>받는 프로토콜 : POP3 IMAP</p>
<h3 id="실습계획"><a href="#실습계획" class="headerlink" title="실습계획"></a>실습계획</h3><p>Server : naver 메일서버, 네임서버 역할을 한다.<br>Server(B) : daum 메일 서버<br>WinClient : 메일 클라이언트<br>Client : 메일 클라이언트</p>
<h4 id="1-메일서버를-구현하기-전에-네임서버를-구현하자"><a href="#1-메일서버를-구현하기-전에-네임서버를-구현하자" class="headerlink" title="1. 메일서버를 구현하기 전에 네임서버를 구현하자"></a>1. 메일서버를 구현하기 전에 네임서버를 구현하자</h4><h5 id="1-1-다음을-서버에서-실행하자"><a href="#1-1-다음을-서버에서-실행하자" class="headerlink" title="1.1 다음을 서버에서 실행하자"></a>1.1 다음을 서버에서 실행하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># vi /etc/hostname    </div><div class="line">   첫줄 지우고 mail.naver.com 입력</div><div class="line"></div><div class="line"># vi /etc/hosts</div><div class="line">   맨 뒤에 다음 입력</div><div class="line">   192.168.111.100     mail.naver.com</div><div class="line"></div><div class="line"># yum -y install sendmail   //메일서버를 구현하려면 sendmail이 설치되어 있어야함</div><div class="line"># vi /etc/mail/local-host-names</div><div class="line">    아래 mail.naver.com 입력</div><div class="line"></div><div class="line"># vi /etc/sysconfig/network</div><div class="line">    HOSTNAME=mail.naver.com 입력</div><div class="line"></div><div class="line"># reboot</div></pre></td></tr></table></figure>
<h5 id="1-2-다음을-서버-B에서-실행하자"><a href="#1-2-다음을-서버-B에서-실행하자" class="headerlink" title="1.2 다음을 서버 B에서 실행하자"></a>1.2 다음을 서버 B에서 실행하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># yum -y install sendmail</div><div class="line"></div><div class="line"># vi /etc/hostname</div><div class="line">    첫줄 지우고 mail.daum.net 입력</div><div class="line"></div><div class="line"># vi /etc/hosts</div><div class="line">   맨 뒤에 다음 입력</div><div class="line">   192.168.111.200     mail.daum.net</div><div class="line"></div><div class="line"># vi /etc/mail/local-host-names</div><div class="line">    아래 mail.daum.net 입력</div><div class="line"></div><div class="line"># vi /etc/sysconfig/network</div><div class="line">    HOSTNAME=mail.daum.net 입력</div><div class="line"></div><div class="line"># reboot    </div></pre></td></tr></table></figure>
<h5 id="1-3-서버를-마스터네임-서버로-만들자-서버에서-실행하자"><a href="#1-3-서버를-마스터네임-서버로-만들자-서버에서-실행하자" class="headerlink" title="1.3 서버를 마스터네임 서버로 만들자 (서버에서 실행하자)"></a>1.3 서버를 마스터네임 서버로 만들자 (서버에서 실행하자)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"># yum -y install bind bind-chroot</div><div class="line"></div><div class="line"># vi /etc/named.conf</div><div class="line">:set number</div><div class="line">11행 127.0.0.1 지우고 any로</div><div class="line">12행 ::1 지우고 none로</div><div class="line">17행 localhost 지우고 any로</div><div class="line">여기까지만 하면 캐싱전용 네임서버이다.</div><div class="line">우리가 만들것은 마스터 네임서버이므로 맨아래 다음을 추가</div><div class="line">zone      &quot;naver.com&quot;     IN &#123;</div><div class="line">          type        master;</div><div class="line">          file        &quot;naver.com.db&quot;;</div><div class="line">          allow-update  &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line">zone 위에 커서 올리고 5yy 누르고 p(5줄 복사)</div><div class="line">zone      &quot;daum.net&quot;     IN &#123;</div><div class="line">          type        master;</div><div class="line">          file        &quot;daum.net.db&quot;;</div><div class="line">          allow-update  &#123; none; &#125;;</div><div class="line">&#125;;</div><div class="line">저장 후 종료</div><div class="line"></div><div class="line"># cd /var/named</div><div class="line"># touch naver.com.db</div><div class="line"># vi naver.com.db</div><div class="line">$TTL          3H</div><div class="line">@             SOA    @  root.  ( 2 1D 1H 1W 1H )</div><div class="line">              IN     NS @</div><div class="line">              IN     A  192.168.111.100</div><div class="line">              IN     MX 10    mail.naver.com.      </div><div class="line">              //달라진부분; mail exchange 메일이 오면 mail.naver.com한테 메일처리를 하게해라</div><div class="line">mail          IN     A  192.168.111.100</div><div class="line"></div><div class="line"># cp naver.com.db    daum.net.db</div><div class="line">      //내용이 비슷하니까 복붙</div><div class="line"># vi daum.net.db</div><div class="line">$TTL          3H</div><div class="line">@             SOA    @  root.  ( 2 1D 1H 1W 1H )</div><div class="line">              IN     NS @</div><div class="line">              IN     A  192.168.111.200</div><div class="line">              IN     MX 10    mail.daum.net.</div><div class="line"></div><div class="line">mail          IN     A  192.168.111.200</div><div class="line">으로 수정</div><div class="line"></div><div class="line"># named-checkconf   //name.conf파일을 확인</div><div class="line">    //아무메세지가 없으면 문법문제 없음</div><div class="line"># named-checkzone naver.com  naver.com.db</div><div class="line"># named-checkzone daum.net  daum.net.db</div><div class="line"></div><div class="line">포트는 여러개 열어야 하는데 복잡하므로 아얘</div><div class="line">포트문제는 생기지 않도록 다 열어놓자. 즉 방화벽을 꺼놓자.</div><div class="line"># systemctl  stop  firewalld    //방화벽 끄기</div><div class="line"># systemctl  disable firewalld  //재부팅해도 꺼지도록</div><div class="line"></div><div class="line"># systemctl restart named   //네임서버 시작</div><div class="line"># systemctl enable named    //재부팅해도 켜지도록</div><div class="line"></div><div class="line"># systemctl status named    //잘 돌고있는지 확인</div><div class="line"></div><div class="line"># nslookup //실제 내부에서 잘동작하는지 확인</div><div class="line">&gt;server 192.168.111.100</div><div class="line">&gt;mail.naver.com</div><div class="line">Address: 192.168.111.100  //성공</div><div class="line"></div><div class="line">&gt;mail.daum.net</div><div class="line">Address: 192.168.111.200  //성공</div></pre></td></tr></table></figure>
<h4 id="2-각-컴퓨터의-로컬네임-서버를-생성한-네임서버로-지정하자"><a href="#2-각-컴퓨터의-로컬네임-서버를-생성한-네임서버로-지정하자" class="headerlink" title="2.각 컴퓨터의 로컬네임 서버를 생성한 네임서버로 지정하자"></a>2.각 컴퓨터의 로컬네임 서버를 생성한 네임서버로 지정하자</h4><h5 id="2-1-서버의-네임서버를-지정"><a href="#2-1-서버의-네임서버를-지정" class="headerlink" title="2.1 서버의 네임서버를 지정"></a>2.1 서버의 네임서버를 지정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># cd /etc/sysconfig/network-scripts/</div><div class="line"># ls      //수정할 파일을 확인하자 ens....</div><div class="line"># # vi ifcfg-ens32  // 껏다 켜도 유지되도록 설정</div><div class="line">DNS1=192.168.111.100 으로 하자</div><div class="line"># systemctl restart network</div><div class="line"># cat /etc/resolv.conf    //확인</div></pre></td></tr></table></figure>
<h5 id="서버-B의-네임서버를-지정"><a href="#서버-B의-네임서버를-지정" class="headerlink" title="서버 B의 네임서버를 지정"></a>서버 B의 네임서버를 지정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># cd /etc/sysconfig/network-scripts/</div><div class="line"># ls      //수정할 파일을 확인하자 ens....</div><div class="line"># # vi ifcfg-ens32  // 껏다 켜도 유지되도록 설정</div><div class="line">DNS1=192.168.111.100 으로 하자</div><div class="line"># systemctl restart network</div><div class="line"># cat /etc/resolv.conf    //확인</div></pre></td></tr></table></figure>
<h5 id="2-2-클라이언트의-네임서버-지정"><a href="#2-2-클라이언트의-네임서버-지정" class="headerlink" title="2.2 클라이언트의 네임서버 지정"></a>2.2 클라이언트의 네임서버 지정</h5><p>클라이언트는 고정ip가 아니기 때문에 껏다 켜면 vmware가 제공하는 2번으로 바뀌기 때문에 클라이언트는 껏다 켜지 않겠다. 그러므로 conf파일만 수정하자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ su -</div><div class="line"># vi /etc/resolv.conf</div><div class="line">nameserver 192.168.111.100</div><div class="line">으로 수정</div><div class="line"># exit</div><div class="line"></div><div class="line"># nslookup</div><div class="line">&gt; mail.daum.net</div><div class="line">Address: 192.168.111.200   //확인</div><div class="line"></div><div class="line">&gt; mail.naver.com</div><div class="line">Address: 192.168.111.100  //확인</div></pre></td></tr></table></figure></p>
<h5 id="2-3-윈도우-클라이언트-설정"><a href="#2-3-윈도우-클라이언트-설정" class="headerlink" title="2.3 윈도우 클라이언트 설정"></a>2.3 윈도우 클라이언트 설정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cmd 열기</div><div class="line"></div><div class="line">ipconfig    //</div><div class="line">이더넷 어댑터 로컬 영역 연결</div><div class="line"></div><div class="line">netsh interface ip set dns &quot;로컬 영역 연결&quot; static 192.168.111.100</div><div class="line"></div><div class="line">ping mail.daum.net</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;메일서버&quot;&gt;&lt;a href=&quot;#메일서버&quot; class=&quot;headerlink&quot; title=&quot;메일서버&quot;&gt;&lt;/a&gt;메일서버&lt;/h3&gt;&lt;p&gt;네임서버에 대한이해가 필수적이므로 이해하고 넘어올것.&lt;br&gt;E-mail의 송수신에서 사용되는 프로토콜&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>9장. 마스터 네임서버 구축, 라운드 로빈 방식 네임서버</title>
    <link href="http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux26/"/>
    <id>http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux26/</id>
    <published>2017-07-09T05:49:08.000Z</published>
    <updated>2017-07-10T15:57:33.506Z</updated>
    
    <content type="html"><![CDATA[<p>앞에한건 캐싱전용이었다.<br>캐싱전용네임서버 - 자기가 관리하는건 없고 무조건 밖에 나가서 알아다가 알려줌.</p>
<p>마스터 네임 서버 - 자기가 관리하는 것들이 있다.</p>
<h4 id="마스터-네임-서버-구축"><a href="#마스터-네임-서버-구축" class="headerlink" title="마스터 네임 서버 구축"></a>마스터 네임 서버 구축</h4><h5 id="1-웹서버-하나-간단하게-만들자-서버"><a href="#1-웹서버-하나-간단하게-만들자-서버" class="headerlink" title="1. 웹서버 하나 간단하게 만들자(서버)"></a>1. 웹서버 하나 간단하게 만들자(서버)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># rpm -qa httpd   //설치가 되어있다.</div><div class="line"># systemctl status httpd  //시작되어있나 확인</div><div class="line"># systemctl restart httpd //시작</div><div class="line"># firewall-config</div><div class="line">영구적 - http 체크 - firewalld 다시불러오기</div><div class="line"># vi /var/www/html/index.html</div><div class="line">&lt;h1&gt; CentOS 7 홈피 입니다&lt;/h1&gt; //삽입</div></pre></td></tr></table></figure>
<h5 id="2-ftp서버-간단하게-만들자-서버B"><a href="#2-ftp서버-간단하게-만들자-서버B" class="headerlink" title="2. ftp서버 간단하게 만들자(서버B)"></a>2. ftp서버 간단하게 만들자(서버B)</h5><p>서버 B를 켠다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># yum -y install vsftpd</div><div class="line"># firewall-cmd --permanent --add-service=ftp  //방화벽설정</div><div class="line"># firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<h5 id="3-환경설정을-해주자-서버"><a href="#3-환경설정을-해주자-서버" class="headerlink" title="3. 환경설정을 해주자(서버)"></a>3. 환경설정을 해주자(서버)</h5><p>서버에서<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># vi /etc/named.conf</div><div class="line">:set number</div><div class="line">맨아래 가서</div><div class="line">zone &quot;centos.com&quot; IN &#123;type master;</div><div class="line">                      file &quot;centos.com.db&quot;;</div><div class="line">                      allow-update&#123;none;&#125;;</div><div class="line">&#125;;</div><div class="line">입력. 이 의미는 서버컴퓨터는 centos.com의 마스터 네임서버다. 그리고 상세정보는 centos.com.db(임의로 지은것)에 들어있다.</div><div class="line"></div><div class="line"># named-checkconf   //방금작성한것 문법적으로 잘못된것 없나 확인</div></pre></td></tr></table></figure></p>
<h5 id="4-centos-com-db를-만들자-서버"><a href="#4-centos-com-db를-만들자-서버" class="headerlink" title="4. centos.com.db를 만들자(서버)"></a>4. centos.com.db를 만들자(서버)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># cd /var/named</div><div class="line"># pwd</div><div class="line"># ls</div><div class="line"># touch centos.com.db</div><div class="line"># vi centos.com.db</div><div class="line">아래 추가</div><div class="line">$TTL 3H</div><div class="line">@    SOA  @   root. (2 1D 1H 1W 1H)</div><div class="line">     IN   NS  @</div><div class="line">     IN   A   192.168.111.100</div><div class="line"></div><div class="line">www  IN   A   192.168.111.100</div><div class="line">ftp  IN   A   192.168.111.200</div><div class="line"></div><div class="line">위 세줄은 항상 써주는것.</div><div class="line">네번째는 자기 자신의 ip 입력</div><div class="line">나머지 아래 두줄은 알려줄것.</div><div class="line"></div><div class="line"># named-checkzone centos.com centos.com.db   //오류있는지 확인</div><div class="line"># systemctl restart named</div><div class="line">방화벽 설정은 앞에서 해줬으니 안해도됨</div></pre></td></tr></table></figure>
<h5 id="5-접속-테스트해보자"><a href="#5-접속-테스트해보자" class="headerlink" title="5. 접속 테스트해보자"></a>5. 접속 테스트해보자</h5><p>클라이언트 켜자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ su -</div><div class="line">$ vi /etc/resolv.conf</div><div class="line">맨 아래 192.168.111.100 으로 수정</div><div class="line"></div><div class="line">www.centos.com 접속해보자</div></pre></td></tr></table></figure><br>ftp 접속해보자<br>서버 B에서 다음을 실행하자(ftp서비스 시작)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># systemctl restart vsftpd</div><div class="line"># systemctl status vsftpd</div></pre></td></tr></table></figure><br>클라이언트에서 접속해보자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># ftp ftp.centos.com</div><div class="line"> // anonymous</div><div class="line"> //엔터</div></pre></td></tr></table></figure></p>
<h4 id="라운드-로빈-방식의-네임-서버"><a href="#라운드-로빈-방식의-네임-서버" class="headerlink" title="라운드 로빈 방식의 네임 서버"></a>라운드 로빈 방식의 네임 서버</h4><p>이전에 실습한 방식은 여러명이 동시에 접속할 경우 서버 하나에 부하가 걸린다. 그래서 웹 서버를 여러개 만들어서 요청이 들어올 때마다 번갈아가면서 요청처리.</p>
<h5 id="네이버가-이-방식을-쓴다"><a href="#네이버가-이-방식을-쓴다" class="headerlink" title="네이버가 이 방식을 쓴다."></a>네이버가 이 방식을 쓴다.</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># nslookup</div><div class="line">www.naver.com</div><div class="line">두개가 넘어온다.</div></pre></td></tr></table></figure>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습."></a>실습.</h4><p>www.john.com 으로 접속 했을 때 각각 다른 페이지를 뿌려주는실습.(라운드로빈 방식 확인가능)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># nslookup</div><div class="line">&gt; www.yes24.com     //아이피 주소를 확인하기위해</div><div class="line">&gt; www.danawa.com   //아이피 주소를 확인하기위해</div><div class="line">&gt; www.nate.com     //아이피 주소를 확인하기위해</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># cd /var/named</div><div class="line"># vi centos.com.db</div><div class="line"></div><div class="line">아래 두줄 지우고 다음으로 대체</div><div class="line">www          IN      CNAME       webserver.centos.com.</div><div class="line">webserver    100     IN          A     61.111.13.51</div><div class="line">             200     IN          A     119.205.194.11</div><div class="line">             300     IN          A     120.50.131.112</div><div class="line"></div><div class="line">순차적으로 주소를 알려준다. 100,200,300 은 순차번호이다.</div><div class="line"></div><div class="line"># systemctl restart named</div><div class="line"># nslookup</div><div class="line">&gt;server 192.168.111.100</div><div class="line">&gt;www.centos.com</div><div class="line">결과가 세개가 온다.</div><div class="line"></div></pre></td></tr></table></figure>
<h5 id="클라이언트에서-접속해보자"><a href="#클라이언트에서-접속해보자" class="headerlink" title="클라이언트에서 접속해보자"></a>클라이언트에서 접속해보자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># vi /etc/resolv.conf</div><div class="line">//192.168.111.100 이 맞나 확인</div><div class="line">//아니면 설정하기</div></pre></td></tr></table></figure>
<p>웹 브라우져 닫고<br>www.centos.com 들어가보자(여러번)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;앞에한건 캐싱전용이었다.&lt;br&gt;캐싱전용네임서버 - 자기가 관리하는건 없고 무조건 밖에 나가서 알아다가 알려줌.&lt;/p&gt;
&lt;p&gt;마스터 네임 서버 - 자기가 관리하는 것들이 있다.&lt;/p&gt;
&lt;h4 id=&quot;마스터-네임-서버-구축&quot;&gt;&lt;a href=&quot;#마스터
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>9장. 도메인 이름 체계 개념, 캐싱 전용 네임서버 구축</title>
    <link href="http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux25/"/>
    <id>http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux25/</id>
    <published>2017-07-09T01:29:00.000Z</published>
    <updated>2017-07-10T15:51:05.334Z</updated>
    
    <content type="html"><![CDATA[<p>초창기 인터넷에서는 1대의 네임 서버만으로 충분히 IP주소와 이름의 관리가 가능했다.</p>
<p>하지만 인터넷이 확장되면서 그것이 도메인 이름 체계가 고안되었다.</p>
<p>원칙은 www.nate.com. 이다. 맨 뒤에 .을 붙여줘야 한다.</p>
<h4 id="로컬-네임서버가-작동하는-순서"><a href="#로컬-네임서버가-작동하는-순서" class="headerlink" title="로컬 네임서버가 작동하는 순서"></a>로컬 네임서버가 작동하는 순서</h4><h5 id="www-nate-com-접속과정"><a href="#www-nate-com-접속과정" class="headerlink" title="www.nate.com. 접속과정"></a>www.nate.com. 접속과정</h5><p>1./etc/hosts 를 보고 없으면 /etc/resolv.conf 에 있는 로컬 네임서버를 참고한다.<br>2.하지만 이 로컬네임서버도 많은것을 알지 못하므로 얘도 루트 네임서버한테 물어본다. 이렇게. “내가지금 www.nate.com으로 가려한다.”<br>3.그러면 루트네임서버가 “그건 내가 모르지만 내가 관리하는 com의 네임서버 ip를 줄게”<br>4.그러면 로컬네임서버는 다시 com네임서버에게 다시 물어본다<br>5.그러면 com네임서버가 nate ip를 알려준다. 그러면 nate.com아이피는 www의 ip를 응답해준다.</p>
<h5 id="www-daum-net-접속과정"><a href="#www-daum-net-접속과정" class="headerlink" title="www.daum.net. 접속과정"></a>www.daum.net. 접속과정</h5><p>루트네임서버 -&gt; net 네임서버 -&gt;daum네임서버 -&gt;www네임서버</p>
<h4 id="이제-우리가-할-실습"><a href="#이제-우리가-할-실습" class="headerlink" title="이제 우리가 할 실습!"></a>이제 우리가 할 실습!</h4><p>/etc/resolv.conf  에 있는 로컬네임서버를 만드는것.<br>서버컴퓨터 : 캐싱전용 네임서버 (PC에서 URL로 IP주소를 얻고자 할 때 해당하는 URL의 IP주소를 알려주는 네임 서버를 말함)</p>
<p>클라이언트,서버B 에서 /etc/resolv.conf의 주소를 서버컴퓨터로 한다.</p>
<h4 id="서버-설정"><a href="#서버-설정" class="headerlink" title="서버 설정"></a>서버 설정</h4><h5 id="1-관련-패키지-설치"><a href="#1-관련-패키지-설치" class="headerlink" title="1. 관련 패키지 설치"></a>1. 관련 패키지 설치</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum -y install bind bind-chroot</div></pre></td></tr></table></figure>
<h5 id="2-누가-서버컴퓨터로-물어보든-응답해주게-설정"><a href="#2-누가-서버컴퓨터로-물어보든-응답해주게-설정" class="headerlink" title="2. 누가 서버컴퓨터로 물어보든 응답해주게 설정"></a>2. 누가 서버컴퓨터로 물어보든 응답해주게 설정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># vi /etc/named.conf     //캐싱정보관련 설정파일</div><div class="line">:set number</div><div class="line">11행 보면 127.0.0.1 지우고 any로 변경 //누가 서비스를 요청하던 제공하겠다</div><div class="line">12행 ::1 지우고 none로 변경</div><div class="line">17행 localhost any로 변경</div><div class="line">named.conf 파일을 수정함으로서 누가 서버컴퓨터가 누가물어보든 응답을 해준다.</div></pre></td></tr></table></figure>
<h5 id="3-서비스-재시작-및-환경설정"><a href="#3-서비스-재시작-및-환경설정" class="headerlink" title="3. 서비스 재시작 및 환경설정"></a>3. 서비스 재시작 및 환경설정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># systemctl restart named //네임서버의 서비스 이름은 named</div><div class="line"># systemctl status named    //작동여부 확인</div><div class="line">disable 가 있다는건 껏다켜도 동작하지 않는다는것.</div><div class="line"># systemctl enable named   //껏다켜도 작동하도록 설정</div><div class="line"></div><div class="line"># firewall-config</div><div class="line">영구적 선택 -&gt; dns 선택-&gt; 옵션/firewalld다시불러오기</div><div class="line"></div><div class="line"># nslookup    //내부적으로 잘돌아가는지 테스트</div><div class="line">&gt;server 192.168.111.100</div><div class="line">&gt;www.daum.net</div><div class="line">&gt;exit</div></pre></td></tr></table></figure>
<h4 id="클라이언트-설정"><a href="#클라이언트-설정" class="headerlink" title="클라이언트 설정"></a>클라이언트 설정</h4><h5 id="Client-켜고-실행"><a href="#Client-켜고-실행" class="headerlink" title="Client 켜고 실행"></a>Client 켜고 실행</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># su -c &apos;vi /etc/resolv.conf&apos;</div><div class="line">password 입력</div><div class="line"></div><div class="line">192.168.111.100 으로 수정</div><div class="line"></div><div class="line">파이어폭스로 아무데나 접속해보자</div></pre></td></tr></table></figure>
<h5 id="Server-B-켜고-실행"><a href="#Server-B-켜고-실행" class="headerlink" title="Server B 켜고 실행"></a>Server B 켜고 실행</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># vi /etc/resolv.conf</div><div class="line">password 입력</div><div class="line"></div><div class="line">192.168.111.100 으로 수정</div><div class="line"></div><div class="line"># ping -c 3 www.yahoo.com</div><div class="line"></div><div class="line"># yum -y install elinks //텍스트모드의 웹브라우져</div><div class="line"># elinks    //실행</div></pre></td></tr></table></figure>
<h5 id="윈도우에서-설정"><a href="#윈도우에서-설정" class="headerlink" title="윈도우에서 설정"></a>윈도우에서 설정</h5><p>제어판 열기<br>네트워크 상태 및 작업보기<br>로컬영역 연결 클릭<br>속성<br>IPv4 속성<br>다음 dns 서버 주소 사용<br>기본 설정 DNS 서버에 192.168.111.100 입력</p>
<h5 id="윈도우에서-원래대로-돌리기"><a href="#윈도우에서-원래대로-돌리기" class="headerlink" title="윈도우에서 원래대로 돌리기"></a>윈도우에서 원래대로 돌리기</h5><p>cmd 열고<br>ipconfig 입력<br>이더넷 어댑터 뒤에있는 글자 복사.</p>
<p>netsh interface ip set dns “로컬 영역 연결” dhcp<br>//로컬 영역 연결은 (이더넷 어댑터 뒤에있는 글자)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;초창기 인터넷에서는 1대의 네임 서버만으로 충분히 IP주소와 이름의 관리가 가능했다.&lt;/p&gt;
&lt;p&gt;하지만 인터넷이 확장되면서 그것이 도메인 이름 체계가 고안되었다.&lt;/p&gt;
&lt;p&gt;원칙은 www.nate.com. 이다. 맨 뒤에 .을 붙여줘야 한다.
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>9장. 네임서버 개념, IP주소 획득 흐름</title>
    <link href="http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux24/"/>
    <id>http://KKimSangHeon.github.io/2017/07/09/ThisIsLinux24/</id>
    <published>2017-07-09T00:07:45.000Z</published>
    <updated>2017-07-10T15:51:04.205Z</updated>
    
    <content type="html"><![CDATA[<h3 id="네임서배-개요"><a href="#네임서배-개요" class="headerlink" title="네임서배 개요"></a>네임서배 개요</h3><p>네임서버=DNS(Domain Name System)서버<br>도메인 이름을 IP주소로 변환시켜 주는 역할 = 이름해석<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># nslookup    //컴퓨터에 연결된 네임서버를 조회</div><div class="line">&gt; server    //도메인 이름을 칠 때 물어보는 주소 조회</div><div class="line">Default server: 192.168.111.2</div><div class="line">Address: 192.168.111.2#53</div><div class="line"></div><div class="line">&gt; www.nate.com</div><div class="line">Server:		192.168.111.2</div><div class="line">Address:	192.168.111.2#53</div><div class="line"></div><div class="line">exit</div></pre></td></tr></table></figure></p>
<h4 id="네임서버의-위치를-저장해-놓는곳은"><a href="#네임서버의-위치를-저장해-놓는곳은" class="headerlink" title="네임서버의 위치를 저장해 놓는곳은?"></a>네임서버의 위치를 저장해 놓는곳은?</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># cat /etc/resolv.conf</div><div class="line">Generated by NetworkManager</div><div class="line">nameserver 192.168.111.2</div></pre></td></tr></table></figure>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># vi /etc/resolv.conf</div><div class="line">#을 넣어 두줄 다 주석처리.</div><div class="line">저장 후 종료</div><div class="line">www.nate.com 접속되지 않음</div><div class="line"></div><div class="line"># vi /etc/hosts</div><div class="line">211.234.241.205    www.nate.com 추가</div><div class="line">저장 후 종료</div><div class="line"></div><div class="line">www.nate.com 접속 가능</div><div class="line"></div><div class="line">네임서버가 죽어있는데 열린다. /etc/hosts에 먼저 접근 후</div><div class="line">resolv.conf파일에 접근한다.</div><div class="line">즉 수첩에 전화번호가 적혀있으면 114에 전화하지 않는것.</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="nate-com-접속방식"><a href="#nate-com-접속방식" class="headerlink" title="nate.com 접속방식"></a>nate.com 접속방식</h4><p>웹브라우저에서 www.nate.com을 치면 /etc/hosts에 접근하여 해당 ip가 있는지 확인을 한다. 존재 할 경우 그 ip로 접속하고 존재하지 않을 경우 /etc/resolv.conf 로 가서 네임서버를 확인하고 해당 ip주소를 알아온다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;네임서배-개요&quot;&gt;&lt;a href=&quot;#네임서배-개요&quot; class=&quot;headerlink&quot; title=&quot;네임서배 개요&quot;&gt;&lt;/a&gt;네임서배 개요&lt;/h3&gt;&lt;p&gt;네임서버=DNS(Domain Name System)서버&lt;br&gt;도메인 이름을 IP주소로 변환
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>8장. SSH서버, VNC서버</title>
    <link href="http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux23/"/>
    <id>http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux23/</id>
    <published>2017-07-08T09:16:00.000Z</published>
    <updated>2017-07-10T15:51:06.159Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SSH서버"><a href="#SSH서버" class="headerlink" title="SSH서버"></a>SSH서버</h3><p>텔넷과 용도는 동일하지만 보안이 강화되어있음<br>명령문을 입력 시 암호화 되어서 날라간다. SSH서버를 쓰는것이 권장사항이다. CentOS에서 쓰는 SSH서느는 openSSH 서버라 함.</p>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h4><h5 id="1-서버가-설치되었는지-확인"><a href="#1-서버가-설치되었는지-확인" class="headerlink" title="1.서버가 설치되었는지 확인"></a>1.서버가 설치되었는지 확인</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep openssh</div><div class="line">설치되어있다.</div></pre></td></tr></table></figure>
<h5 id="2-가동되고-있는지-확인"><a href="#2-가동되고-있는지-확인" class="headerlink" title="2.가동되고 있는지 확인"></a>2.가동되고 있는지 확인</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># systemctl status sshd</div><div class="line">Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled)      //enable는 상시가동이라는 뜻</div><div class="line">Active: active (running) since 토 2017-07-08 17:43:06 KST; 1h 5min ago //돌고 있다.</div><div class="line">즉 ssh는 기본적으로 centos에서 깔려있고 가동되어 있다.</div><div class="line">기본적으로 쓰인다!!!</div></pre></td></tr></table></figure>
<h5 id="3-방화벽-열렸는지-여부-확인"><a href="#3-방화벽-열렸는지-여부-확인" class="headerlink" title="3.방화벽 열렸는지 여부 확인"></a>3.방화벽 열렸는지 여부 확인</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># firewall-config</div><div class="line">쭉 내리면 ssh가 켜져있다.</div></pre></td></tr></table></figure>
<h5 id="4-새로운-리눅스-Client-에서-접속해보자"><a href="#4-새로운-리눅스-Client-에서-접속해보자" class="headerlink" title="4.새로운 리눅스(Client)에서 접속해보자"></a>4.새로운 리눅스(Client)에서 접속해보자</h5><p>클라이언트 켜자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep openssh  //깔려있나확인</div><div class="line"></div><div class="line"># ssh teluser@192.168.111.100   //telnet와 접속방법이 다름</div><div class="line"># ifconfig  //서버컴퓨터의 아이피 확인</div></pre></td></tr></table></figure></p>
<h5 id="5-윈도우에서-접속해보자"><a href="#5-윈도우에서-접속해보자" class="headerlink" title="5.윈도우에서 접속해보자"></a>5.윈도우에서 접속해보자</h5><p>Putty 설치<br>192.168.111.100 접속<br>참고로 ssh는 포트 22 telnet는 23<br>한글이 깨지면 오른쪽 누르고 유니코드로 전환<br>abc.txt를 하나 만들고 gedit abc.txt를 실행하면 되질 않는다.<br>왜냐하면 텔넷,SSH는 텍스트 모드로만 전송이 되기 때문에.<br>즉 그래픽 명령어는 아얘 쓸 수 없다.</p>
<h4 id="그럼-telnet-ssh-다른점이-없는건가"><a href="#그럼-telnet-ssh-다른점이-없는건가" class="headerlink" title="그럼 telnet ssh 다른점이 없는건가?"></a>그럼 telnet ssh 다른점이 없는건가?</h4><p>그렇다. 기능은 같으나 ssh가 보안이 추가된 것이다.</p>
<h3 id="VNC-서버"><a href="#VNC-서버" class="headerlink" title="VNC 서버"></a>VNC 서버</h3><p>X 윈도우 환경으로 원격접속을 사용하고 싶을 때.<br>telnet ,ssh 보다 많이 느리다. 그래픽이 왔다갔다하기 때문에!</p>
<h4 id="1-VNC-설치-및-설정"><a href="#1-VNC-설치-및-설정" class="headerlink" title="1.VNC 설치 및 설정"></a>1.VNC 설치 및 설정</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep tiger  //설치유무 확인</div><div class="line">//미니멈 버전이 깔려있다. 다시깔자</div><div class="line"># yum -y install tigervnc-server</div></pre></td></tr></table></figure>
<p>VNC는 사용자한테 너 접속해, 너 화면번호 몇번 써 를 지정해야한다.</p>
<h4 id="2-센토스-사용자-너-1번화면으로-접속해를-설정"><a href="#2-센토스-사용자-너-1번화면으로-접속해를-설정" class="headerlink" title="2.센토스 사용자 너 1번화면으로 접속해를 설정"></a>2.센토스 사용자 너 1번화면으로 접속해를 설정</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service</div><div class="line">//1번화면을 쓰기위한 작업</div><div class="line"># vi /etc/systemd/system/vncserver@\:1.service</div><div class="line"> :set number</div><div class="line">40행,41행 의 &lt;USER&gt;을 지워버리고 centos로 고침</div><div class="line"> 그리고 저장 후 종료</div></pre></td></tr></table></figure>
<h4 id="3-방화벽-열기"><a href="#3-방화벽-열기" class="headerlink" title="3.방화벽 열기"></a>3.방화벽 열기</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># firewall-config</div></pre></td></tr></table></figure>
<p>설정에서 영구적 선택<br>쭉 내려서 vnc-server체크<br>옵션에서 firewalld 다시불러오기 클릭</p>
<h4 id="4-centos사용자가-1번화면으로-들어올-때-전용-비밀번호를-생성"><a href="#4-centos사용자가-1번화면으로-들어올-때-전용-비밀번호를-생성" class="headerlink" title="4.centos사용자가 1번화면으로 들어올 때 전용 비밀번호를 생성"></a>4.centos사용자가 1번화면으로 들어올 때 전용 비밀번호를 생성</h4><p>즉 vnc 전용 비밀번호 생성<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># su - centos</div><div class="line"># vncserver</div><div class="line">암호는 123456으로 설정</div></pre></td></tr></table></figure></p>
<h4 id="5-접속해보자"><a href="#5-접속해보자" class="headerlink" title="5.접속해보자"></a>5.접속해보자</h4><p>리눅스 클라이언트에서 접속<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># rpm -qa | grep tiger  //깔려있지 않은것을 확인</div><div class="line"></div><div class="line"># su -c &apos;yum -y install tigervnc&apos;   //루트 권한으로 실행하는것.</div><div class="line"># vncviewer 192.168.111.100:1   //1은 디스플레이 번호</div><div class="line">  password 입력</div></pre></td></tr></table></figure><br>윈도우 클라이언트에서 접속<br>카페이서 tigervnc 설치파일 깔기<br>옵션해서 해상도를 낮추면 사용할만 함(color level)<br>tigervnc vncviewer을 켜고<br>192.168.111.100:1 입력하고 암호 123456</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;SSH서버&quot;&gt;&lt;a href=&quot;#SSH서버&quot; class=&quot;headerlink&quot; title=&quot;SSH서버&quot;&gt;&lt;/a&gt;SSH서버&lt;/h3&gt;&lt;p&gt;텔넷과 용도는 동일하지만 보안이 강화되어있음&lt;br&gt;명령문을 입력 시 암호화 되어서 날라간다. SSH서버를
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>8장. 텔넷서버</title>
    <link href="http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux22/"/>
    <id>http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux22/</id>
    <published>2017-07-08T08:32:45.000Z</published>
    <updated>2017-07-10T15:54:38.124Z</updated>
    
    <content type="html"><![CDATA[<p>이번장은 상당히 중요하다. 앞으로의 모든 장은 네트워크 서버를 구축하는데 8장이 첫 구축이다. 그러므로 8장을 잘 이해하면 큰 흐름을 이해 할 수 있다.</p>
<h4 id="텔넷서버"><a href="#텔넷서버" class="headerlink" title="텔넷서버"></a>텔넷서버</h4><p>오랫동안 전통적으로 사용되어 온 원격 접속 방법이다.<br>텔넷 서버에 접속하려면 텔넷 클라이언트를 쓰면 된다. 각 서버마다 해당되는 클라이언트가 존재한다.</p>
<h4 id="텔넷-서버-구축-단계"><a href="#텔넷-서버-구축-단계" class="headerlink" title="텔넷 서버 구축 단계"></a>텔넷 서버 구축 단계</h4><p>1.텔넷 서버 설치<br>2.텔넷 서비스 시작<br>3.텔넷 전용 사용자 생성<br>4.방화벽 설정(포트 열기)<br>5.텔넷 서비스 상시가동<br>6.클라이언트에서 접속</p>
<h3 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h3><p>모든 가상머신을 초기화하자!</p>
<h5 id="1-텔넷-서버-설치"><a href="#1-텔넷-서버-설치" class="headerlink" title="1.텔넷 서버 설치"></a>1.텔넷 서버 설치</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># rpm -qa  | grep telnet     //텔넷이 설치되었나 확인</div><div class="line"># yum -y install telnet-server    //설치되어있지 않아 설치</div></pre></td></tr></table></figure>
<h5 id="2-텔넷-서버-서비스-시작"><a href="#2-텔넷-서버-서비스-시작" class="headerlink" title="2.텔넷 서버 서비스 시작"></a>2.텔넷 서버 서비스 시작</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># systemctl restart telnet.socket</div><div class="line">    //restart는 시작이 안되어있으면 새로 시작하고 시작되어있으면 재시작함.</div><div class="line"></div><div class="line"># systemctl status telnet.socket  </div><div class="line">      //가동여부 확인</div></pre></td></tr></table></figure>
<h5 id="3-텔넷-전용-사용자-생성"><a href="#3-텔넷-전용-사용자-생성" class="headerlink" title="3.텔넷 전용 사용자 생성"></a>3.텔넷 전용 사용자 생성</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># adduser teluser</div><div class="line"># passwd teluser  //1234로 설정</div></pre></td></tr></table></figure>
<h5 id="4-방화벽-설정-포트-열기"><a href="#4-방화벽-설정-포트-열기" class="headerlink" title="4.방화벽 설정(포트 열기)"></a>4.방화벽 설정(포트 열기)</h5><p>외부에서 접속이 가능하기 위해서 여는 것이므로 일단 내부에서 잘 접속이 되는지 확인 후 에 방화벽을 열자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># yum -y install telnet //텔넷 클라이언트 프로그램 설치</div><div class="line"># telnet 127.0.0.1    //자기 자신으로 접속</div><div class="line">  teluser / 1234 입력</div><div class="line"># exit //종료  </div><div class="line"></div><div class="line"> 이제 방화벽 설정하자</div><div class="line"># firewall-config   //설정차을 띄우자</div><div class="line"> 설정 영구적 탭 선택  //서버는 한번 쓰는게 아니라 영원히 쓰기 때문에.</div><div class="line"> 영역 탭의 public 선택 후 서비스에서 telnet 체크</div><div class="line"> 옵션-&gt;Firewall 다시불러오기</div><div class="line"> 이제 포트가 열렸다.</div></pre></td></tr></table></figure></p>
<h5 id="5-텔넷-서비스-상시가동"><a href="#5-텔넷-서비스-상시가동" class="headerlink" title="5.텔넷 서비스 상시가동"></a>5.텔넷 서비스 상시가동</h5><p>포트가 열렸지만 컴퓨터가 껏다 켜면 제대로 작동안하기 때문에 다음을 입력<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># systemctl enable telnet.socket    //껏다 켜도 유지됨</div></pre></td></tr></table></figure></p>
<h5 id="6-클라이언트에서-접속"><a href="#6-클라이언트에서-접속" class="headerlink" title="6.클라이언트에서 접속"></a>6.클라이언트에서 접속</h5><p>이제 윈 클라이언트를 부팅하고 접속해보자.<br>접속을 위해서는 서버의 IP주소가 필요하다. 서버에서 다음을 입력<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ifconfig //192.168.111.100</div></pre></td></tr></table></figure><br>IP주소 확인 했으니 윈 클라이언트로 가서 제어판-프로그램-프로그램 및기능<br>Windows 기능 사용/사용안함 가서 맨아래 텔넷 클라이언트 기능 설치</p>
<p>윈도우 cmd를 열자<br>그 후 telnet 192.168.111.100<br>teluser /1234 입력 후 엔터<br>접속이 된다.<br>exit로 종료</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;이번장은 상당히 중요하다. 앞으로의 모든 장은 네트워크 서버를 구축하는데 8장이 첫 구축이다. 그러므로 8장을 잘 이해하면 큰 흐름을 이해 할 수 있다.&lt;/p&gt;
&lt;h4 id=&quot;텔넷서버&quot;&gt;&lt;a href=&quot;#텔넷서버&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>7장. 셸 스크립트 프로그래밍</title>
    <link href="http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux21/"/>
    <id>http://KKimSangHeon.github.io/2017/07/08/ThisIsLinux21/</id>
    <published>2017-07-08T01:54:28.000Z</published>
    <updated>2017-07-08T05:39:45.800Z</updated>
    
    <content type="html"><![CDATA[<p>Centos의 기본 셸은 bash<br>셸은 명령어를 해석 해 주는 것이다.<br> -Alias, History, 연산 등의 기능을 갖는다.</p>
<h4 id="환경변수"><a href="#환경변수" class="headerlink" title="환경변수"></a>환경변수</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># echo $PATH //명령어를 실행하면</div><div class="line">          //명령어를 찾는 폴더들이 출력됨.</div></pre></td></tr></table></figure>
<h4 id="셸-스크립트-프로그래밍"><a href="#셸-스크립트-프로그래밍" class="headerlink" title="셸 스크립트 프로그래밍"></a>셸 스크립트 프로그래밍</h4><p>C언어와 유사하다.<br>변수, 반복문,제어문 등의 사용이 가능<br>vi, gedit으로 작성 가능</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># vi name.sh  //셸의 약자로 sh</div><div class="line">다음과 같이 입력</div><div class="line"></div><div class="line">#!/bin/sh     //셸은 이것을 무조건 쓴다.</div><div class="line">echo &quot;사용자이름: &quot;$USERNAME</div><div class="line">exit 0</div><div class="line"></div><div class="line">vi를 빠져나와서</div><div class="line"></div><div class="line"># sh name.sh  //실행 방법 1</div><div class="line"></div><div class="line"># chmod u+x name.sh   //실행방법2</div><div class="line"># ./name.sh       //실행방법2</div></pre></td></tr></table></figure>
<h5 id="변수의-기본"><a href="#변수의-기본" class="headerlink" title="변수의 기본"></a>변수의 기본</h5><p>변수를 사용하기 전에 미리 선언하지 않으며, 변수에 처음 값이 할당되면서 자동으로 변수가 생성<br>모든 변수는 ‘문자열(String)’로 취급<br>변수 이름은 대소문자를 구분<br>변수를 대입할 때 ‘=’ 좌우에는 공백이 없어야함</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># testval = Hello //에러발생. 공백존재</div><div class="line"></div><div class="line"># testval=Hello</div><div class="line"># echo $testval   //Hello 출력됨</div><div class="line"></div><div class="line"># testval=Yes Sir   //에러발생</div><div class="line"></div><div class="line"># testval=&quot;Yes Sir&quot;</div><div class="line"># echo $testval   //Yes Sir 출력</div><div class="line"></div><div class="line"># testval=7+5</div><div class="line"># echo testval    //7+5 출력</div><div class="line"></div><div class="line"># testval=&apos;expr 7+5&apos;</div><div class="line"># echo testval    //12 출력</div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos의 기본 셸은 bash&lt;br&gt;셸은 명령어를 해석 해 주는 것이다.&lt;br&gt; -Alias, History, 연산 등의 기능을 갖는다.&lt;/p&gt;
&lt;h4 id=&quot;환경변수&quot;&gt;&lt;a href=&quot;#환경변수&quot; class=&quot;headerlink&quot; title
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>6장 사용자별 공간 할당(쿼터)</title>
    <link href="http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux20/"/>
    <id>http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux20/</id>
    <published>2017-07-07T14:55:51.000Z</published>
    <updated>2017-07-07T15:54:10.207Z</updated>
    
    <content type="html"><![CDATA[<h4 id="쿼터"><a href="#쿼터" class="headerlink" title="쿼터"></a>쿼터</h4><p>사용자마다 용량 제한을 두는것이다.<br>ex.클라우드 서비스를 가입하면 데이터 양이 한정되어있음.</p>
<h4 id="쿼터-실습"><a href="#쿼터-실습" class="headerlink" title="쿼터 실습"></a>쿼터 실습</h4><p>설치 직후로 초기화하자.</p>
<p>새로운 디스크를 추가해서 쿼터 전용 디스크로 하자<br>사용자의 홈 디렉토리는 별도의 디스크로 하는것이 효과적이다. 그리고 사용자별 쿼터도 지정해보자</p>
<h5 id="1-20기가짜리-하나-디스크-달자"><a href="#1-20기가짜리-하나-디스크-달자" class="headerlink" title="1. 20기가짜리 하나 디스크 달자"></a>1. 20기가짜리 하나 디스크 달자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># fdisk /dev/sdb</div><div class="line"># mkfs.ext4 /dev/sdb1</div><div class="line"># mkdir /userHome     //앞으로 추가되는 사용자는</div><div class="line">              userHome를 홈 디렉토리로 함</div><div class="line"># mount /dev/sdb1  /userHome/</div><div class="line"># vi /etc/fstab</div><div class="line">/dev/sdb1     /userHome   ext4    defaults   1   2  추가</div></pre></td></tr></table></figure>
<h5 id="2-유저-두명-추가하자"><a href="#2-유저-두명-추가하자" class="headerlink" title="2. 유저 두명 추가하자"></a>2. 유저 두명 추가하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># useradd -d /userHome/john  john   </div><div class="line">          //홈디렉토리를 지정하면서 유저생성</div><div class="line"># useradd -d /userHome/bann  bann   </div><div class="line">                    //홈디렉토리를 지정하면서 유저생성   </div><div class="line"></div><div class="line"># ls -l /userHome     //확인</div><div class="line"></div><div class="line"># passwd john   //암호는 1234로 설정</div><div class="line"></div><div class="line"># passwd bann   //암호는 1234로 설정</div></pre></td></tr></table></figure>
<h5 id="3-아까-추가한-디스크를-쿼터용으로-설정하자"><a href="#3-아까-추가한-디스크를-쿼터용으로-설정하자" class="headerlink" title="3. 아까 추가한 디스크를 쿼터용으로 설정하자"></a>3. 아까 추가한 디스크를 쿼터용으로 설정하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># vi /etc/fstab</div><div class="line">defaults 를 아래와 같이 변경</div><div class="line">defaults,usrjquota=aquota.user,jqfmt=vfsv0</div><div class="line"></div><div class="line">리부트 해도 되지만 귀찮으니까</div><div class="line"># mount --options remount  /userHome</div><div class="line"># mount  //맨아래서 확인</div></pre></td></tr></table></figure>
<h5 id="4-쿼터디비생성"><a href="#4-쿼터디비생성" class="headerlink" title="4. 쿼터디비생성"></a>4. 쿼터디비생성</h5><p>명령어들에 대해 관심있으면 책을보자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># cd /userHome/</div><div class="line"># quotaoff -avug</div><div class="line"># quotacheck -augmn</div><div class="line"># rm -rf aquota.*</div><div class="line"># quotacheck -augmn</div><div class="line"># touch aquota.user aquota.group</div><div class="line"># chmod 600 aquota.*</div><div class="line"># quotacheck -augmn</div><div class="line"># quotaon -avug</div><div class="line"></div><div class="line"># ls -l   //aquota.group , user 생긴것 확인</div></pre></td></tr></table></figure></p>
<h5 id="5-개인별-쿼터-설정"><a href="#5-개인별-쿼터-설정" class="headerlink" title="5. 개인별 쿼터 설정"></a>5. 개인별 쿼터 설정</h5><p>블록(block)이 현재 사용하는 키로바이트 수</p>
<p>소프트제한(soft)- 넘어갈수 있지만 기간이 있음<br>하드제한(hard) -완전히 못넘어감</p>
<p>소프트를 100으로 주고 하드를 150을 주었을 때<br>130을 저장하면 몇일 이내에 30메가를 줄여야함.</p>
<p>inodes- 파일의 개수를 제한하는것<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"># edquota -u john //유저 존에 대해 쿼터를 수정하겠다.</div><div class="line"></div><div class="line">소프트 10240(10메가) 하드 15360(15메가)를 주고 저장</div><div class="line"></div><div class="line"># su - john  //존으로 로그인</div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 test1</div><div class="line">      // 파일 복사</div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 test2</div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 test3</div><div class="line">쿼터가 넘어갔다고 경고 뜸</div><div class="line"># ls -l     //데이터가 잘 들어갔다.</div><div class="line"></div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 test4</div><div class="line">sdb1: write failed, user block limit reached.</div><div class="line">cp: `test4&apos;에 쓰는 도중 오류 발생: 디스크 할당량이 초과됨</div><div class="line">cp: failed to extend `test4&apos;: 디스크 할당량이 초과됨</div><div class="line"> 오류뜬다.</div><div class="line"></div><div class="line"># ls -l</div><div class="line">//마지막 데이터는 용량이 다름 즉 짤려있음</div><div class="line"></div><div class="line"># quota  // 내가 얼마나쓰고 있는지 확인</div><div class="line">block 현재 사용량</div><div class="line">grace가 6일동안 봐준다는것.</div></pre></td></tr></table></figure></p>
<h5 id="6-존이-한것을-밴한테-그대로-적용하기"><a href="#6-존이-한것을-밴한테-그대로-적용하기" class="headerlink" title="6. 존이 한것을 밴한테 그대로 적용하기"></a>6. 존이 한것을 밴한테 그대로 적용하기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># exit    //존 로그아웃</div><div class="line"># repquota /userHome    //쿼터확인</div><div class="line"></div><div class="line"># edquota -p john bann</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;쿼터&quot;&gt;&lt;a href=&quot;#쿼터&quot; class=&quot;headerlink&quot; title=&quot;쿼터&quot;&gt;&lt;/a&gt;쿼터&lt;/h4&gt;&lt;p&gt;사용자마다 용량 제한을 두는것이다.&lt;br&gt;ex.클라우드 서비스를 가입하면 데이터 양이 한정되어있음.&lt;/p&gt;
&lt;h4 id=&quot;쿼터
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>6장. LVM 개념과 구현, RAID에 CentOS 설치</title>
    <link href="http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux19/"/>
    <id>http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux19/</id>
    <published>2017-07-07T03:42:04.000Z</published>
    <updated>2017-07-07T06:58:12.212Z</updated>
    
    <content type="html"><![CDATA[<h4 id="LVM"><a href="#LVM" class="headerlink" title="LVM"></a>LVM</h4><p>Logical Volume Manage<br>여러개의 하드디스크를 합쳐서 한 개의 파일 시스템으로 사용하는것으로 필요에 따라 다시 나눌 수 있다.<br>예로 2테라 두개를 합친 후 1테라 3테라로 나눠서 사용한다.</p>
<h5 id="물리-볼륨"><a href="#물리-볼륨" class="headerlink" title="물리 볼륨:"></a>물리 볼륨:</h5><p>sda1, sdb1 등의 파티션</p>
<h5 id="볼륨-그룹"><a href="#볼륨-그룹" class="headerlink" title="볼륨 그룹:"></a>볼륨 그룹:</h5><p>물리 볼륨을 합쳐서 1개의 물리그룹으로 만드는것.</p>
<h5 id="논리-볼륨"><a href="#논리-볼륨" class="headerlink" title="논리 볼륨:"></a>논리 볼륨:</h5><p>볼륨 그룹을 1개 이상으로 나눠서 논리 그룹으로 나눈 것</p>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h4><p>3기가, 2기가를 볼륨 그룹으로 만들고<br>3기가, 1기가, 1기가 논리 볼륨으로 만들어보자</p>
<h5 id="1-2기가-3기가-디스크-추가"><a href="#1-2기가-3기가-디스크-추가" class="headerlink" title="1. 2기가, 3기가 디스크 추가"></a>1. 2기가, 3기가 디스크 추가</h5><p>버츄어머신 에딧에서..</p>
<h5 id="2-파티션-설정"><a href="#2-파티션-설정" class="headerlink" title="2. 파티션 설정"></a>2. 파티션 설정</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># fdisk /dev/sdb</div><div class="line">n</div><div class="line">p</div><div class="line">1</div><div class="line">엔터</div><div class="line">엔터</div><div class="line">t</div><div class="line">8e</div><div class="line">w</div><div class="line"></div><div class="line"># fdisk /dev/sdc</div><div class="line">n</div><div class="line">p</div><div class="line">1</div><div class="line">엔터</div><div class="line">엔터</div><div class="line">t</div><div class="line">8e</div><div class="line">w</div></pre></td></tr></table></figure>
<h5 id="3-피지컬-볼륨으로-만들기"><a href="#3-피지컬-볼륨으로-만들기" class="headerlink" title="3. 피지컬 볼륨으로 만들기"></a>3. 피지컬 볼륨으로 만들기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># pvcreate /dev/sdb1</div><div class="line"># pvcreate /dev/sdc1</div></pre></td></tr></table></figure>
<h5 id="4-볼륨-그룹으로-만들기"><a href="#4-볼륨-그룹으로-만들기" class="headerlink" title="4. 볼륨 그룹으로 만들기"></a>4. 볼륨 그룹으로 만들기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># vgcreate myVG /dev/sdb1 /dev/sdc1</div><div class="line"></div><div class="line"># vgdisplay   //볼륨그룹 확인</div></pre></td></tr></table></figure>
<h5 id="5-1기가-3기가-1기가로-나누자"><a href="#5-1기가-3기가-1기가로-나누자" class="headerlink" title="5. 1기가 3기가 1기가로 나누자"></a>5. 1기가 3기가 1기가로 나누자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># lvcreate --size 1G --name myLG1 myVG</div><div class="line"># lvcreate --size 3G --name myLG2 myVG</div><div class="line"># lvcreate --extents 100%FREE --name myLG3 myVG</div><div class="line">        //나머지 다써라</div><div class="line"></div><div class="line"># ls -l /dev/myVG   //확인</div></pre></td></tr></table></figure>
<h5 id="6-포멧하자"><a href="#6-포멧하자" class="headerlink" title="6. 포멧하자"></a>6. 포멧하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># mkfs.ext4 /dev/myVG/myLG1</div><div class="line"># mkfs.ext4 /dev/myVG/myLG2</div><div class="line"># mkfs.ext4 /dev/myVG/myLG3</div></pre></td></tr></table></figure>
<h5 id="7-마운트하자"><a href="#7-마운트하자" class="headerlink" title="7. 마운트하자"></a>7. 마운트하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># mkdir /lvm1  /lvm2  /lvm3</div><div class="line"># mount /dev/myVG/myLG1 /lvm1</div><div class="line"># mount /dev/myVG/myLG2 /lvm2</div><div class="line"># mount /dev/myVG/myLG3 /lvm3</div><div class="line"></div><div class="line"># df //확인</div></pre></td></tr></table></figure>
<h5 id="8-fstab에-등록하자"><a href="#8-fstab에-등록하자" class="headerlink" title="8. fstab에 등록하자"></a>8. fstab에 등록하자</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># vi /etc/fstab</div><div class="line"></div><div class="line">팁 yy 한다음에 pp하면 복붙이된다.</div><div class="line">/dev/myVG/myLG1         /lvm1    ext4     defaults      1 2</div><div class="line">/dev/myVG/myLG2         /lvm2    ext4     defaults      1 2</div><div class="line">/dev/myVG/myLG3         /lvm3    ext4     defaults      1 2</div></pre></td></tr></table></figure>
<h3 id="RAID-1-방식으로-디스크에-CentOS를-설치하자"><a href="#RAID-1-방식으로-디스크에-CentOS를-설치하자" class="headerlink" title="RAID 1 방식으로 디스크에 CentOS를 설치하자"></a>RAID 1 방식으로 디스크에 CentOS를 설치하자</h3><p>392p 보고 하자</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># mdadm --detail -scan //확인해보자</div><div class="line"></div><div class="line"># mdadm --detail /dev/md/root   //자세히보자</div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;LVM&quot;&gt;&lt;a href=&quot;#LVM&quot; class=&quot;headerlink&quot; title=&quot;LVM&quot;&gt;&lt;/a&gt;LVM&lt;/h4&gt;&lt;p&gt;Logical Volume Manage&lt;br&gt;여러개의 하드디스크를 합쳐서 한 개의 파일 시스템으로 사용하는것으로 필요에
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>6장. RAID6 와 RAID 1+0</title>
    <link href="http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux18/"/>
    <id>http://KKimSangHeon.github.io/2017/07/07/ThisIsLinux18/</id>
    <published>2017-07-07T00:47:34.000Z</published>
    <updated>2017-07-07T02:18:58.856Z</updated>
    
    <content type="html"><![CDATA[<h4 id="RAID6"><a href="#RAID6" class="headerlink" title="RAID6"></a>RAID6</h4><p>패리티가 2개이기 때문에 신뢰성이 높다</p>
<h4 id="RAID-1-0"><a href="#RAID-1-0" class="headerlink" title="RAID 1+0"></a>RAID 1+0</h4><p>RAID 0,1 쓰는것</p>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h4><p>디스크 10개 스냅샷으로 돌아온 후 2기가 짜리 하나를 지워버린다.</p>
<h5 id="RAID-6-생성"><a href="#RAID-6-생성" class="headerlink" title="RAID 6 생성"></a>RAID 6 생성</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># mdadm --create /dev/md6 --level=6 --raid-devices=4 /dev/sdb1 /dev/sdc1 /dev/sdd1 /dev/sde1</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md6    //포멧</div><div class="line"></div><div class="line"># mkdir /raid6</div><div class="line"></div><div class="line"># mount /dev/md6 /raid6</div><div class="line"></div><div class="line"># df    //2기가 확인</div></pre></td></tr></table></figure>
<h5 id="RAID-1-0-생성"><a href="#RAID-1-0-생성" class="headerlink" title="RAID 1+0 생성"></a>RAID 1+0 생성</h5><p>이는 RAID 1을 두개 먼저 생성해야한다.</p>
<p>md2 ,md3를 RAID1으로 만들고 이 두개를 RAID 0으로 묶는다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># mdadm --create /dev/md2 --level=1 --raid-devices=2 /dev/sdf1 /dev/sdg1    </div><div class="line">            //raid1 md2로 생성</div><div class="line"></div><div class="line"># mdadm --create /dev/md3 --level=1 --raid-devices=2 /dev/sdh1 /dev/sdi1    </div><div class="line">            //raid1 md3로 생성</div><div class="line"></div><div class="line"># mdadm --create /dev/md10 --level=0 --raid-devices=2 /dev/md2 /dev/md3   </div><div class="line">            //md2, md3로 raid0 생성</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md10   //포멧</div><div class="line"></div><div class="line"># mkdir /raid10</div><div class="line"></div><div class="line"># mount /dev/md10  /raid10</div><div class="line"></div><div class="line"># df</div></pre></td></tr></table></figure>
<h5 id="잘동작하나-확인"><a href="#잘동작하나-확인" class="headerlink" title="잘동작하나 확인"></a>잘동작하나 확인</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 /raid6/testFile</div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 /raid10/testFile</div><div class="line"></div><div class="line"># vi /etc/fstab</div><div class="line"></div><div class="line">/dev/md6    /raid6   ext4   defaults    1     2</div><div class="line">/dev/md10   /raid10  ext4   defaults    1     2</div><div class="line">//재부팅되도 마운트 유지하기 위해 추가</div></pre></td></tr></table></figure>
<h5 id="고장내보자"><a href="#고장내보자" class="headerlink" title="고장내보자"></a>고장내보자</h5><p>SCSI 3, 5 ,8, 9 디스크 없애고 부트</p>
<p>RAID 6 확인<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mdadm --run /dev/md6    //md6 실행</div><div class="line"># df //확인</div><div class="line"># ls -l /raid6      //데이터 확인</div><div class="line"></div><div class="line"># mdadm --detail /dev/md6</div></pre></td></tr></table></figure></p>
<p>RAID 1+0 확인<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># mdadm --run /dev/md2</div><div class="line"># mdadm --run /dev/md3</div><div class="line"></div><div class="line"># mdadm --detail /dev/md10</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;RAID6&quot;&gt;&lt;a href=&quot;#RAID6&quot; class=&quot;headerlink&quot; title=&quot;RAID6&quot;&gt;&lt;/a&gt;RAID6&lt;/h4&gt;&lt;p&gt;패리티가 2개이기 때문에 신뢰성이 높다&lt;/p&gt;
&lt;h4 id=&quot;RAID-1-0&quot;&gt;&lt;a href=&quot;#RAID
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>RAID 0,1,5 의 고장과 원상 복구</title>
    <link href="http://KKimSangHeon.github.io/2017/07/06/ThisIsLinux17/"/>
    <id>http://KKimSangHeon.github.io/2017/07/06/ThisIsLinux17/</id>
    <published>2017-07-06T03:33:07.000Z</published>
    <updated>2017-07-06T09:26:17.105Z</updated>
    
    <content type="html"><![CDATA[<p>SCSI 2,4,6,9를 고장내 놓고 잘동작하는 지 확인 해 보겠다.</p>
<p>잘 동작하나 확인하기 위해 고장내기 전에 파일을 옮긴다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># cp /boot/vmlinuz-3*  /raidLinear/testFile</div><div class="line"># cp /boot/vmlinuz-3*  /raid0/testFile</div><div class="line"># cp /boot/vmlinuz-3*  /raid1/testFile</div><div class="line"># cp /boot/vmlinuz-3*  /raid5/testFile</div><div class="line"></div><div class="line"># halt -p</div></pre></td></tr></table></figure><br>vmplayer을 켜고 SCSI 2,4,6,9 디스크를 제거<br>쫌 지나면 응급복구모드로 실행이됨<br>암호를 입력해주자</p>
<p>ls -l /dev/sd* 을 하니까 당겨져 있다. sdc가 sdb 이런식으로</p>
<p>RAID 1, 5 는 데이터가 살아있어야 한다.</p>
<h4 id="RAID-1-확인"><a href="#RAID-1-확인" class="headerlink" title="RAID 1 확인"></a>RAID 1 확인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># df    //마운트가 다 끊겨있다.</div><div class="line"># mdadm --run /dev/md1   //강제로 가동시키는 것</div><div class="line">시작되었다.</div><div class="line"># df  //raid1가 마운트 된것을 확인.</div><div class="line"># ls -l /raid1    //데이터가 잘 있는지 확인</div><div class="line"># mdadm --detail /dev/md1   //하나는 살아있고 하나는 removed인것을 확인</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="RAID-5-확인"><a href="#RAID-5-확인" class="headerlink" title="RAID 5 확인"></a>RAID 5 확인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mdadm --run /dev/md5   //강제로 가동시키는 것</div><div class="line">시작되었다.</div><div class="line"># df  //raid5가 마운트 된것을 확인.</div><div class="line"># ls -l /raid5    //데이터가 잘 있는지 확인</div><div class="line"># mdadm --detail /dev/md5   //하나는 살아있고 하나는 removed인것을 확인</div></pre></td></tr></table></figure>
<h4 id="RAIDLinear-확인"><a href="#RAIDLinear-확인" class="headerlink" title="RAIDLinear  확인"></a>RAIDLinear  확인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mdadm --run /dev/md9   //강제로 가동시키는 것</div><div class="line">실행할 수 없다. 결함을 허용하지 않음</div></pre></td></tr></table></figure>
<h4 id="RAID-0-확인"><a href="#RAID-0-확인" class="headerlink" title="RAID 0 확인"></a>RAID 0 확인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mdadm --run /dev/md0   //강제로 가동시키는 것</div><div class="line">실행할 수 없다. 결함을 허용하지 않음</div></pre></td></tr></table></figure>
<h4 id="시스템이-재대로-실행되도록-해보자"><a href="#시스템이-재대로-실행되도록-해보자" class="headerlink" title="시스템이 재대로 실행되도록 해보자"></a>시스템이 재대로 실행되도록 해보자</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># mdadm --stop /dev/md9     //종료</div><div class="line"># mdadm --stop /dev/md0     //종료</div><div class="line"></div><div class="line"># vi /etc/fstab</div><div class="line">md9,md0 주석 하고</div><div class="line"># reboot</div><div class="line"></div><div class="line">리부트를 했는데 복구모드로 실행이 된다면 컨트롤 D를 누르고</div><div class="line">실행한 다음에 재 마운트를 해주면 된다.</div><div class="line"></div><div class="line"># df    //마운트가 되어있는것 확인.</div></pre></td></tr></table></figure>
<h4 id="새로운-디스크를-장착하여-원상복구를-시켜보자"><a href="#새로운-디스크를-장착하여-원상복구를-시켜보자" class="headerlink" title="새로운 디스크를 장착하여 원상복구를 시켜보자"></a>새로운 디스크를 장착하여 원상복구를 시켜보자</h4><p>Linear RAID, RAID 0 은 데이터를 살릴 순 없다.<br>그러나 RAID 1, RAID 5는 데이터를 살릴 수 있다.</p>
<p>vmplayer에서 디스크 4개를 1기가씩 주고 추가하자. 알아서 빈곳을 잘 찾아간다.</p>
<p>우리가 조금전 추가했던것은 sdc, sde, sdg, sdi 이다.<br>2,4,6,9 로 들어갔으므로..</p>
<p>RAID 0, Linear Raid는 새로 만들어주어야 한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># ls -l /dev/sd*    //</div><div class="line"># fdisk /dev/sdc~sdi 까지</div><div class="line">  n 입력</div><div class="line">  p 입력</div><div class="line">  엔터 엔터</div><div class="line">  t 입력</div><div class="line">  fd 입력</div><div class="line">  w 입력</div><div class="line"></div><div class="line"># mdadm --stop /dev/md9   //다시만들기위해 stop</div><div class="line"># mdadm --create /dev/md9 --level=linear --raid-devices=2 /dev/sdb1 /dev/sdc1</div><div class="line">#mdadm --detail /dev/md9 //확인해보자</div><div class="line"></div><div class="line"># mdadm --stop /dev/md0   //다시만들기위해 stop</div><div class="line"># mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdd1 /dev/sde1</div><div class="line"># mdadm --detail /dev/md9 //확인해보자</div></pre></td></tr></table></figure></p>
<p>RAID 1, RAID 5는 새로만들면 안되고 추가해주어야 한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># mdadm /dev/md1 --add /dev/sdg1</div><div class="line"></div><div class="line"># mdadm /dev/md5 --add /dev/sdi1</div><div class="line"></div><div class="line"># vi /etc/fstab</div><div class="line"></div><div class="line">/dev/md9    /raidLinear   ext4    defaults    1 2</div><div class="line">/dev/md0    /raid0   ext4         defaults    1 2</div><div class="line">/dev/md1    /raid1   ext4    defaults    1 2</div><div class="line">/dev/md5    /raid5   ext4    defaults    1 2</div><div class="line"></div><div class="line">이렇게 바꿔준다.</div><div class="line"># reboot</div><div class="line"># df      //마운트 확인.</div></pre></td></tr></table></figure></p>
<p>데이터를 한번 확인해보자.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># ls -l /raid0</div><div class="line">drwx------ 2 root root   16384  7월  6 17:26 lost+found</div><div class="line">-rwxr-xr-x 1 root root 4902656  7월  6 17:31 testFile</div><div class="line"></div><div class="line"># ls -l /raid1</div><div class="line">drwx------ 2 root root   16384  7월  6 17:27 lost+found</div><div class="line">-rwxr-xr-x 1 root root 4902656  7월  6 17:31 testFile</div><div class="line"></div><div class="line"># ls -l /raid5</div><div class="line">drwx------ 2 root root   16384  7월  6 17:29 lost+found</div><div class="line">-rwxr-xr-x 1 root root 4902656  7월  6 17:31 testFile</div><div class="line"></div><div class="line"># ls -l /raidLinear</div><div class="line">drwx------ 2 root root   16384  7월  6 17:25 lost+found</div><div class="line">-rwxr-xr-x 1 root root 4902656  7월  6 17:31 testFile</div></pre></td></tr></table></figure>
<p>raid 1그리고 raid5 는 데이터가 있을것이라 예상했지만 raid0 그리고 raidLinear도 데이터가 존재한다. 어떻게 된 것일까? 운이 좋게 지워지지않은 영역에 존재하는 것일 것이다. 그러므로 데이터를 신뢰 할 수 없으며 이는 포멧을 해주는 것이 좋다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># umount /dev/md0   //포멧하기전에 마운트를 끊음</div><div class="line"># umount /dev/md9</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md0  //포멧</div><div class="line"># mkfs.ext4 /dev/md9</div><div class="line"></div><div class="line"># reboot    //리부트를 하지않고 바로 마운트를 해줘도됨.</div><div class="line">          //어차피 리부트하면 마운트되어있으니까 아무거나 선택!</div></pre></td></tr></table></figure>
<p>raid 1, raid 5 의 고장난 디스크에 대해서 따로 작업을 해 줘야할줄 알았는데 –add만 하면 되어서 생각보다 간단하다고 생각했다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SCSI 2,4,6,9를 고장내 놓고 잘동작하는 지 확인 해 보겠다.&lt;/p&gt;
&lt;p&gt;잘 동작하나 확인하기 위해 고장내기 전에 파일을 옮긴다.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>6장. RAID 정의 및 개념,구현</title>
    <link href="http://KKimSangHeon.github.io/2017/07/06/ThisIsLinux16/"/>
    <id>http://KKimSangHeon.github.io/2017/07/06/ThisIsLinux16/</id>
    <published>2017-07-06T00:13:09.000Z</published>
    <updated>2017-07-06T07:00:53.610Z</updated>
    
    <content type="html"><![CDATA[<h4 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h4><p>Redundant Array of Inexpensive Disks<br>여러개의 디스크를 하나처럼 사용하는 RAID를 알아보자<br>비용절감 + 신뢰성 향상 + 성능 향상<br>1테라 디스크 3개를 하나로 묶어서 3테라 디스크처럼 쓴다</p>
<h5 id="하드웨어-RAID"><a href="#하드웨어-RAID" class="headerlink" title="하드웨어 RAID"></a>하드웨어 RAID</h5><p>여러개의 하드디스크를 가지고 장비를 만들어서 사용. 장비업체에서 제공하기 떄문에 사용법이 다를 수 있다. 그리고 상당히 고가이다. 하드웨어RAID가 안정성이 높다.</p>
<h5 id="소프트웨어-RAID"><a href="#소프트웨어-RAID" class="headerlink" title="소프트웨어 RAID"></a>소프트웨어 RAID</h5><p>디스크를 장착만하면 운영체제 레벨에서 하나로 묶을 수 있다.</p>
<h5 id="Linear-RAID-339p-그림보기"><a href="#Linear-RAID-339p-그림보기" class="headerlink" title="Linear RAID (339p 그림보기)"></a>Linear RAID (339p 그림보기)</h5><p>최소 2개이상의 디스크를 하나로 묶음<br>앞 디스크 부터 차례로 저장<br>100TB 100TB 100TB 를 사용하면 총 300TB가 된다. 즉 공간효율성이 100%임.</p>
<h5 id="RAID-0-339p-그림보기"><a href="#RAID-0-339p-그림보기" class="headerlink" title="RAID 0 (339p 그림보기)"></a>RAID 0 (339p 그림보기)</h5><p>모든 디스크에 동시에 저장되는 개념<br>그러므로 하드디스크가 3개면 /3 시간으로 저장됨<br>신뢰성이 낮다.<br>빠르지만 전부 잃어버려도 큰 문제가 되지 않는 자료가 적당하다.<br>3TB 100TB 100TB 를 사용하면 총 9TB가 된다. 즉 디스크 크기가 다르면 공간효율성이 100%가 되지 않음.<br>그래서 RAID를 구성할 떈 같은회사 같은 용량의 디스크로 구성한다.<br>디스크 세개중에 하나만 고장나도 디스크를 못쓴다.</p>
<h5 id="RAID-1"><a href="#RAID-1" class="headerlink" title="RAID 1"></a>RAID 1</h5><p>미러링이라 부름<br>1TB 1TB 를 사용하면 1TB 사용가능<br>결함 허용을 제공= 신뢰성 높음. 즉 둘중에 하나가 고장나도 데이터가 보존된다.<br>공간효율이 나쁘므로 비용이 비싸다는 단점이 있다.</p>
<h5 id="RAID-5"><a href="#RAID-5" class="headerlink" title="RAID 5"></a>RAID 5</h5><p>RAID 2,3,4의 장점을 포용하기 때문에 2,3,4를 사용할 필요가 없다.<br>RAID1의 데이터 안정성 +RAID0의 공간 효율성을 추구 디스크 개수 -1개의 공간을 사용. 즉 4개일 경우 3개를 사용(75%) 100개일 경우 99개를 사용(99%)<br>즉 가격이 저렴하면서 안정적인것.<br>최소한 3개 이상의 하드디스크가 필요하며 오류가 발생했을 때는 패리티(Parity)를 이용해서 데이터를 복구<br>결함 허용을 제공 - 즉 디스크 하나가 고장나도 사용 복구 가능<br>하지만 디스크가 하나가 고장났을 때는 복구가 가능하지만 디스크가 2개가 고장날 경우에는 복구 불가능.<br>그래서 100개를 사용하였을 경우에는 불안하다.(2개 이상 고장날 확률이 높아지므로)<br>즉 적은 디스크를 활용할 경우 공간효율은 낮아지지만 신뢰도는 높아진다.<br>일반적으로 RAID 5는 7개에서 10개정도의 디스크로 구성</p>
<h5 id="RAID-6"><a href="#RAID-6" class="headerlink" title="RAID 6"></a>RAID 6</h5><p>패리트를 2개 쓴다. 즉 디스크가 2개가 고장나도 복구가능. 최소 4개이상의 디스크가 필요함.(패리티를 2개 쓰므로)<br>패리티를 2개 쓰는 알고리즘의 효율성이 떨어져서 성능이 떨어지는 단점이 있어 많이 사용하지는 않음.</p>
<h5 id="RAID1-0-RAID-RAID0"><a href="#RAID1-0-RAID-RAID0" class="headerlink" title="RAID1 + 0 = RAID + RAID0"></a>RAID1 + 0 = RAID + RAID0</h5><p>신뢰성(안정성)과 성능(속도)이 동시에 뛰어난 방법<br>RAID1로 구성된것을 RAID 0 으로 묶음. 그림참고</p>
<h5 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h5><p>SCSI 0:1 부터 0:10 까지 진행.</p>
<p>SCSI 0:1  SCSI 0:2 - Linear RAID</p>
<p>SCSI 0:3  SCSI 0:4 - RAID 0</p>
<p>SCSI 0:5  SCSI 0:6 - RAID 1</p>
<p>SCSI 0:8  SCSI 0:9  SCSI 0:10 - RAID 5</p>
<p>SCSI 0:1 만 2GB로 구성하고 나머지는 다 1GB로 구성</p>
<p>에디트 쪽에서 디스크 2기가 1개 1기가 8개 추가.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ls -l /dev/sd*      //장착이 잘 되었나 확인</div></pre></td></tr></table></figure>
<p>9번 반복<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># fdisk /dev/sdb ~sdj 까지 반복</div><div class="line">n   p   엔터 엔터</div><div class="line">p //로 확인해보면 시스템이 리눅스인데 RAID로 변경해야한다.</div><div class="line">t 엔터</div><div class="line">L 누르면 도움말이 나온다.</div><div class="line">fd를 입력 후 엔터</div><div class="line">p를 눌러 확인</div><div class="line">w를 눌러 저장</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ls -l /dev/sd*      //장착이 잘 되었나 확인</div></pre></td></tr></table></figure>
<h4 id="과정-설명"><a href="#과정-설명" class="headerlink" title="과정 설명"></a>과정 설명</h4><p>1.mdadm 명령어로 논리 볼륨 생성<br>2.mkfs.ext4 명령어로 파일시스템 생성(포멧)<br>3.mount 적용<br>위 3가지 과정은 6장에서 하드디스크 1개추가 과정과 같다.</p>
<h4 id="Linear-RAID-만들기"><a href="#Linear-RAID-만들기" class="headerlink" title="Linear RAID 만들기"></a>Linear RAID 만들기</h4><p>sdb1 sdc1 이용<br>mdadm RAID를 만들고 없애는 명령어</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># fdisk -l /dev/sdb /dev/sdc // 아까 한것이 잘 적용되었나 확인</div><div class="line"></div><div class="line"># mdadm --create /dev/md9 --level=linear --raid-devices=2 /dev/sdb1 /dev/sdc1</div><div class="line">        //RAID md9를 만드는데 리니어로 디바이스는</div><div class="line">        //개수 2개로 2개는 /dev/sdb1 /dev/sdc1 로</div><div class="line"></div><div class="line"># mdadm --detail --scan     //돌고있는지 확인</div><div class="line"># mdadm --detail /dev/md9   //md9에 대해 자세히 보자</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md9    //포멧하자</div><div class="line"></div><div class="line"># mkdir /raidLinear   //디렉토리 생성</div><div class="line"></div><div class="line"># mount /dev/md9 /raidLinear/ //마운트</div><div class="line"></div><div class="line"># df      //마운트 확인</div><div class="line"># vi /etc/fstab     //재부팅하면 마운트가 풀리므로 설정</div><div class="line"></div><div class="line">/dev/md9    /raidLinear   ext4    defaults    0 0    </div><div class="line">맨 아래 추가</div><div class="line"></div><div class="line"># reboot</div><div class="line"># df    //마운트 확인</div></pre></td></tr></table></figure>
<h4 id="RAID-0-만들기"><a href="#RAID-0-만들기" class="headerlink" title="RAID 0 만들기"></a>RAID 0 만들기</h4><p>sdd sde로 한다<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdd1 /dev/sde1</div><div class="line"></div><div class="line"># mdadm --detail --scan     //돌고있는지 확인</div><div class="line"># mdadm --detail /dev/md0   //md9에 대해 자세히 보자</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md0    //포멧하자</div><div class="line"></div><div class="line"># mkdir /raid0   //디렉토리 생성</div><div class="line"></div><div class="line"># mount /dev/md0 /raid0/ //마운트</div><div class="line"></div><div class="line"># df      //마운트 확인</div><div class="line"></div><div class="line"># vi /etc/fstab     //재부팅하면 마운트가 풀리므로 설정</div><div class="line"></div><div class="line">/dev/md0    /raid0   ext4    defaults    0 0   </div><div class="line">추가</div></pre></td></tr></table></figure></p>
<h4 id="RAID-1-1"><a href="#RAID-1-1" class="headerlink" title="RAID 1"></a>RAID 1</h4><p>sdf sdg 사용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sdf1 /dev/sdg1</div><div class="line">y입력  // raid1은 부트 디바이스로 사용 할 수 없는데 만들겠냐는 뜻</div><div class="line"></div><div class="line"># mdadm --detail /dev/md1   //확인해보자</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md1    //포멧하자</div><div class="line"></div><div class="line"># mkdir /raid1   //디렉토리 생성</div><div class="line"></div><div class="line"># mount /dev/md1 /raid1/ //마운트</div><div class="line"></div><div class="line"># df      //마운트 확인</div><div class="line"></div><div class="line"># vi /etc/fstab     //재부팅하면 마운트가 풀리므로 설정</div><div class="line">/dev/md1    /raid1   ext4    defaults    0 0   </div><div class="line">추가</div></pre></td></tr></table></figure></p>
<h4 id="RAID-5-1"><a href="#RAID-5-1" class="headerlink" title="RAID 5"></a>RAID 5</h4><p>sdh sdi sdj 사용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># mdadm --create /dev/md5 --level=5 --raid-devices=3 /dev/sdh1 /dev/sdi1 /dev/sdj1</div><div class="line"></div><div class="line">망가졌다는 메세지 나오는데 무시하면된다. (컴퓨터가 착각함!)</div><div class="line"></div><div class="line"># mdadm --detail /dev/md5   //확인해보자</div><div class="line"></div><div class="line"># mkfs.ext4 /dev/md5    //포멧하자</div><div class="line"></div><div class="line"># mkdir /raid5   //디렉토리 생성</div><div class="line"></div><div class="line"># mount /dev/md5 /raid5/ //마운트</div><div class="line"></div><div class="line"># df      //마운트 확인</div><div class="line"></div><div class="line"># vi /etc/fstab     //재부팅하면 마운트가 풀리므로 설정</div><div class="line"></div><div class="line">/dev/md5    /raid5   ext4    defaults    0 0  </div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;RAID&quot;&gt;&lt;a href=&quot;#RAID&quot; class=&quot;headerlink&quot; title=&quot;RAID&quot;&gt;&lt;/a&gt;RAID&lt;/h4&gt;&lt;p&gt;Redundant Array of Inexpensive Disks&lt;br&gt;여러개의 디스크를 하나처럼 사용하는 RA
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>6장. IDE/SCSI 장치 구성, 하드디스크 1개 추가</title>
    <link href="http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux15/"/>
    <id>http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux15/</id>
    <published>2017-07-05T07:33:36.000Z</published>
    <updated>2017-07-05T11:05:49.132Z</updated>
    
    <content type="html"><![CDATA[<p>하드디스크 관리는 관리자 입장에서 기본적인것이다.<br>디스크가 모자르면 디스크를 추가해야한다..</p>
<p>이런걸 어떻게 할지 알아보자</p>
<h4 id="IDE-SCSI-장치에-대해"><a href="#IDE-SCSI-장치에-대해" class="headerlink" title="IDE SCSI 장치에 대해"></a>IDE SCSI 장치에 대해</h4><p>IDE는 케이블을 2개 꽂을수가 있다. 여기에 하드디스크를 장착하거나 DVD롬을 장착할 수 있다. 즉 두개의 IDE가 있으면 4개를 장착할 수 있다. 0:0 , 0:1, 1:0 , 1:1 이렇게 구분된다(4개일 경우)</p>
<p>SCSI는 총 16개의 SCSI 하드디스크를 꽂을 수 있는 케이블이 따져있다. 0,7번은 VMware가 사용하므로 사용할 수 없다.<br>마찬가지로 SCSI 0:0 ,0:1 로 구분된다.</p>
<p>326p를 통해 그림으로 확인가능</p>
<p>우리가 80GB 의 하드디스크를 추가했는데 이를 sda라 그런다<br>만일 하나더 추가하면 sdb라 그런다.<br>정식이름은 /dev/sda 이다.<br>여기서 파티션을 나누면 sda1,sda2로 나뉜다. 즉 sda는 하드디스크 자체를 의미하며 sda1은 파티션1 sda2는 파티션2를 의미한다.</p>
<p>땅 자체를 사는것을 하드디스크를 추가하는것으로 보면되고 축구장으로 사용하기 위해 특정부분에 선을 긋는것을 파티션을 나눈다고 보면된다. 또한 파티션은 특정디렉터리에 마운트를 해줘야함.</p>
<h4 id="하드디스크-1개-장착과정"><a href="#하드디스크-1개-장착과정" class="headerlink" title="하드디스크 1개 장착과정"></a>하드디스크 1개 장착과정</h4><p>1.SCSI 0:1에 물리적인 하드디스크 하나 장착 이는 /dev/sdb이다.</p>
<p>2.fdisk 명령어를 통해 파티션을 나눔(실습에서는 파티션1개로)./dev/sdb1 파티션이 생긴다.</p>
<p>3.파티션을 사용하기 위해서는 포멧을 해줘야한다.(mkfs.ext4를 사용)</p>
<p>4.그러면 완전히 준비된 하드디스크가 생기는데 이를 특정 폴더에 마운트해야한다.</p>
<p>5.마운트는 컴퓨터를 끄면 마운트가 끊어지므로 /etc/fstab 파일을 편집해 주어야 한다.</p>
<hr>
<h5 id="1-SCSI-0-1에-물리적인-하드디스크-하나-장착-이는-dev-sdb이다"><a href="#1-SCSI-0-1에-물리적인-하드디스크-하나-장착-이는-dev-sdb이다" class="headerlink" title="1.SCSI 0:1에 물리적인 하드디스크 하나 장착 이는 /dev/sdb이다."></a>1.SCSI 0:1에 물리적인 하드디스크 하나 장착 이는 /dev/sdb이다.</h5><p>에디트에서 애드를 선택하고 다음<br>스카시를 선택하고 다음<br>맨위를 하고 다음<br>1기가로 선택하고 싱글파일 선택하고 다음<br>어드밴스드를 눌러 0:1로 되어있는것을 확인</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># ls -l /dev/sd*</div><div class="line">brw-rw---- 1 root disk 8,  0  7월  5 18:02 /dev/sda</div><div class="line">brw-rw---- 1 root disk 8,  1  7월  5 18:02 /dev/sda1</div><div class="line">brw-rw---- 1 root disk 8,  2  7월  5 18:02 /dev/sda2</div><div class="line">brw-rw---- 1 root disk 8, 16  7월  5 18:02 /dev/sdb</div><div class="line"></div><div class="line">sda는 초기 설정때 설정한것. 파티션을 두개로 나눠서 sda1, sda2로 나뉜다.</div><div class="line"></div><div class="line">왜 sdb1은 없지? 파티션을 나누지 않았으므로!</div></pre></td></tr></table></figure>
<h5 id="2-fdisk-명령어를-통해-파티션을-나눔-실습에서는-파티션1개로-dev-sdb1-파티션이-생긴다"><a href="#2-fdisk-명령어를-통해-파티션을-나눔-실습에서는-파티션1개로-dev-sdb1-파티션이-생긴다" class="headerlink" title="2.fdisk 명령어를 통해 파티션을 나눔(실습에서는 파티션1개로)./dev/sdb1 파티션이 생긴다."></a>2.fdisk 명령어를 통해 파티션을 나눔(실습에서는 파티션1개로)./dev/sdb1 파티션이 생긴다.</h5><p>파티션을 나눠보자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"># fdisk /dev/sdb</div><div class="line">n       //새로운 파티션 추가</div><div class="line">p    // p(primary)는 주 파티션 e(extended)는 확장파티션을 의미</div><div class="line">      //p는 4개까지 나눌 수 있음</div><div class="line">      //4개 이상하고싶으면 3개는 p로하고 하나는 e로 잡아서</div><div class="line">      //e 파티션안을 나눠서 늘리면 된다. 이는 굉장히 드문경우</div><div class="line">      //일반적으로는 p를 쓰면 충분하다.</div><div class="line">1    //sdb1로 하겠다.      </div><div class="line">엔터       // 2047까지는 시스템 부분이므로</div><div class="line">          // 어디서 부터 시작할꺼냐. 엔터하면 2048부터</div><div class="line">엔터       //끝까지 쓰겠다.   </div><div class="line">p     //최종확인</div><div class="line">w     //적용      </div><div class="line"></div><div class="line"># ls -l /dev/sd*      //생성된 것 확인</div><div class="line">brw-rw---- 1 root disk 8,  0  7월  5 18:02 /dev/sda</div><div class="line">brw-rw---- 1 root disk 8,  1  7월  5 18:02 /dev/sda1</div><div class="line">brw-rw---- 1 root disk 8,  2  7월  5 18:02 /dev/sda2</div><div class="line">brw-rw---- 1 root disk 8, 16  7월  5 18:11 /dev/sdb</div><div class="line">brw-rw---- 1 root disk 8, 17  7월  5 18:11 /dev/sdb1</div></pre></td></tr></table></figure><br>파일 시스템을 생성하자.</p>
<h5 id="3-파티션을-사용하기-위해서는-포멧을-해줘야한다-mkfs-ext4를-사용"><a href="#3-파티션을-사용하기-위해서는-포멧을-해줘야한다-mkfs-ext4를-사용" class="headerlink" title="3.파티션을 사용하기 위해서는 포멧을 해줘야한다.(mkfs.ext4를 사용)"></a>3.파티션을 사용하기 위해서는 포멧을 해줘야한다.(mkfs.ext4를 사용)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkfs.ext4 /dev/sdb1</div></pre></td></tr></table></figure>
<h5 id="4-그러면-완전히-준비된-하드디스크가-생기는데-이를-특정-폴더에-마운트해야한다"><a href="#4-그러면-완전히-준비된-하드디스크가-생기는데-이를-특정-폴더에-마운트해야한다" class="headerlink" title="4.그러면 완전히 준비된 하드디스크가 생기는데 이를 특정 폴더에 마운트해야한다."></a>4.그러면 완전히 준비된 하드디스크가 생기는데 이를 특정 폴더에 마운트해야한다.</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># mkdir /mydata</div><div class="line"># mount /dev/sdb1 /mydata</div><div class="line"></div><div class="line"># df // 마운트 된것을 확인</div><div class="line"></div><div class="line"># cp /boot/vmlinuz-3.10.0-123.el7.x86_64 /mydata/data1  // 새로운 디스크에 데이터 복사</div><div class="line"></div><div class="line"># df //확인 (용량 늘어난것 확인)</div></pre></td></tr></table></figure>
<h5 id="5-마운트는-컴퓨터를-끄면-마운트가-끊어지므로-etc-fstab-파일을-편집해-주어야-한다"><a href="#5-마운트는-컴퓨터를-끄면-마운트가-끊어지므로-etc-fstab-파일을-편집해-주어야-한다" class="headerlink" title="5.마운트는 컴퓨터를 끄면 마운트가 끊어지므로 /etc/fstab 파일을 편집해 주어야 한다."></a>5.마운트는 컴퓨터를 끄면 마운트가 끊어지므로 /etc/fstab 파일을 편집해 주어야 한다.</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># vi /etc/fstab   </div><div class="line">/dev/sdb1   /mydata   ext4    defaults     0 0 입력 후 vi종료</div><div class="line">                    //dev/sdb1을 /mydata에 마운트하는것. ext4를 이용해</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;하드디스크 관리는 관리자 입장에서 기본적인것이다.&lt;br&gt;디스크가 모자르면 디스크를 추가해야한다..&lt;/p&gt;
&lt;p&gt;이런걸 어떻게 할지 알아보자&lt;/p&gt;
&lt;h4 id=&quot;IDE-SCSI-장치에-대해&quot;&gt;&lt;a href=&quot;#IDE-SCSI-장치에-대해&quot; cla
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>5장. 리눅스에 Windows 설치 KDE데스크톱 설치</title>
    <link href="http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux14/"/>
    <id>http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux14/</id>
    <published>2017-07-05T06:37:05.000Z</published>
    <updated>2017-07-05T07:35:30.122Z</updated>
    
    <content type="html"><![CDATA[<h4 id="리눅스-안에서-윈도우를-깔아보자"><a href="#리눅스-안에서-윈도우를-깔아보자" class="headerlink" title="리눅스 안에서 윈도우를 깔아보자"></a>리눅스 안에서 윈도우를 깔아보자</h4><p>CentOS에서 제공하는 가상머신을 이용하자<br>즉 가상머신에서 가상머신을 만드는…<br>램 올리고, 가상화 켜주고 311p참고</p>
<p>iso 파일을 받고 내폴더에 붙여넣기 해준다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># mkdir /iso</div><div class="line"># mv 600* /iso    //파일이름이 600으로 시작함.</div><div class="line"># ls -l /iso</div></pre></td></tr></table></figure>
<p>실습에서는 313p 의 2-0을 생략한다.<br>프로그램 -시스템 도구 -가상머진 관리자<br>로컬 선택 후 새가상머신 생성 왼쪽위 그림(노란색)<br>Win2008 입력후 로컬설치매체 선택후 앞으로<br>iso파일 선택하고 윈도우서버 2008 선택하고 앞으로<br>그대로 두고 앞으로<br>설치전에 사용자 설정 선택 후 완료<br>디스플레이를 VNC로 하고 적용<br>왼쪽 위 설치시작</p>
<h4 id="KDE-데스크톱을-설치해보자"><a href="#KDE-데스크톱을-설치해보자" class="headerlink" title="KDE 데스크톱을 설치해보자"></a>KDE 데스크톱을 설치해보자</h4><p>센토스는 기본적으로 그놈데스크탑이 들어있다. 윈도우와 비슷한 KDE 데스크탑을 운영할 수 있다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ yum grouplist | grep KDE  //KDE 패키지그룹을 조회</div><div class="line">su -c &apos;yum -y groupinstall &quot;KDE Plasma Workspaces&quot;&apos;</div><div class="line">          //조회됨</div><div class="line"></div><div class="line">$ su -c &apos;yum -y groupinstall &quot;KDE Plasma Workspaces&quot;&apos;</div><div class="line">        //루트권한으로 &apos;&apos;안에 있는 명령어 실행(KDE 설치)</div></pre></td></tr></table></figure><br>자동로그인 해제 . 321p 참고<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ reboot</div></pre></td></tr></table></figure><br>톱니 누르고 KDE Plasma 작업공간 선택후 암호 입력 후 로그인</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;리눅스-안에서-윈도우를-깔아보자&quot;&gt;&lt;a href=&quot;#리눅스-안에서-윈도우를-깔아보자&quot; class=&quot;headerlink&quot; title=&quot;리눅스 안에서 윈도우를 깔아보자&quot;&gt;&lt;/a&gt;리눅스 안에서 윈도우를 깔아보자&lt;/h4&gt;&lt;p&gt;CentOS에서 제
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>5장. 노틸러스, FireFox업그레이드, 기타 X윈도 유틸리티</title>
    <link href="http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux13/"/>
    <id>http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux13/</id>
    <published>2017-07-05T04:47:34.000Z</published>
    <updated>2017-07-05T06:36:48.389Z</updated>
    
    <content type="html"><![CDATA[<h4 id="노틸러스"><a href="#노틸러스" class="headerlink" title="노틸러스"></a>노틸러스</h4><p>윈도우 탐색기와 비슷하다.<br>실행법 : 프로그램-보조프로그램-파일</p>
<p>내폴더가 홈 디렉토리이다.<br>컴퓨터가 / 폴더이다.<br>rpm 파일도 설치 가능<br>복붙도 가능 컨트롤 씨브이<br>289p 참고</p>
<h4 id="파이어폭스-업그레이드"><a href="#파이어폭스-업그레이드" class="headerlink" title="파이어폭스 업그레이드"></a>파이어폭스 업그레이드</h4><p>설치하고<br>압축풀고</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># mv firefox /usr/local   //압축푼것 위치이동</div><div class="line"># chown -R root.root /usr/local/firefox/ 루트에게 권한줌</div><div class="line"># cd /usr/local/bin</div><div class="line"># ln -s /usr/local/firefox/firefox . //링크를 걸어줌</div><div class="line"></div><div class="line">파폭을 실행하면 에러가 나는데</div><div class="line"></div><div class="line"># cd /usr/local/firefox/browser/extensions/</div><div class="line"># rm -rf *</div><div class="line">해주고 리부트</div></pre></td></tr></table></figure>
<h4 id="어도비리더-설치"><a href="#어도비리더-설치" class="headerlink" title="어도비리더 설치"></a>어도비리더 설치</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># wget http://download.hanbit.co.kr/centos/7/AdobeReader_kor-8.1.7-1.i486.rpm</div><div class="line"></div><div class="line"># su -c &apos;yum -y localinstall Adobe*&apos;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;노틸러스&quot;&gt;&lt;a href=&quot;#노틸러스&quot; class=&quot;headerlink&quot; title=&quot;노틸러스&quot;&gt;&lt;/a&gt;노틸러스&lt;/h4&gt;&lt;p&gt;윈도우 탐색기와 비슷하다.&lt;br&gt;실행법 : 프로그램-보조프로그램-파일&lt;/p&gt;
&lt;p&gt;내폴더가 홈 디렉토리이다.&lt;b
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>5장. X윈도 테마, GRUB 배경화면</title>
    <link href="http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux12/"/>
    <id>http://KKimSangHeon.github.io/2017/07/05/ThisIsLinux12/</id>
    <published>2017-07-05T02:57:03.000Z</published>
    <updated>2017-07-05T04:38:22.934Z</updated>
    
    <content type="html"><![CDATA[<p>이 챕터는 책에서 중요도가 가장 떨어진다!<br>서버관리자가 되었을 때 리눅스를 PC로 사용하는 사람에게 도움을 주기위해 알아둘 필요는 있다.</p>
<h4 id="테마-설치하기"><a href="#테마-설치하기" class="headerlink" title="테마 설치하기"></a>테마 설치하기</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ rpm -qa gnome-tweak-tool  //설치되어있나 확인</div><div class="line">$ gnome-tweak-tool    //툴 켜서 설정변경</div></pre></td></tr></table></figure>
<h4 id="GRUB-이미지-설정"><a href="#GRUB-이미지-설정" class="headerlink" title="GRUB 이미지 설정"></a>GRUB 이미지 설정</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ su -c &apos;yum -y install grub2-starfield-theme&apos;</div><div class="line">  //암호입력    //su -c는 슈퍼바이저 권한으로 실행하는것</div><div class="line">$ vi /etc/default/grub</div><div class="line"></div><div class="line">GRUB_TIMEOUT=5</div><div class="line">GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;</div><div class="line">GRUB_DEFAULT=saved</div><div class="line">GRUB_DISABLE_SUBMENU=true</div><div class="line">#GRUB_TERMINAL_OUTPUT=&quot;console&quot;     //여기 주석처리</div><div class="line">GRUB_CMDLINE_LINUX=&quot;rd.lvm.lv=centos/swap vconsole.font=latarcyrheb-sun16 rd.lvm.lv=centos/root crashkernel=auto  vconsole.keymap=us rhgb quiet&quot;</div><div class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</div><div class="line">GRUB_THEME=&quot;/boot/grub2/themes/system/theme.txt&quot;  //여기추가</div><div class="line"></div><div class="line">vi 저장후 종료</div></pre></td></tr></table></figure>
<p>이미지 파일을 centos폴더에 저장 (ball.png)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv /home/centos/ball.png /boot/grub2/themes/system</div></pre></td></tr></table></figure><br>실행하여 그림 이동</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># vi /boot/grub2/themes/system/theme.txt //</div><div class="line">:set number</div><div class="line"></div><div class="line">34행가서 이미지 파일이름 변경</div><div class="line"># grub2-mkconfig -o /boot/grub2/grub.cfg  //적용</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;이 챕터는 책에서 중요도가 가장 떨어진다!&lt;br&gt;서버관리자가 되었을 때 리눅스를 PC로 사용하는 사람에게 도움을 주기위해 알아둘 필요는 있다.&lt;/p&gt;
&lt;h4 id=&quot;테마-설치하기&quot;&gt;&lt;a href=&quot;#테마-설치하기&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 응급복구, GRUB, 커널 컴파일</title>
    <link href="http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux11/"/>
    <id>http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux11/</id>
    <published>2017-07-04T07:09:17.000Z</published>
    <updated>2017-07-04T10:28:12.394Z</updated>
    
    <content type="html"><![CDATA[<h4 id="응급복구"><a href="#응급복구" class="headerlink" title="응급복구"></a>응급복구</h4><p>261p 참고<br>이게 문제가 될 소지가 있지않냐?<br>그래서 처음 켤때 선택하는거에서 암호를 걸어야 한다.</p>
<h4 id="GRUB-부트로더"><a href="#GRUB-부트로더" class="headerlink" title="GRUB 부트로더"></a>GRUB 부트로더</h4><p>/etc/default/grub 파일과 /etc/grup.d/ 디렉터리의 파일을 수정한 후 ‘grub2-mkconfig’ 명령어를 실행해 설정함</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># vi /etc/default/grub</div><div class="line">timeout = 30 으로 변경</div><div class="line">distributor = &quot;Hello&quot; 로 변경</div><div class="line"># grub2-mkconfig -o /boot/grub2/grub.cfg // 변경사항 반영</div><div class="line"></div><div class="line">//여기서 부터 선택하는 곳에서 e 키 못누르게 비번 설정하는것</div><div class="line"># vi /etc/grub.d/00_header</div><div class="line">맨 아래 가서 다음코드 추가</div><div class="line">cat &lt;&lt; EOF</div><div class="line">set superusers=&quot;thisuser&quot;</div><div class="line">password thisuser 4321</div><div class="line">EOF</div><div class="line">여기까지!</div><div class="line">vi 빠져나와서</div><div class="line"># grub2-mkconfig -o /boot/grub2/grub.cfg // 변경사항 반영</div><div class="line">$ reboot</div><div class="line">선택하는곳에서 e 누르면 암호 누르도록 함</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="커널"><a href="#커널" class="headerlink" title="커널"></a>커널</h4><p>커널 : 하드웨어를 제어하는 기능<br>모든 하드웨어를 제어하는 코드를 다 넣으면 커널이 너무 커지고 무거워진다. 그러므로 잘 안쓰는 하드웨어 코드는 모듈에 빼내서 필요할때마다 사용<br>즉 모듈은 필요할때 쓸 수 있도록 커널의 코드를 밖으로 빼낸것이다!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ uname -r //커널버전확인</div><div class="line">$ wget &quot;https://kernel.org/pub/linux/kernel/v3.x/linux-3.17.4.tar.xz&quot;</div><div class="line">  //교재와 동일한 커널 설치</div><div class="line">$ mv linux-3.17.4.tar.xz /usr/src</div><div class="line">$ cd /usr/src</div><div class="line">$ tar xfJ linux-3.17.4.tar.xz   //압축을 풀자</div><div class="line">$ cd linux-3.17.4/</div><div class="line"></div><div class="line">커널은 c 코드이므로 설치를 위해 컴파일러를 깔자</div><div class="line">$ yum -y install gcc gcc-c++ qt qt-devel</div><div class="line">$ make mrproper // 커널설정 초기화</div><div class="line">$ make xconfig  //커널의 환경설정</div><div class="line">  설정 후</div><div class="line">$ make clean</div><div class="line">$make ;  make modules_install ; make install  //순서대로 진행됨.</div><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;응급복구&quot;&gt;&lt;a href=&quot;#응급복구&quot; class=&quot;headerlink&quot; title=&quot;응급복구&quot;&gt;&lt;/a&gt;응급복구&lt;/h4&gt;&lt;p&gt;261p 참고&lt;br&gt;이게 문제가 될 소지가 있지않냐?&lt;br&gt;그래서 처음 켤때 선택하는거에서 암호를 걸어야 한다.
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 파이프/필터, 프로세스, 서비스/소켓</title>
    <link href="http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux10/"/>
    <id>http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux10/</id>
    <published>2017-07-04T05:52:52.000Z</published>
    <updated>2017-07-04T06:31:35.759Z</updated>
    
    <content type="html"><![CDATA[<h4 id="파이프"><a href="#파이프" class="headerlink" title="파이프"></a>파이프</h4><p>두개의 프로그램을 연결해주는 통로<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -l /etc | more   //앞에서 뒤로 넘김</div></pre></td></tr></table></figure></p>
<h4 id="필터"><a href="#필터" class="headerlink" title="필터"></a>필터</h4><p>필요한것만 걸러주는 명령어</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ ps -ef //현재 작동중인 프로세스 보여줌</div><div class="line"></div><div class="line">$ ps -ef | grep bash    //bash와 관련된 프로세스만</div><div class="line">                      //보여줌</div><div class="line"></div><div class="line">$ rpm -qa | grep gedit  //gedit 관련된것만 보여줌</div></pre></td></tr></table></figure>
<h4 id="리다이렉션-보내는-것"><a href="#리다이렉션-보내는-것" class="headerlink" title="리다이렉션(보내는 것)"></a>리다이렉션(보내는 것)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ ls -l &gt; file.txt //결과를file.txt로 만드는것</div><div class="line">              //file.txt가 존재할 경우 덮어쓰고</div><div class="line">              //존재하지 않을경우 새로 만들고 작성</div><div class="line"></div><div class="line">$ ls -l &gt;&gt; file.txt //결과를file.txt로 만드는것</div><div class="line">                    //file.txt가 존재할 경우 뒤에다 이어서 작성하고</div><div class="line">                    //존재하지 않을경우 새로만들고 작성</div><div class="line"></div><div class="line">$ cat sort &lt; file.txt &gt; out.txt //file.txt를 정렬해서 out.txt에 넣어라</div></pre></td></tr></table></figure>
<h4 id="프로세스-데몬"><a href="#프로세스-데몬" class="headerlink" title="프로세스, 데몬"></a>프로세스, 데몬</h4><p>프로세스는 하드디스크에 저장된 실행코드가 메모리에 로딩되어 활성화 된것.</p>
<h5 id="포그라운드-프로세스"><a href="#포그라운드-프로세스" class="headerlink" title="포그라운드 프로세스"></a>포그라운드 프로세스</h5><p>실행하면 화면에 나타나서 사용자와 상호작용을 하는 프로세스</p>
<h5 id="백그라운드-프로세스"><a href="#백그라운드-프로세스" class="headerlink" title="백그라운드 프로세스"></a>백그라운드 프로세스</h5><p>화면에 나타나지 않고 실행되는 프로세스<br>백신 , 서버 데몬(=서비스,=서버 프로세스)등</p>
<h4 id="프로세스번호"><a href="#프로세스번호" class="headerlink" title="프로세스번호"></a>프로세스번호</h4><p>각각의 프로세스는 할당된 번호가 있다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ ps -ef | grep bash    //bash관련된 프로세스만 보여줌</div><div class="line"></div><div class="line">root       693     1  0 13:43 ?        00:00:00 /bin/bash /usr/sbin/ksmtuned</div><div class="line"></div><div class="line">693은 자기 프로세스 번호고 1은 부모프로세스 번호이다.</div></pre></td></tr></table></figure></p>
<h4 id="작업-번호"><a href="#작업-번호" class="headerlink" title="작업 번호"></a>작업 번호</h4><p>현재 실행되고 있는 백그라운드 프로세스의 순차번호</p>
<h4 id="부모프로세스-자식프로세스"><a href="#부모프로세스-자식프로세스" class="headerlink" title="부모프로세스 ,자식프로세스"></a>부모프로세스 ,자식프로세스</h4><p>모든 프로세스는 부모프로세스를 갖는다.<br>부모 프로세스를 kill하면 자식프로세스도 자동으로 죽음.</p>
<h4 id="프로세스-관련-명령"><a href="#프로세스-관련-명령" class="headerlink" title="프로세스 관련 명령"></a>프로세스 관련 명령</h4><h5 id="ps-프로세스-보기"><a href="#ps-프로세스-보기" class="headerlink" title="ps 프로세스 보기"></a>ps 프로세스 보기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ps -ef | grep bash  //bash 관련 프로세스 보여줌</div></pre></td></tr></table></figure>
<h5 id="kill-프로세스-종료"><a href="#kill-프로세스-종료" class="headerlink" title="kill 프로세스 종료"></a>kill 프로세스 종료</h5><p>파이어폭스 kill하기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ ps -ef | grep fire  //파폭 관련 프로세스 보기</div><div class="line">root      2637  1934  0 13:49 ?        00:00:04 /usr/lib64/firefox/firefox</div><div class="line">//프로세스번호가 2637이다.</div><div class="line">$ kill 2637</div><div class="line">//가끔 킬 해도 죽지 않는 경우가 있는데 그경우 -9 옵션을 준다.</div><div class="line">$ kill -9 2637</div></pre></td></tr></table></figure></p>
<h5 id="pstree-프로세스-트리로-보기"><a href="#pstree-프로세스-트리로-보기" class="headerlink" title="pstree 프로세스 트리로 보기"></a>pstree 프로세스 트리로 보기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$pstree //프로세스 구조를 트리로 보여줌</div></pre></td></tr></table></figure>
<h5 id="실습-포그라운드-gt-백그라운드-gt-포그라운드"><a href="#실습-포그라운드-gt-백그라운드-gt-포그라운드" class="headerlink" title="실습 (포그라운드-&gt;백그라운드-&gt;포그라운드)"></a>실습 (포그라운드-&gt;백그라운드-&gt;포그라운드)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ yes &gt; /dev/null   //y를 계속생성하는 프로세스 생성</div><div class="line">ctrl+ z 입력.</div><div class="line">$ bg //백그라운드 보는것.</div><div class="line">    //처음에 했던 동작이 남아있다.</div><div class="line">[1]+ yes &gt; /dev/null &amp;</div><div class="line"></div><div class="line">$ fg 1    //1번작업을 다시 포그라운드로 갖고와라</div></pre></td></tr></table></figure>
<h5 id="실습-포그라운드-gt-백그라운드-gt-포그라운드-1"><a href="#실습-포그라운드-gt-백그라운드-gt-포그라운드-1" class="headerlink" title="실습 (포그라운드-&gt;백그라운드-&gt;포그라운드)"></a>실습 (포그라운드-&gt;백그라운드-&gt;포그라운드)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ gedit &amp; //지에딧을 백그라운드로 돌려라.</div><div class="line">        //콘솔을 계속 사용할 수 있게된다.</div><div class="line"></div><div class="line">$ vi &amp;  //백그라운드로 돌아가긴 하는데 의미없다.</div><div class="line">        //vi는 포그라운드로 돌려야 하므로  </div><div class="line">$ bg    //vi의 백그라운드 번호를 알고</div><div class="line">$ fg 1   //vi를 포그라운드로 갖고옴</div></pre></td></tr></table></figure>
<h4 id="서비스와-소켓"><a href="#서비스와-소켓" class="headerlink" title="서비스와 소켓"></a>서비스와 소켓</h4><h5 id="서비스"><a href="#서비스" class="headerlink" title="서비스"></a>서비스</h5><p>웹 서버 = 웹 서비스<br>FTP 서버 = FTP 서비스</p>
<p>서비스의 실행 스크립트 파일은 /usr/lib/systemd/system/ 디렉터리에 ‘서비스이름.service’라는 이름으로 확인할 수 있다. 예를들어 웹 서비스는 httpd.service라는 이름의 파일로 존재</p>
<h5 id="소켓"><a href="#소켓" class="headerlink" title="소켓"></a>소켓</h5><p>서비스는 항상 가동되지만 소켓은 필요할 떄만 구동된다. 외부에서 특정 서비스가 요청되었을 때. 그래서 약간 느리다.<br>/usr/lib/systemd/system/ 디렉터리에 소켓이름.socket 이름으로 존재</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;파이프&quot;&gt;&lt;a href=&quot;#파이프&quot; class=&quot;headerlink&quot; title=&quot;파이프&quot;&gt;&lt;/a&gt;파이프&lt;/h4&gt;&lt;p&gt;두개의 프로그램을 연결해주는 통로&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 네트워크 관련 개념과 명령어,SELinux</title>
    <link href="http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux9/"/>
    <id>http://KKimSangHeon.github.io/2017/07/04/ThisIsLinux9/</id>
    <published>2017-07-04T04:29:36.000Z</published>
    <updated>2017-07-04T05:09:11.039Z</updated>
    
    <content type="html"><![CDATA[<h4 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h4><p>우리가 사용하는 인터넷은 tcp/ip 기반이다. 가장널리사용되는 프로토콜의 한 종류</p>
<h4 id="호스트이름-도메인이름"><a href="#호스트이름-도메인이름" class="headerlink" title="호스트이름 도메인이름"></a>호스트이름 도메인이름</h4><p>호스트이름 : 컴퓨터에 지정된 이름<br>도메인 이름 : hanbit.co.kr rkxdms gudtlr</p>
<h4 id="IP-주소"><a href="#IP-주소" class="headerlink" title="IP 주소"></a>IP 주소</h4><p>랜카드에 부여되는 중복되지 않는 유일한 주소</p>
<h4 id="네트워크-주소"><a href="#네트워크-주소" class="headerlink" title="네트워크 주소"></a>네트워크 주소</h4><p>같은 네트워크에 속해있는 공통된 주소</p>
<h4 id="브로드캐스트-주소"><a href="#브로드캐스트-주소" class="headerlink" title="브로드캐스트 주소"></a>브로드캐스트 주소</h4><p>제일 뒤가 255인 주소<br>내부 네트워크의 모든 컴퓨터가 듣게 되는 주소</p>
<h4 id="게이트웨이-라우터"><a href="#게이트웨이-라우터" class="headerlink" title="게이트웨이, 라우터"></a>게이트웨이, 라우터</h4><p>라우터=게이트웨이<br>네트워크 간에 데이터를 전송하는 컴퓨터 또는 장비</p>
<h4 id="넷마스크-클래스"><a href="#넷마스크-클래스" class="headerlink" title="넷마스크, 클래스"></a>넷마스크, 클래스</h4><p>넷마스크 : 네트워크의 규모를 결정<br>ex(255.255.255.0)</p>
<h4 id="DNS-서버-네임서버"><a href="#DNS-서버-네임서버" class="headerlink" title="DNS 서버= 네임서버"></a>DNS 서버= 네임서버</h4><p>URL을 IP로 변환해주는 서버</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ nmtui //네트워크와 관련된 작업진행</div><div class="line"></div><div class="line">$ rdate -s time.bora.net  //시간설정</div><div class="line">$ nmtui     //설정 변경후 종료 네트워크매니저텍스트ui</div><div class="line">$ systemctl restart network //네트워크 재시작 (해줘야함)</div><div class="line"></div><div class="line">$ ifconfig  //네트워크장치에 할당된 ip주소 확인</div><div class="line">$ ifdown ens32  //이거는 systemctl restart network</div><div class="line">                //보다 강력하게 서버를 끄는것.</div><div class="line">$ ifup ens32    //서버 재시작              </div><div class="line"></div><div class="line">$ nslookup  naver.com //DNS서버의 작동을 테스트</div><div class="line"></div><div class="line">$ ping www.yahoo.com //네트워크 응답 확인</div><div class="line">$ ping -3 www.yahoo.com   //세번만 피을 때려라</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="주요-파일"><a href="#주요-파일" class="headerlink" title="주요 파일"></a>주요 파일</h4><p>네트워크 기본적인 정보가 설정되어 있는 파일<br>/etc/sysconfig/network  </p>
<p>/etc/sysconfig/network-scripts/ifcfg-ens32<br>ens32 장치에 설정된 네트워크 정보가 모두 들어있는 파일<br>ens32가 아니라 eno일수도 있다.<br>BOOTPROTO = none 고정아이피를 쓰겠다.<br>DNS1  DNS가 여러개 나올 수 있으므로 1이 필요<br>ONBOOT =”yes” 네트워크를 쓰겠다</p>
<p>/etc/resolv.conf<br>DNS 서버의 정보와 호스트 이름이 들어있다.<br>168.126.63.1 //kt에서 제공하는 네임서버이다<br>            //네임서버가 없을 때 사용가능</p>
<h4 id="SELinux"><a href="#SELinux" class="headerlink" title="SELinux"></a>SELinux</h4><p>보안에 취약한 리눅스를 보호하기 위해 탄생<br>책에서는 실습을 위해 기능을 꺼두었다.<br>/etc/sysconfig/selinux를 편집하였다.<br>SELINUX=disabled 이렇게..</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;TCP-IP&quot;&gt;&lt;a href=&quot;#TCP-IP&quot; class=&quot;headerlink&quot; title=&quot;TCP/IP&quot;&gt;&lt;/a&gt;TCP/IP&lt;/h4&gt;&lt;p&gt;우리가 사용하는 인터넷은 tcp/ip 기반이다. 가장널리사용되는 프로토콜의 한 종류&lt;/p&gt;
&lt;h4
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
</feed>
