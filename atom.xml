<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kim Sang Heon&#39;s Bolg</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://KKimSangHeon.github.io/"/>
  <updated>2021-03-22T13:17:06.896Z</updated>
  <id>http://KKimSangHeon.github.io/</id>
  
  <author>
    <name>Kim Sang Heon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>django model사용시 one to many , many to one 활용</title>
    <link href="http://KKimSangHeon.github.io/2021/03/22/django/"/>
    <id>http://KKimSangHeon.github.io/2021/03/22/django/</id>
    <published>2021-03-22T13:14:10.000Z</published>
    <updated>2021-03-22T13:17:06.896Z</updated>
    
    <content type="html"><![CDATA[<h3 id="order-detail-order가-있을-때"><a href="#order-detail-order가-있을-때" class="headerlink" title="order / detail order가 있을 때"></a>order / detail order가 있을 때</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">many to one일때</div><div class="line">detail_order = DetailOrder.objects.select_related(&apos;order&apos;).get(id=request.data[&apos;id&apos;])</div><div class="line"></div><div class="line">one  to many일땐</div><div class="line">order = order.objects.filter(id=1).prefetch_related(&quot;detail_order&quot;)</div><div class="line"></div><div class="line">remain_detail_order = DetailOrder.objects.filter(order__id=detail_order.order.id).count()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;order-detail-order가-있을-때&quot;&gt;&lt;a href=&quot;#order-detail-order가-있을-때&quot; class=&quot;headerlink&quot; title=&quot;order / detail order가 있을 때&quot;&gt;&lt;/a&gt;order / deta
    
    </summary>
    
      <category term="Web/App" scheme="http://KKimSangHeon.github.io/categories/Web-App/"/>
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/categories/Web-App/Django/"/>
    
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Vuejs EventBus 공통모듈로 사용할 때 모든 페이지가 이벤트를 수신하는 상황</title>
    <link href="http://KKimSangHeon.github.io/2021/03/22/vue/"/>
    <id>http://KKimSangHeon.github.io/2021/03/22/vue/</id>
    <published>2021-03-22T13:04:31.000Z</published>
    <updated>2021-03-22T13:12:23.373Z</updated>
    
    <content type="html"><![CDATA[<h3 id="이벤트버스를-공통함수로-빼서-사용할-때의-이슈"><a href="#이벤트버스를-공통함수로-빼서-사용할-때의-이슈" class="headerlink" title="이벤트버스를 공통함수로 빼서 사용할 때의 이슈"></a>이벤트버스를 공통함수로 빼서 사용할 때의 이슈</h3><p>헤더에서 특정값을 변경하면 라우터 뷰에 정의된 페이지도 변경되어야 해서 특정값 변경시 헤더에서 event emit하도록 해놓음…</p>
<p>이벤트 버스를 공통모듈로 쓰니 해당 이벤트 버스를 쓰는 모든 화면들이 해당 이벤트를 수신하여 난리가남…<br>(SPA라 그런가…. 더 알아볼것.)</p>
<p>화면이 바뀌면 이벤트를 수신하도록 on 걸어놓은것들은 파괴될줄 알았는데…</p>
<p>무튼 해결방법은 모든 페이지에 접근할 때마다  created() 내에서 해당 이벤트를 지우고 신규로 등록하도록 하는것.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">created()&#123;</div><div class="line">    EventBus.$off(&apos;change-server&apos;);</div><div class="line">    EventBus.$on(&apos;change-server&apos;, function() &#123;~~~~&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>또는 해당 페이지가 destory 될 때 없애버리기….</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">beforeDestroy()&#123;</div><div class="line">    EventBus.$off(&apos;change-server&apos;);</div><div class="line">&#125;,</div><div class="line"></div><div class="line">created()&#123;</div><div class="line">  EventBus.$on(&apos;change-server&apos;, function() &#123;~~~~&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;이벤트버스를-공통함수로-빼서-사용할-때의-이슈&quot;&gt;&lt;a href=&quot;#이벤트버스를-공통함수로-빼서-사용할-때의-이슈&quot; class=&quot;headerlink&quot; title=&quot;이벤트버스를 공통함수로 빼서 사용할 때의 이슈&quot;&gt;&lt;/a&gt;이벤트버스를 공통함수
    
    </summary>
    
      <category term="Web/App" scheme="http://KKimSangHeon.github.io/categories/Web-App/"/>
    
      <category term="Vuejs" scheme="http://KKimSangHeon.github.io/categories/Web-App/Vuejs/"/>
    
    
      <category term="Web" scheme="http://KKimSangHeon.github.io/tags/Web/"/>
    
      <category term="Vuejs" scheme="http://KKimSangHeon.github.io/tags/Vuejs/"/>
    
  </entry>
  
  <entry>
    <title>django model사용시 queryset의 values 활용</title>
    <link href="http://KKimSangHeon.github.io/2021/02/21/django-model-values/"/>
    <id>http://KKimSangHeon.github.io/2021/02/21/django-model-values/</id>
    <published>2021-02-21T13:08:56.000Z</published>
    <updated>2021-02-21T13:14:58.311Z</updated>
    
    <content type="html"><![CDATA[<p>model을 조회하고 이를 response로 리턴할 때 values를 활용하면 유용함.</p>
<h3 id="쿼리셋-편하게-리턴하기-values"><a href="#쿼리셋-편하게-리턴하기-values" class="headerlink" title="쿼리셋 편하게 리턴하기 - values()"></a>쿼리셋 편하게 리턴하기 - values()</h3><p>단순히 values() 를 활용할 경우 detail_order 내 외래키로 걸린 object들은 key만 리턴되는데..</p>
<p>아래의 경우 postnatal_care_man의 username 필드가 필요하여 아래와 같이 처리하였다.</p>
<p>values() 사용시 <code>__</code>을 잘 사용하면 좋을듯하다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> detail_order_list = DetailOrder.objects.filter(order__customer=finder).values(</div><div class="line">  &apos;id&apos;,</div><div class="line">  &apos;road_address&apos;,</div><div class="line">  &apos;detail_address&apos;,</div><div class="line">  &apos;order_id&apos;,</div><div class="line">  &apos;start_time&apos;,</div><div class="line">  &apos;end_time&apos;,</div><div class="line">  &apos;detail&apos;,</div><div class="line">  &apos;postnatal_care_man__username&apos;</div><div class="line">  )</div><div class="line"></div><div class="line"></div><div class="line">Response(detail_order_list.values(), status=status.HTTP_200_OK)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;model을 조회하고 이를 response로 리턴할 때 values를 활용하면 유용함.&lt;/p&gt;
&lt;h3 id=&quot;쿼리셋-편하게-리턴하기-values&quot;&gt;&lt;a href=&quot;#쿼리셋-편하게-리턴하기-values&quot; class=&quot;headerlink&quot; title
    
    </summary>
    
      <category term="Web/App" scheme="http://KKimSangHeon.github.io/categories/Web-App/"/>
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/categories/Web-App/Django/"/>
    
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>django model inner join - orm</title>
    <link href="http://KKimSangHeon.github.io/2021/02/21/django-model-join/"/>
    <id>http://KKimSangHeon.github.io/2021/02/21/django-model-join/</id>
    <published>2021-02-21T13:01:41.000Z</published>
    <updated>2021-02-21T13:08:58.611Z</updated>
    
    <content type="html"><![CDATA[<p>django model의 inner 조인방법</p>
<p>order, detail_order 이라는 모델이 있을 때</p>
<h4 id="detail-order을-가져올-때-order내-customer이라는-컬럼을-통해-조인하는-방법"><a href="#detail-order을-가져올-때-order내-customer이라는-컬럼을-통해-조인하는-방법" class="headerlink" title="detail order을 가져올 때 order내 customer이라는 컬럼을 통해 조인하는 방법"></a>detail order을 가져올 때 order내 customer이라는 컬럼을 통해 조인하는 방법</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">detail_order_list = DetailOrder.objects.filter(order__customer=finder)</div><div class="line">둘 다 결과 동일</div><div class="line">detail_order_list = DetailOrder.objects.select_related(&apos;order&apos;).filter(order__customer=finder)</div></pre></td></tr></table></figure>
<p>즉 ‘__’ 를 잘 활용하자…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;django model의 inner 조인방법&lt;/p&gt;
&lt;p&gt;order, detail_order 이라는 모델이 있을 때&lt;/p&gt;
&lt;h4 id=&quot;detail-order을-가져올-때-order내-customer이라는-컬럼을-통해-조인하는-방법&quot;&gt;&lt;a hr
    
    </summary>
    
      <category term="Web/App" scheme="http://KKimSangHeon.github.io/categories/Web-App/"/>
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/categories/Web-App/Django/"/>
    
    
      <category term="Django" scheme="http://KKimSangHeon.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>git hard reset</title>
    <link href="http://KKimSangHeon.github.io/2021/02/21/hardReset/"/>
    <id>http://KKimSangHeon.github.io/2021/02/21/hardReset/</id>
    <published>2021-02-21T12:48:33.000Z</published>
    <updated>2021-02-21T13:04:42.464Z</updated>
    
    <content type="html"><![CDATA[<p>가끔 돌아올수없는 길을 건넜을 때 그냥 돌려버리고 싶을 때….만 활용하자</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git log</div><div class="line"></div><div class="line">돌아가기 원하는 시점의 commit 복사</div><div class="line"></div><div class="line">$ git reset --hard  &#123;commit ID&#125;</div><div class="line"></div><div class="line">$ git push -f origin master</div></pre></td></tr></table></figure>
<h4 id="remote-rejected-master-gt-master-pre-receive-hook-declined-발생시"><a href="#remote-rejected-master-gt-master-pre-receive-hook-declined-발생시" class="headerlink" title="! [remote rejected] master -&gt; master (pre-receive hook declined) 발생시"></a>! [remote rejected] master -&gt; master (pre-receive hook declined) 발생시</h4><p>gitlab에서 소스 프로젝트-&gt;세팅-&gt;protected branches에 developer can push라는 체크박스가 있는데 체크 후 unprotect 버튼 클릭 후 재시도</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;가끔 돌아올수없는 길을 건넜을 때 그냥 돌려버리고 싶을 때….만 활용하자&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>리눅스 서버간 파일 동기화</title>
    <link href="http://KKimSangHeon.github.io/2021/02/21/rsync/"/>
    <id>http://KKimSangHeon.github.io/2021/02/21/rsync/</id>
    <published>2021-02-21T12:32:39.000Z</published>
    <updated>2021-02-21T12:46:22.038Z</updated>
    
    <content type="html"><![CDATA[<p>원격지에 있는 서버에 ftp로 접속하고 파일을 올리지 않고 명령어 한줄로도 가능한 방법이 있음..</p>
<h3 id="rsync-amp-scp"><a href="#rsync-amp-scp" class="headerlink" title="rsync &amp; scp"></a>rsync &amp; scp</h3><p>원격지에서 데이터를 갖고오기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rsync -avz &#123;원격지서버IP&#125;:/postgres/11/postgres</div></pre></td></tr></table></figure></p>
<p>원격지로 디렉토리 보내기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r &#123;옮길디렉토리&#125; root@&#123;업로드대상서버IP&#125;:&#123;디렉토리&#125;</div></pre></td></tr></table></figure></p>
<p>원격지에서 디렉토리 가져오기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp -r root@&#123;원격지서버IP&#125;:&#123;디렉토리&#125; &#123;저장할 디렉토리&#125;</div></pre></td></tr></table></figure></p>
<h3 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h3><p>원격에 있는 파일과 디렉토리를 복사하고 동기화 하기 위해 사용하는 툴.</p>
<h3 id="rsync-amp-lyncd를-활용한-postgres-서버-동기화"><a href="#rsync-amp-lyncd를-활용한-postgres-서버-동기화" class="headerlink" title="rsync &amp; lyncd를 활용한 postgres 서버 동기화"></a>rsync &amp; lyncd를 활용한 postgres 서버 동기화</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"># systemctl enable lsyncd</div><div class="line"># systemctl start lsyncd</div><div class="line"></div><div class="line"></div><div class="line">서버1</div><div class="line">#ssh-keygen</div><div class="line">모두 enter</div><div class="line"># ssh-copy-id –p 22 root@111.111.111.111</div><div class="line"># ssh root@111.111.111.111 ( ssh 접속 확인 )</div><div class="line"></div><div class="line"></div><div class="line">서버2</div><div class="line">#ssh-keygen</div><div class="line">모두 enter</div><div class="line"># cat ~/.ssh/id_rsa.pub | ssh –p 22 root@000.000.000.000 “mkdir –p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys”</div><div class="line"># ssh root@000.000.000.000. ( ssh 접속 확인 )</div><div class="line"></div><div class="line"></div><div class="line">서버1, 서버2</div><div class="line"># vi /etc/lsyncd.conf</div><div class="line"></div><div class="line">settings &#123;</div><div class="line">logfile=&quot;/logs/lsyncd.log&quot;,</div><div class="line">statusFile=&quot;/logs/lsyncd-status.log&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sync &#123;</div><div class="line">default.rsyncssh,	# rsync 아님</div><div class="line">source=&quot;/data/nas&quot;,</div><div class="line">host=&quot;동기화 대상 ip&quot;,</div><div class="line">targetdir=&quot;/data/nas&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">systemctl restart lsyncd</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;원격지에 있는 서버에 ftp로 접속하고 파일을 올리지 않고 명령어 한줄로도 가능한 방법이 있음..&lt;/p&gt;
&lt;h3 id=&quot;rsync-amp-scp&quot;&gt;&lt;a href=&quot;#rsync-amp-scp&quot; class=&quot;headerlink&quot; title=&quot;rsyn
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue 네아로(네이버아이디)로 로그인 기능 구현</title>
    <link href="http://KKimSangHeon.github.io/2021/01/04/naveroauth/"/>
    <id>http://KKimSangHeon.github.io/2021/01/04/naveroauth/</id>
    <published>2021-01-04T01:42:27.000Z</published>
    <updated>2021-01-04T01:59:46.443Z</updated>
    
    <content type="html"><![CDATA[<p>vue를 활용한 naver 아이디로 로그인 기능 구현</p>
<h3 id="플로우"><a href="#플로우" class="headerlink" title="플로우"></a>플로우</h3><ol>
<li>front에서 code를 얻고</li>
<li>code를 서버로 던지고</li>
<li>서버에서 code를 활용하여 토큰을 얻고</li>
<li>얻은 토큰을 통해 사용자 정보를 조회함</li>
</ol>
<h3 id="문제사항"><a href="#문제사항" class="headerlink" title="문제사항"></a>문제사항</h3><p>위 1번과정 중 네이버 아이디로 로그인 버튼을 클릭시 axios get함수를 활용하여 코드를 얻으려 하니 CORS 에러가 발생<br><figure class="highlight plain"><figcaption><span>Access to XMLHttpRequest at 'https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=XXXXXXXXXXXX&redirect_uri=http%3A%2F%2F127.0.0.1%3A8080%2FnaverLogin&state=78577e6c-3f10-4146-910c-3fd4e684dfb5' from origin 'http://127.0.0.1:8080' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<p>카카오 아이디로 로그인의 경우 해당 에러가 발생하지 않았는데… 네이버 서버에서 헤더에 CORS관련 세팅을 안해줘서 그렇다고 생각한다.</p>
<h3 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h3><p>해당방법이 적합한 방법인지는 확실하지 않으나 여러 사이트들의 네이버아이디로 로그인에 대해 살펴보니 해당방법으로 처리한것을 확인할 수 있었음.</p>
<h4 id="해결방법상세"><a href="#해결방법상세" class="headerlink" title="해결방법상세"></a>해결방법상세</h4><p>아래의 주소로 직접 접속하면 리다이렉트도 정상적으로 되고, 코드값도 쿼리파람을 통해 확인할 수 있었음<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://nid.naver.com/oauth2.0/authorize?response_type=code&amp;client_id=XXXXXXXXXXXX&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8080%2FnaverLogin&amp;state=78577e6c-3f10-4146-910c-3fd4e684dfb5</div></pre></td></tr></table></figure></p>
<p>그래서 네이버 아이디로 로그인 버튼 클릭시 axios를 활용하지 않고 위 주소로 페이지 이동을 하도록 처리함.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">window.location.href = authUri</div></pre></td></tr></table></figure></p>
<p>리다이렉트 된 곳에선 쿼리파람을 통해 얻은 code, state를 서버로 보내도록 함<br>이후 서버에선 <code>https://nid.naver.com/oauth2.0/token</code>을 호출하여 토큰을 얻고 <code>https://openapi.naver.com/v1/nid/me</code> 에 접속해서 사용자 데이터를 얻어옴.</p>
<p>http get 함수로만 구현되어있는게 약간 독특했던 기억..</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue를 활용한 naver 아이디로 로그인 기능 구현&lt;/p&gt;
&lt;h3 id=&quot;플로우&quot;&gt;&lt;a href=&quot;#플로우&quot; class=&quot;headerlink&quot; title=&quot;플로우&quot;&gt;&lt;/a&gt;플로우&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;front에서 code를 얻고&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="CS" scheme="http://KKimSangHeon.github.io/categories/CS/"/>
    
      <category term="오픈소스,기술" scheme="http://KKimSangHeon.github.io/categories/CS/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EA%B8%B0%EC%88%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu usb설치시 발생하는 오류 해결방법</title>
    <link href="http://KKimSangHeon.github.io/2020/11/24/linux-1/"/>
    <id>http://KKimSangHeon.github.io/2020/11/24/linux-1/</id>
    <published>2020-11-24T12:28:18.000Z</published>
    <updated>2020-11-24T12:35:15.864Z</updated>
    
    <content type="html"><![CDATA[<p>데스크톱에 usb를 활용하여 우분투를 설치하며 꽤 오랜시간 삽질을 했었는데 gpu와 충돌로 인한 문제였다.</p>
<p>증상은 설치화면으로 들어가지지 않고 어찌어찌 설치를 완료해도 부팅이 안되는 문제…</p>
<p>해결방법<br><a href="http://ejklike.github.io/2017/03/05/install-ubuntu-16.04-with-nvidia-gpu.html" target="_blank" rel="external">http://ejklike.github.io/2017/03/05/install-ubuntu-16.04-with-nvidia-gpu.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;데스크톱에 usb를 활용하여 우분투를 설치하며 꽤 오랜시간 삽질을 했었는데 gpu와 충돌로 인한 문제였다.&lt;/p&gt;
&lt;p&gt;증상은 설치화면으로 들어가지지 않고 어찌어찌 설치를 완료해도 부팅이 안되는 문제…&lt;/p&gt;
&lt;p&gt;해결방법&lt;br&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo 포스트 생성 및 배포방법</title>
    <link href="http://KKimSangHeon.github.io/2020/11/24/hexo/"/>
    <id>http://KKimSangHeon.github.io/2020/11/24/hexo/</id>
    <published>2020-11-24T12:20:50.000Z</published>
    <updated>2020-11-24T12:25:59.257Z</updated>
    
    <content type="html"><![CDATA[<h4 id="hexo-설치"><a href="#hexo-설치" class="headerlink" title="hexo 설치"></a>hexo 설치</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure>
<h4 id="hexo-포스트-생성"><a href="#hexo-포스트-생성" class="headerlink" title="hexo 포스트 생성"></a>hexo 포스트 생성</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new post [postname]</div></pre></td></tr></table></figure>
<h4 id="hexo-배포"><a href="#hexo-배포" class="headerlink" title="hexo 배포"></a>hexo 배포</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g --d</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;hexo-설치&quot;&gt;&lt;a href=&quot;#hexo-설치&quot; class=&quot;headerlink&quot; title=&quot;hexo 설치&quot;&gt;&lt;/a&gt;hexo 설치&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>로그갱신여부 판단하는 쉘</title>
    <link href="http://KKimSangHeon.github.io/2020/11/24/linux/"/>
    <id>http://KKimSangHeon.github.io/2020/11/24/linux/</id>
    <published>2020-11-24T12:20:34.000Z</published>
    <updated>2020-11-24T12:24:50.742Z</updated>
    
    <content type="html"><![CDATA[<p>서버 내 존재하는 로그파일이 permitIdleSecond이상 아무런 변화가 없을 때 curl을 보내도록 함</p>
<p>지금은 슬랙 노티를 보내도록 설정해둠<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">idleSecond=0</div><div class="line">path=/home/aidxuser/Public/</div><div class="line">fileName=nohup_201119.out</div><div class="line">#fileName=test.log</div><div class="line"></div><div class="line">checkIntervalSecond=600</div><div class="line">permitIdleSecond=300</div><div class="line"></div><div class="line">function checkLogCollectiion()</div><div class="line">&#123;</div><div class="line">        local lastCollected=`date -r $&#123;path&#125;$&#123;fileName&#125; +%s`</div><div class="line">        local now=`date +%s`</div><div class="line">        idleSecond=`expr $now - $lastCollected`</div><div class="line">        #echo $idleSecond</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">while true ; do</div><div class="line"></div><div class="line">        checkLogCollectiion</div><div class="line"></div><div class="line">        if [ $&#123;idleSecond&#125; -gt $&#123;permitIdleSecond&#125; ]; then</div><div class="line">                #echo &quot;Please Check Collection Server&quot;</div><div class="line">                curl -s -d &quot;payload=&#123;\&quot;text\&quot;:\&quot;Please Check Collection Server. Idle time : &quot;$&#123;idleSecond&#125;&quot;\&quot;&#125;&quot; &quot;https://hooks.slack.com/services/XXX&quot;</div><div class="line">        fi</div><div class="line"></div><div class="line">        sleep $checkIntervalSecond</div><div class="line">done</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;서버 내 존재하는 로그파일이 permitIdleSecond이상 아무런 변화가 없을 때 curl을 보내도록 함&lt;/p&gt;
&lt;p&gt;지금은 슬랙 노티를 보내도록 설정해둠&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Kurento</title>
    <link href="http://KKimSangHeon.github.io/2020/09/14/webrtc2/"/>
    <id>http://KKimSangHeon.github.io/2020/09/14/webrtc2/</id>
    <published>2020-09-14T00:31:36.000Z</published>
    <updated>2020-09-14T00:47:21.978Z</updated>
    
    <content type="html"><![CDATA[<h3 id="보완예정"><a href="#보완예정" class="headerlink" title="보완예정"></a>보완예정</h3><h3 id="centos-maven-설치"><a href="#centos-maven-설치" class="headerlink" title="centos maven 설치"></a>centos maven 설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget http://mirror.navercorp.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz  &amp;&amp;</div><div class="line">tar xvf apache-maven-3.6.3-bin.tar.gz &amp;&amp;</div><div class="line">mv apache-maven-3.6.3 /usr/local/maven &amp;&amp;</div><div class="line">ln -s /usr/local/maven/bin/mvn /usr/bin/mvn &amp;&amp;</div><div class="line">vi /etc/profile.d/maven.sh</div></pre></td></tr></table></figure>
<p>#!/bin/bash<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">MAVEN_HOME=/srv/maven</div><div class="line">PATH=$MAVEN_HOME/bin:$PATH</div><div class="line">export PATH MAVEN_HOME</div><div class="line">export CLASSPATH=.</div><div class="line"></div><div class="line">chmod +x /etc/profile.d/maven.sh</div><div class="line">source /etc/profile.d/maven.sh</div></pre></td></tr></table></figure></p>
<h3 id="Kurento-Media-Server-설치"><a href="#Kurento-Media-Server-설치" class="headerlink" title="Kurento Media Server 설치"></a>Kurento Media Server 설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">yum install https://get.pkgs.cloud/release.rpm -y $$</div><div class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;pkgs.cloud&quot; list available $$</div><div class="line">yum install pkgs.cloud-nodejs-7.x-release -y $$</div><div class="line"></div><div class="line">yum install nodejs-7.x-release -y $$</div><div class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;pkgs.cloud-nodejs-7.x&quot; list available $$</div><div class="line">yum search nodejs $$</div><div class="line">yum install nodejs nodejs-devel -y $$</div><div class="line"></div><div class="line">yum install kurento-release epel-release -y $$</div><div class="line"></div><div class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;pkgs.cloud-kurento&quot; list available $$</div><div class="line">yum install kms</div><div class="line"></div><div class="line">systemctl enable kms.service $$</div><div class="line">systemctl start kms.service $$</div><div class="line">systemctl restart kms.service $$</div><div class="line"></div><div class="line"></div><div class="line">firewall-cmd --zone=public --permanent --add-port=49152-65535/udp $$</div><div class="line">systemctl reload firewalld</div></pre></td></tr></table></figure>
<h3 id="Kurento-Java-Tutorial"><a href="#Kurento-Java-Tutorial" class="headerlink" title="Kurento Java Tutorial"></a>Kurento Java Tutorial</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install -y git &amp;&amp;</div><div class="line">git clone https://github.com/Kurento/kurento-tutorial-java.git &amp;&amp;</div><div class="line">cd kurento-tutorial-java/kurento-hello-world &amp;&amp;</div><div class="line">git checkout master &amp;&amp;</div><div class="line">mvn -U clean spring-boot:run -Dkms.url=ws://localhost:8888/kurento &amp;&amp;</div></pre></td></tr></table></figure>
<h3 id="maven-설치"><a href="#maven-설치" class="headerlink" title="maven 설치"></a>maven 설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget http://mirror.navercorp.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz  &amp;&amp;</div><div class="line">tar xvf apache-maven-3.6.3-bin.tar.gz &amp;&amp;</div><div class="line">mv apache-maven-3.6.3 /usr/local/maven &amp;&amp;</div><div class="line">ln -s /usr/local/maven/bin/mvn /usr/bin/mvn</div></pre></td></tr></table></figure>
<h3 id="kurento-tutorial-js"><a href="#kurento-tutorial-js" class="headerlink" title="kurento-tutorial-js"></a>kurento-tutorial-js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$wget https://github.com/Kurento/kurento-tutorial-js.git</div><div class="line">$wget https://github.com/Kurento/kurento-tutorial-js/archive/master.zip</div><div class="line"></div><div class="line">$unzip master.zip</div><div class="line">$cd kurento-tutorial-js-master/kurento-hello-world</div><div class="line"></div><div class="line">#yum install git</div><div class="line">$bower install</div><div class="line"></div><div class="line">sudo npm install -g http-server</div><div class="line">http-server -p 8443</div></pre></td></tr></table></figure>
<h3 id="Kurento-Java-Tutorial-1"><a href="#Kurento-Java-Tutorial-1" class="headerlink" title="Kurento Java Tutorial"></a>Kurento Java Tutorial</h3><p>yum install git</p>
<p>$ git clone <a href="https://github.com/Kurento/kurento-tutorial-java.git" target="_blank" rel="external">https://github.com/Kurento/kurento-tutorial-java.git</a><br>$ cd kurento-tutorial-java/kurento-hello-world<br>$ git checkout master<br>$ mvn -U clean spring-boot:run -Dkms.url=ws://localhost:8888/kurento</p>
<h3 id="ssl-인증서-문제로-접속이-안된다"><a href="#ssl-인증서-문제로-접속이-안된다" class="headerlink" title="ssl 인증서 문제로 접속이 안된다."></a>ssl 인증서 문제로 접속이 안된다.</h3><p>yum install openssl</p>
<p>서버 CA 개인 키 생성.<br>openssl genrsa -des3 -out server.cakey.pem</p>
<p>서버 CA 공개 키 생성.<br>openssl req -new -x509 -key server.cakey.pem -out root.crt</p>
<p>서버 개인 키 생성.<br>openssl genrsa -out server.key</p>
<p>서버 CSR (Certificate Signing Request) 생성.<br>openssl req -new -key server.key -out server.csr</p>
<p>차체 서명된 인증서 (Self-Signed Certificate) 생성.<br>openssl x509 -req -in server.csr -days 3650 -sha1 -CAcreateserial -CA root.crt -CAkey server.cakey.pem -out server.crt</p>
<p>참고<br><a href="https://doc-kurento.readthedocs.io/en/stable/tutorials/java/tutorial-helloworld.html" target="_blank" rel="external">https://doc-kurento.readthedocs.io/en/stable/tutorials/java/tutorial-helloworld.html</a><br>KMS : <a href="https://github.com/pkgs-cloud/kurento" target="_blank" rel="external">https://github.com/pkgs-cloud/kurento</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;보완예정&quot;&gt;&lt;a href=&quot;#보완예정&quot; class=&quot;headerlink&quot; title=&quot;보완예정&quot;&gt;&lt;/a&gt;보완예정&lt;/h3&gt;&lt;h3 id=&quot;centos-maven-설치&quot;&gt;&lt;a href=&quot;#centos-maven-설치&quot; class=&quot;header
    
    </summary>
    
      <category term="CS" scheme="http://KKimSangHeon.github.io/categories/CS/"/>
    
      <category term="오픈소스,기술" scheme="http://KKimSangHeon.github.io/categories/CS/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EA%B8%B0%EC%88%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>webrtc1</title>
    <link href="http://KKimSangHeon.github.io/2020/09/14/webrtc1/"/>
    <id>http://KKimSangHeon.github.io/2020/09/14/webrtc1/</id>
    <published>2020-09-14T00:31:31.000Z</published>
    <updated>2020-09-14T00:37:52.203Z</updated>
    
    <content type="html"><![CDATA[<h3 id="틀린것-많음…-보완할-예정"><a href="#틀린것-많음…-보완할-예정" class="headerlink" title="틀린것 많음… 보완할 예정"></a>틀린것 많음… 보완할 예정</h3><h3 id="알아두어야할-용어설명"><a href="#알아두어야할-용어설명" class="headerlink" title="알아두어야할 용어설명"></a>알아두어야할 용어설명</h3><ul>
<li><p>Candidate<br>Peer to Peer 통신을 위해 접근할수 있는 경로들의 후보.</p>
</li>
<li><p>ICE(Interactive Connectivity Establishment)<br>브라우저가 peer 연결 할 수 있도록 지원하는 프레임워크. ICE는 이러한 작업을 수행하기 위해 STUN과 TURN 서버 둘다 혹은 하나의 서버를 사용.</p>
</li>
<li><p>STUN (Session Traversal Utilities for NAT)<br>클라이언트는 인터넷을 통해 클라이언트의 공개주소와 라우터의 NAT 뒤에 있는 클라이언트가 접근가능한지에 대한 답변을 위한 요청을 STUN서버에 보냅니다. 즉 자신의 공인 IP를 STUN에 요청하고 이후 통신시도함.<br>STUN의 경우에는 구글의 오픈서버를 사용하면 됨</p>
</li>
<li><p>TURN (Traversal Using Relays around NAT )<br>STUN을 통했으나 Peer을 서로 못찾았을 때 이를 활용한다. 이 방식은 TURN 서버를 통해 서로 통신하므로 (Proxy를 생각하면 좋다)비용이 많이든다.<br>외부에 있는 사람들과 화상 통화를 하려면 TURN 서버가 필수적인데 미디어와 영상이 해당 서버를 통해 거쳐간다(proxy를 생각하자).<br>TURN 서버와 연결을 한 후 모든 peer들에게 저 서버에 모든 패킷을 보내고 다시 나에게 전달해달라고 해야 합니다. 이것은 명백히 오버헤드가 발생하므로 이 방법은 다른 대안이 없을 경우만 사용하게 됨.<br>서버 부하가 많으므로 무료로 제공하는곳을 찾기힘듦</p>
</li>
<li><p>SDP (Session Description Protocol )<br>해상도나 형식, 코덱, 암호화등의 멀티미디어 컨텐츠의 연결을 설명하기 위한 표준입니다.</p>
</li>
<li><p>Signaling<br>WebRTC는 P2P 통신이지만 이를 중계하는 서버가 필요한데 이를 시그널 서버라 한다. 중계라 하면 연결을 위한 데이터(SDP, Candidtate) 요청 등…WebRTC에서 제공하는것은 아님</p>
</li>
</ul>
<p><a href="https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Protocols" target="_blank" rel="external">https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Protocols</a> 그림넣기</p>
<h4 id="채널생성"><a href="#채널생성" class="headerlink" title="채널생성"></a>채널생성</h4><p>Channel API를 통해 채널을 생성하는 방식은 다음과 같습니다<br>클라이언트 A가 하나의 유니크 ID를 생성합니다.<br>클라이언트 A는 자신의 ID를 App Engine 앱에 넘겨주면서 채널 토큰을 요청합니다.<br>App Engine 앱은 Channel API로 부터 채널과 클라이언트 ID에 해당하는 토큰을 요청합니다.<br>앱은 토큰을 클라이언트 A에게 전달합니다.<br>클라이언트 A는 소켓을 열고 서버에 설정된 채널로부터 메세지를 기다립니다.</p>
<h4 id="메세지-전송"><a href="#메세지-전송" class="headerlink" title="메세지 전송"></a>메세지 전송</h4><p>클라이언트 B는 변경사항과 함께 App Engine 앱으로 POST 요청을 보냅니다.<br>App Engine 앱은 요청을 channel을 통해 전달합니다.<br>채널은 메세지를 클라이언트 A에게 전달합니다.<br>클라이언트 A의 onmessage 콜백함수가 호출됩니다.</p>
<h3 id="WebRTC의-제공-API"><a href="#WebRTC의-제공-API" class="headerlink" title="WebRTC의 제공 API"></a>WebRTC의 제공 API</h3><p>1.MediaStream: 사용자의 카메라와 마이크 같은 곳의 데이터 스트림에 접근합니다. 이를 PeerConnection에 전달하여 미디어를 전송함<br>2.RTCPeerConnection: 암호화 및 대역폭 관리를 하는 기능을 가지고 있고, 오디오 또는 비디오 교환을 합니다.<br>3.RTCDataChannel: 데이터 통신을 지원하는 채널.</p>
<h3 id="1-MediaStream"><a href="#1-MediaStream" class="headerlink" title="1.MediaStream"></a>1.MediaStream</h3><p><a href="https://simpl.info/getusermedia/" target="_blank" rel="external">https://simpl.info/getusermedia/</a> 에 들어가서 소스코드를 분석해보자.</p>
<p>getUserMedia() 함수는 아래와 같이 세개의 요소가 필요</p>
<ul>
<li>constraints</li>
<li>에러핸들링 함수</li>
<li>성공했을 때 함수</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">var constraints = &#123;</div><div class="line">  video: true</div><div class="line">&#125;;</div><div class="line"></div><div class="line">function handleSuccess(stream) &#123;</div><div class="line">  window.stream = stream; // only to make stream available to console</div><div class="line">  video.srcObject = stream;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function handleError(error) &#123;</div><div class="line">  console.log(&apos;getUserMedia error: &apos;, error);</div><div class="line">&#125;</div><div class="line"></div><div class="line">navigator.mediaDevices.getUserMedia(constraints).</div><div class="line">  then(handleSuccess).catch(handleError);</div></pre></td></tr></table></figure>
<h3 id="2-RTCPeerConnection"><a href="#2-RTCPeerConnection" class="headerlink" title="2.RTCPeerConnection"></a>2.RTCPeerConnection</h3><h4 id="먼저-Signaling-이란-session-control-network-and-media-information"><a href="#먼저-Signaling-이란-session-control-network-and-media-information" class="headerlink" title="먼저 Signaling 이란: session control, network and media information"></a>먼저 Signaling 이란: session control, network and media information</h4><p>RTCPeerConnection을 위해 Signaling으로 알려진 일련의 과정이 필요하다.</p>
<p>Signaling 메세지의 요소들은 다음과 같다.</p>
<ul>
<li>Session control messages: 통신의 초기화, 종료 그리고 에러 리포트 정보</li>
<li>Network configuration: 내 컴퓨터의 IP 주소와 Port 정보</li>
<li>Media capabilities: 내 브라우저와 상대브라우저가 사용 가능한 코덱들과 해상도 정보<br>이 시그널링 프로세스는 클라이언트에서 메세지를 송신하는 방법을 필요로 합니다. 그 메커니즘은 WebRTC API에 의해 구현되지 않습니다<br>시그널링을 위해 오가는 데이터는 SDP(Session Description Protocol) 형태이다.<br>시그널링 간 오가는 데이터는 ice 서버에서 얻어온다.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">var signalingChannel = createSignalingChannel();</div><div class="line">var pc;</div><div class="line">var configuration = ...;</div><div class="line"></div><div class="line">// run start(true) to initiate a call</div><div class="line">function start(isCaller) &#123;</div><div class="line">    pc = new RTCPeerConnection(configuration);</div><div class="line"></div><div class="line">    // send any ice candidates to the other peer</div><div class="line">    pc.onicecandidate = function (evt) &#123;</div><div class="line">        signalingChannel.send(JSON.stringify(&#123; &quot;candidate&quot;: evt.candidate &#125;));</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    // once remote stream arrives, show it in the remote video element</div><div class="line">    pc.onaddstream = function (evt) &#123;</div><div class="line">        remoteView.src = URL.createObjectURL(evt.stream);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    // get the local stream, show it in the local video element and send it</div><div class="line">    navigator.getUserMedia(&#123; &quot;audio&quot;: true, &quot;video&quot;: true &#125;, function (stream) &#123;</div><div class="line">        selfView.src = URL.createObjectURL(stream);</div><div class="line">        pc.addStream(stream);</div><div class="line"></div><div class="line">        if (isCaller)</div><div class="line">            pc.createOffer(gotDescription);</div><div class="line">        else</div><div class="line">            pc.createAnswer(pc.remoteDescription, gotDescription);</div><div class="line"></div><div class="line">        function gotDescription(desc) &#123;</div><div class="line">            pc.setLocalDescription(desc);</div><div class="line">            signalingChannel.send(JSON.stringify(&#123; &quot;sdp&quot;: desc &#125;));</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">signalingChannel.onmessage = function (evt) &#123;</div><div class="line">    if (!pc)</div><div class="line">        start(false);</div><div class="line"></div><div class="line">    var signal = JSON.parse(evt.data);</div><div class="line">    if (signal.sdp)</div><div class="line">        pc.setRemoteDescription(new RTCSessionDescription(signal.sdp));</div><div class="line">    else</div><div class="line">        pc.addIceCandidate(new RTCIceCandidate(signal.candidate));</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="3-RTCDataChannel"><a href="#3-RTCDataChannel" class="headerlink" title="3.RTCDataChannel"></a>3.RTCDataChannel</h3><p>오디오와 비디오처럼, WebRTC는 실시간으로 다른 형태의 데이터 통신도 지원</p>
<h3 id="헷갈리는-부분…"><a href="#헷갈리는-부분…" class="headerlink" title="헷갈리는 부분…"></a>헷갈리는 부분…</h3><p>시그널링을 위한 서버는 필요함.<br>시그널링서버와 STUN, TURN서버는 다른개념. 즉 따로존재해야함<br>Peer-to-Peer 통신을 위해서는 브라우저 간 통신 가능<br>그룹 커뮤니케이션을 위해서는 미디어 서버가 필요함.(ex Janus Gateway / kurento- signaling 미지원)</p>
<p>릴레이서버??? p2p 커뮤니케이션 통신이 실패하면 turn 서버를 활용한 통신한다. == TURN 서버</p>
<p>미디어서버(MCU/SFU) :</p>
<p>#MCU(Multipoint Control Unit)란?<br>-다대다 통신에서 미디어 서버는 여러 미디어 스트림을 하나의 스트림으로 만든 후 클라이언트에게 제공합니다.<br>-서버의 CPU 부하가 SFU에 비해 높은 편이지만, 사용자는 SFU에 비해 더 적은량의 데이터로 미디어 스트림을 받을 수 있습니다.</p>
<p>#SFU(Selective Forwarding Unit)란?<br>-다대다 통신에서 미디어 서버는 여러 미디어 스트림을 하나로 만들기 위한 디코딩, 인코딩 작업 없이 클라이언트에게 제공합니다.<br>-서버의 CPU부하가 MCU에 비해 낮은 편이지만, 사용자는 MCU에 비해 더 많은량의 데이터를 수신해야 합니다.</p>
<p>일대일/일대 다일때 TURN 통신<br>브라우저가 시그널링 서버에 접근하면 시그널링 서버는 TURN의 채널을 열게된다.<br>일대 다일땐 브라우저가 TURN채널에 전송하고 TURN은 다시 미디어서버로 전송한다.</p>
<p>브라우저-TURN을 통해 미디어 서버 주소 알아옴-미디어서버-TURN을 통해 원격 주소 알아옴-브라우저<br>TURN 안쓸때 브라우저-STUN을 통해 미디어서버 주소를 알아옴-미디어서버-STUN을 통해 원격주소 알아오고 -브라우저???</p>
<p>시그널 서버가 미디어서버와 통신하는 턴 채널을 생성.</p>
<p>STUN은 일대일 용도(완벽하지않지만 이렇게 생각이 편함)<br>TURN은 일대 다</p>
<p><a href="https://cryingnavi.github.io/WebRTC-Basic/" target="_blank" rel="external">https://cryingnavi.github.io/WebRTC-Basic/</a><br><a href="https://www.dinobot.info/95" target="_blank" rel="external">https://www.dinobot.info/95</a></p>
<p><a href="https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Protocols" target="_blank" rel="external">https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Protocols</a></p>
<p><a href="https://www.html5rocks.com/ko/tutorials/webrtc/basics/#toc-mediastream" target="_blank" rel="external">https://www.html5rocks.com/ko/tutorials/webrtc/basics/#toc-mediastream</a><br><a href="https://www.html5rocks.com/ko/tutorials/webrtc/infrastructure/" target="_blank" rel="external">https://www.html5rocks.com/ko/tutorials/webrtc/infrastructure/</a></p>
<p><a href="https://m.blog.naver.com/PostView.nhn?blogId=djjproject&amp;logNo=220896510901&amp;proxyReferer=http:%2F%2F59.29.251.41%2Ftm%2F%3Fa%3DCR%26b%3DWIN%26c%3D300023095277%26d%3D32%26e%3D5206%26f%3DbS5ibG9nLm5hdmVyLmNvbS9kampwcm9qZWN0LzIyMDg5NjUxMDkwMQ%3D%3D%26g%3D1591597231415%26h%3D1591597230428%26y%3D0%26z%3D0%26x%3D1%26w%3D2020-02-18%26in%3D5206_1520_00016662%26id%3D20200608" target="_blank" rel="external">https://m.blog.naver.com/PostView.nhn?blogId=djjproject&amp;logNo=220896510901&amp;proxyReferer=http:%2F%2F59.29.251.41%2Ftm%2F%3Fa%3DCR%26b%3DWIN%26c%3D300023095277%26d%3D32%26e%3D5206%26f%3DbS5ibG9nLm5hdmVyLmNvbS9kampwcm9qZWN0LzIyMDg5NjUxMDkwMQ%3D%3D%26g%3D1591597231415%26h%3D1591597230428%26y%3D0%26z%3D0%26x%3D1%26w%3D2020-02-18%26in%3D5206_1520_00016662%26id%3D20200608</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;틀린것-많음…-보완할-예정&quot;&gt;&lt;a href=&quot;#틀린것-많음…-보완할-예정&quot; class=&quot;headerlink&quot; title=&quot;틀린것 많음… 보완할 예정&quot;&gt;&lt;/a&gt;틀린것 많음… 보완할 예정&lt;/h3&gt;&lt;h3 id=&quot;알아두어야할-용어설명&quot;&gt;&lt;a h
    
    </summary>
    
      <category term="CS" scheme="http://KKimSangHeon.github.io/categories/CS/"/>
    
      <category term="오픈소스,기술" scheme="http://KKimSangHeon.github.io/categories/CS/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EA%B8%B0%EC%88%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>nginx 활용하여 udp 패킷 포트포워딩</title>
    <link href="http://KKimSangHeon.github.io/2020/09/14/nginx/"/>
    <id>http://KKimSangHeon.github.io/2020/09/14/nginx/</id>
    <published>2020-09-14T00:21:43.000Z</published>
    <updated>2020-09-14T00:38:12.460Z</updated>
    
    <content type="html"><![CDATA[<p>wget <a href="http://nginx.org/packages/centos/6/x86_64/RPMS/nginx-1.16.0-1.el6.ngx.x86_64.rpm" target="_blank" rel="external">http://nginx.org/packages/centos/6/x86_64/RPMS/nginx-1.16.0-1.el6.ngx.x86_64.rpm</a></p>
<p>rpm -ivh nginx-1.16.0-1.el6.ngx.x86_64.rpm</p>
<p>vi /etc/nginx/nginx.conf</p>
<p>stream {<br>    server {<br>    listen 1234 udp;<br>    proxy_pass proxy_udp;<br>    }</p>
<pre><code>upstream proxy_udp {
</code></pre><p>  server xxx.xxx.xxx.xxx:5678;<br>    }<br>}</p>
<p>service nginx restart</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;wget &lt;a href=&quot;http://nginx.org/packages/centos/6/x86_64/RPMS/nginx-1.16.0-1.el6.ngx.x86_64.rpm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ngi
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>ipvsadm 으로 udp proxy, load balance 구현</title>
    <link href="http://KKimSangHeon.github.io/2020/05/11/linux4/"/>
    <id>http://KKimSangHeon.github.io/2020/05/11/linux4/</id>
    <published>2020-05-11T12:14:38.000Z</published>
    <updated>2020-05-11T12:29:55.916Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Load-Balancer-Server-설정"><a href="#Load-Balancer-Server-설정" class="headerlink" title="Load Balancer Server 설정"></a>Load Balancer Server 설정</h3><p>설치<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install ipvsadm</div></pre></td></tr></table></figure></p>
<p>/etc/sysctl.conf 에 아래 입력<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward=1</div></pre></td></tr></table></figure></p>
<p>적용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">sysctl -p		#적용</div><div class="line">touch /etc/sysconfig/ipvsadm   # 얘가 뭐하는애지 a모르것지만 해야지 켜진다.</div><div class="line"></div><div class="line"></div><div class="line">chkconfig ipvsadm on</div><div class="line">chkconfig --level 345 ipvsadm on</div><div class="line"></div><div class="line">systemctl start ipvsadm				//시작  </div><div class="line">systemctl enable ipvsadm.service	//상시가동</div><div class="line">systemctl status ipvsadm.service</div></pre></td></tr></table></figure></p>
<p>가상아이피 등록<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ifconfig eth0:0 192.168.100.102 up</div><div class="line"></div><div class="line">ipvsadm -A -u 192.168.100.102:9131  # A:add virtual service with options  u:udp-service</div><div class="line">ipvsadm -a -u 192.168.100.102:9131 -r  192.168.100.198:9131 -m    # r:real-server   m:masquerading</div></pre></td></tr></table></figure></p>
<p>-m 대신 -g는 NAT 방식이냐, Direct Routing 방식이냐에 따른 차이<br>Direct Routing의 경우 수신한 서버에서 User에게 response를 직접 전달한다.<br>NAT 방식은 NAT 서버를 통해 User에게 response를 한다.</p>
<h3 id="Real-Server-받는쪽-설정"><a href="#Real-Server-받는쪽-설정" class="headerlink" title="Real Server(받는쪽) 설정"></a>Real Server(받는쪽) 설정</h3><p>/etc/sysctl.conf에 아래 추가<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward = 0</div><div class="line"></div><div class="line">net.ipv4.conf.lo.arp_ignore = 1</div><div class="line">net.ipv4.conf.lo.arp_announce = 2</div><div class="line">net.ipv4.conf.all.arp_ignore = 1</div><div class="line">net.ipv4.conf.all.arp_announce = 2</div></pre></td></tr></table></figure></p>
<p>커널파라미터 적용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sysctl -p</div></pre></td></tr></table></figure></p>
<p>가상아이피 등록<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ifconfig eth0:0 192.168.100.102 up	# direct 방식일 경우에만 사용됨. 이부분 잊지말자 !!</div></pre></td></tr></table></figure></p>
<h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><p>실시간 분배 확인하기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">watch ipvsadm -ln</div></pre></td></tr></table></figure></p>
<p>서비스 초기화<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipvsadm -C</div></pre></td></tr></table></figure></p>
<p>서비스 상태조회<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ipvsadm -L --stats</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">ipvsadm v1.27 2008/5/15 (compiled with popt and IPVS v1.2.1)</div><div class="line">Usage:</div><div class="line">  ipvsadm -A|E -t|u|f service-address [-s scheduler] [-p [timeout]] [-M netmask] [--pe persistence_engine] [-b sched-flags]</div><div class="line">  ipvsadm -D -t|u|f service-address</div><div class="line">  ipvsadm -C</div><div class="line">  ipvsadm -R</div><div class="line">  ipvsadm -S [-n]</div><div class="line">  ipvsadm -a|e -t|u|f service-address -r server-address [options]</div><div class="line">  ipvsadm -d -t|u|f service-address -r server-address</div><div class="line">  ipvsadm -L|l [options]</div><div class="line">  ipvsadm -Z [-t|u|f service-address]</div><div class="line">  ipvsadm --set tcp tcpfin udp</div><div class="line">  ipvsadm --start-daemon state [--mcast-interface interface] [--syncid sid]</div><div class="line">  ipvsadm --stop-daemon state</div><div class="line">  ipvsadm -h</div><div class="line"></div><div class="line">Commands:</div><div class="line">Either long or short options are allowed.</div><div class="line">  --add-service     -A        add virtual service with options</div><div class="line">  --edit-service    -E        edit virtual service with options</div><div class="line">  --delete-service  -D        delete virtual service</div><div class="line">  --clear           -C        clear the whole table</div><div class="line">  --restore         -R        restore rules from stdin</div><div class="line">  --save            -S        save rules to stdout</div><div class="line">  --add-server      -a        add real server with options</div><div class="line">  --edit-server     -e        edit real server with options</div><div class="line">  --delete-server   -d        delete real server</div><div class="line">  --list            -L|-l     list the table</div><div class="line">  --zero            -Z        zero counters in a service or all services</div><div class="line">  --set tcp tcpfin udp        set connection timeout values</div><div class="line">  --start-daemon              start connection sync daemon</div><div class="line">  --stop-daemon               stop connection sync daemon</div><div class="line">  --help            -h        display this help message</div><div class="line"></div><div class="line">Options:</div><div class="line">  --tcp-service  -t service-address   service-address is host[:port]</div><div class="line">  --udp-service  -u service-address   service-address is host[:port]</div><div class="line">  --fwmark-service  -f fwmark         fwmark is an integer greater than zero</div><div class="line">  --ipv6         -6                   fwmark entry uses IPv6</div><div class="line">  --scheduler    -s scheduler         one of rr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq,</div><div class="line">                                      the default scheduler is wlc.</div><div class="line">  --pe            engine              alternate persistence engine may be sip,</div><div class="line">                                      not set by default.</div><div class="line">  --persistent   -p [timeout]         persistent service</div><div class="line">  --netmask      -M netmask           persistent granularity mask</div><div class="line">  --real-server  -r server-address    server-address is host (and port)</div><div class="line">  --gatewaying   -g                   gatewaying (direct routing) (default)</div><div class="line">  --ipip         -i                   ipip encapsulation (tunneling)</div><div class="line">  --masquerading -m                   masquerading (NAT)</div><div class="line">  --weight       -w weight            capacity of real server</div><div class="line">  --u-threshold  -x uthreshold        upper threshold of connections</div><div class="line">  --l-threshold  -y lthreshold        lower threshold of connections</div><div class="line">  --mcast-interface interface         multicast interface for connection sync</div><div class="line">  --syncid sid                        syncid for connection sync (default=255)</div><div class="line">  --connection   -c                   output of current IPVS connections</div><div class="line">  --timeout                           output of timeout (tcp tcpfin udp)</div><div class="line">  --daemon                            output of daemon information</div><div class="line">  --stats                             output of statistics information</div><div class="line">  --rate                              output of rate information</div><div class="line">  --exact                             expand numbers (display exact values)</div><div class="line">  --thresholds                        output of thresholds information</div><div class="line">  --persistent-conn                   output of persistent connection info</div><div class="line">  --nosort                            disable sorting output of service/server entries</div><div class="line">  --sort                              does nothing, for backwards compatibility</div><div class="line">  --ops          -o                   one-packet scheduling</div><div class="line">  --numeric      -n                   numeric output of addresses and ports</div><div class="line">  --sched-flags  -b flags             scheduler flags (comma-separated)</div></pre></td></tr></table></figure>
<p>참고 : <a href="https://www.linux.co.kr/home/lecture/index.php?cateNo=1&amp;secNo=152&amp;theNo=&amp;leccode=10904" target="_blank" rel="external">https://www.linux.co.kr/home/lecture/index.php?cateNo=1&amp;secNo=152&amp;theNo=&amp;leccode=10904</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Load-Balancer-Server-설정&quot;&gt;&lt;a href=&quot;#Load-Balancer-Server-설정&quot; class=&quot;headerlink&quot; title=&quot;Load Balancer Server 설정&quot;&gt;&lt;/a&gt;Load Balancer Ser
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos FTP(vsftpd) 설치</title>
    <link href="http://KKimSangHeon.github.io/2020/05/11/linux3/"/>
    <id>http://KKimSangHeon.github.io/2020/05/11/linux3/</id>
    <published>2020-05-11T12:14:32.000Z</published>
    <updated>2020-05-11T12:24:30.225Z</updated>
    
    <content type="html"><![CDATA[<p>yum install vsftpd   //165kb 밖에 안되는데 성능이 좋다!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">vi /etc/vsftpd/vsftpd.conf</div><div class="line">29행 어나니머스가 업로드하는것을 허락한다. 주석해제</div><div class="line">33행 어나니머스가 디렉토리를 만드는것을 허락한다. 주석해제</div><div class="line"></div><div class="line">systemctl restart vsftpd</div><div class="line">yum install firewalld</div><div class="line">systemctl start firewalld</div><div class="line">systemctl enable firewalld</div><div class="line">ifconfig</div><div class="line">firewall-cmd --zone=public --permanent --add-port=21/tcp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure></p>
<p>참고 : <a href="https://kkimsangheon.github.io/2017/07/15/ThisIsLinux36/">https://kkimsangheon.github.io/2017/07/15/ThisIsLinux36/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;yum install vsftpd   //165kb 밖에 안되는데 성능이 좋다!&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/d
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos 개방 포트 확인</title>
    <link href="http://KKimSangHeon.github.io/2020/05/11/linux2/"/>
    <id>http://KKimSangHeon.github.io/2020/05/11/linux2/</id>
    <published>2020-05-11T12:08:35.000Z</published>
    <updated>2020-05-11T12:15:40.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TCP-포트확인"><a href="#TCP-포트확인" class="headerlink" title="TCP 포트확인"></a>TCP 포트확인</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nc -z -v 127.0.0.1 22</div><div class="line"></div><div class="line">or</div><div class="line"></div><div class="line">telnet 127.0.0.1 22</div></pre></td></tr></table></figure>
<h3 id="UDP-포트-확인"><a href="#UDP-포트-확인" class="headerlink" title="UDP 포트 확인"></a>UDP 포트 확인</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nc -z -v -u 127.0.0.1 22</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;TCP-포트확인&quot;&gt;&lt;a href=&quot;#TCP-포트확인&quot; class=&quot;headerlink&quot; title=&quot;TCP 포트확인&quot;&gt;&lt;/a&gt;TCP 포트확인&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos tcp,udp 패킷덤프</title>
    <link href="http://KKimSangHeon.github.io/2020/05/11/linux1/"/>
    <id>http://KKimSangHeon.github.io/2020/05/11/linux1/</id>
    <published>2020-05-11T12:08:24.000Z</published>
    <updated>2020-05-11T12:15:44.475Z</updated>
    
    <content type="html"><![CDATA[<h3 id="udp-덤프"><a href="#udp-덤프" class="headerlink" title="udp 덤프"></a>udp 덤프</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tcpdump -i eth1 port 9129 -w packet.dump</div><div class="line">tcpdump udp -i eth1 port 9129 -w packet.dump</div></pre></td></tr></table></figure>
<h3 id="덤프-후-확인"><a href="#덤프-후-확인" class="headerlink" title="덤프 후 확인"></a>덤프 후 확인</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcpdump -Xqnr packet.dump</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;udp-덤프&quot;&gt;&lt;a href=&quot;#udp-덤프&quot; class=&quot;headerlink&quot; title=&quot;udp 덤프&quot;&gt;&lt;/a&gt;udp 덤프&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="OS" scheme="http://KKimSangHeon.github.io/categories/OS/"/>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/OS/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>20200404 한강</title>
    <link href="http://KKimSangHeon.github.io/2020/04/23/photography4/"/>
    <id>http://KKimSangHeon.github.io/2020/04/23/photography4/</id>
    <published>2020-04-23T14:09:03.000Z</published>
    <updated>2020-04-23T14:11:06.939Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/04/23/photography4/IMG_5147.jpg" alt="IMG_5147" title="IMG_5147">
<img src="/2020/04/23/photography4/IMG_5157.jpg" alt="IMG_5157" title="IMG_5157">
<img src="/2020/04/23/photography4/IMG_5188.jpg" alt="IMG_5188" title="IMG_5188">
<img src="/2020/04/23/photography4/IMG_5196.jpg" alt="IMG_5196" title="IMG_5196">
<img src="/2020/04/23/photography4/IMG_5197.jpg" alt="IMG_5197" title="IMG_5197">
<img src="/2020/04/23/photography4/IMG_5261.jpg" alt="IMG_5261" title="IMG_5261">
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/04/23/photography4/IMG_5147.jpg&quot; alt=&quot;IMG_5147&quot; title=&quot;IMG_5147&quot;&gt;
&lt;img src=&quot;/2020/04/23/photography4/IMG_5157.jpg&quot; alt=&quot;IMG_
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/categories/About-Me/Photograph/"/>
    
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/tags/Photograph/"/>
    
  </entry>
  
  <entry>
    <title>20200322 영종도하늘공원</title>
    <link href="http://KKimSangHeon.github.io/2020/04/23/photography3/"/>
    <id>http://KKimSangHeon.github.io/2020/04/23/photography3/</id>
    <published>2020-04-23T14:08:57.000Z</published>
    <updated>2020-04-23T14:10:38.864Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/04/23/photography3/IMG_4511.jpg" alt="IMG_4511" title="IMG_4511">
<img src="/2020/04/23/photography3/IMG_4565.jpg" alt="IMG_4565" title="IMG_4565">
<img src="/2020/04/23/photography3/IMG_4592.jpg" alt="IMG_4592" title="IMG_4592">
<img src="/2020/04/23/photography3/IMG_4603.jpg" alt="IMG_4603" title="IMG_4603">
<img src="/2020/04/23/photography3/IMG_4674.jpg" alt="IMG_4674" title="IMG_4674">
<img src="/2020/04/23/photography3/IMG_4703.jpg" alt="IMG_4703" title="IMG_4703">
<img src="/2020/04/23/photography3/IMG_4740.jpg" alt="IMG_4740" title="IMG_4740">
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/04/23/photography3/IMG_4511.jpg&quot; alt=&quot;IMG_4511&quot; title=&quot;IMG_4511&quot;&gt;
&lt;img src=&quot;/2020/04/23/photography3/IMG_4565.jpg&quot; alt=&quot;IMG_
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/categories/About-Me/Photograph/"/>
    
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/tags/Photograph/"/>
    
  </entry>
  
  <entry>
    <title>20200223 강릉</title>
    <link href="http://KKimSangHeon.github.io/2020/04/23/photography2/"/>
    <id>http://KKimSangHeon.github.io/2020/04/23/photography2/</id>
    <published>2020-04-23T14:00:57.000Z</published>
    <updated>2020-04-23T14:18:01.921Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/04/23/photography2/IMG_3695.jpg" alt="IMG_3695" title="IMG_3695">
<img src="/2020/04/23/photography2/IMG_3696.jpg" alt="IMG_3696" title="IMG_3696">
<img src="/2020/04/23/photography2/IMG_3699.jpg" alt="IMG_3699" title="IMG_3699">
<img src="/2020/04/23/photography2/IMG_3793.jpg" alt="IMG_3793" title="IMG_3793">
<img src="/2020/04/23/photography2/IMG_3815.jpg" alt="IMG_3815" title="IMG_3815">
<img src="/2020/04/23/photography2/IMG_3824.jpg" alt="IMG_3824" title="IMG_3824">
<img src="/2020/04/23/photography2/IMG_3885.jpg" alt="IMG_3885" title="IMG_3885">
<img src="/2020/04/23/photography2/IMG_4002.jpg" alt="IMG_4002" title="IMG_4002">
<img src="/2020/04/23/photography2/IMG_4006.jpg" alt="IMG_4006" title="IMG_4006">
<img src="/2020/04/23/photography2/IMG_4015.jpg" alt="IMG_4015" title="IMG_4015">
<img src="/2020/04/23/photography2/IMG_4068.jpg" alt="IMG_4068" title="IMG_4068">
<img src="/2020/04/23/photography2/IMG_4180.jpg" alt="IMG_4180" title="IMG_4180">
<img src="/2020/04/23/photography2/IMG_4202.jpg" alt="IMG_4202" title="IMG_4202">
<img src="/2020/04/23/photography2/IMG_4375.jpg" alt="IMG_4375" title="IMG_4375">
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/04/23/photography2/IMG_3695.jpg&quot; alt=&quot;IMG_3695&quot; title=&quot;IMG_3695&quot;&gt;
&lt;img src=&quot;/2020/04/23/photography2/IMG_3696.jpg&quot; alt=&quot;IMG_
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/categories/About-Me/Photograph/"/>
    
    
      <category term="Photograph" scheme="http://KKimSangHeon.github.io/tags/Photograph/"/>
    
  </entry>
  
</feed>
