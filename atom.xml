<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kim Sang Heon&#39;s Bolg</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://KKimSangHeon.github.io/"/>
  <updated>2017-07-03T23:54:40.304Z</updated>
  <id>http://KKimSangHeon.github.io/</id>
  
  <author>
    <name>Kim Sang Heon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4장. RPM 사용법, YUM 사용법</title>
    <link href="http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux7/"/>
    <id>http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux7/</id>
    <published>2017-07-03T09:58:51.000Z</published>
    <updated>2017-07-03T23:54:40.304Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h3><p>초창기 리눅스는 설치가 어려웠다 .소스코드를 갖고와서 적재적소에 컴파일을 해야했다. 그래서 일반사용자가 사용하기엔 거의 불가능했다. 이러한 이유로 외면을 받았었다. 결국 Redhat에서 RPM(Redhat Package Manager)을 내놓았다. 윈도우의 setup.exe 라고 생각하면 된다.</p>
<p>gedit-3.8.3-6.el7.x86_64.rpm</p>
<p>패키지이름 : gedit -&gt; 패키지(프로그램)의 이름<br>버전 : 3.8.3 -&gt; 대게 3자리수로 구성. 주버전, 부버전, 패치버전<br>릴리즈번호 : 6 -&gt; 문제점을 개선할 때마다 붙여지는 번호   //noarch:모든CPU<br>CentOS버전 : el7 -&gt; CentOS에서 배포할 경우에 붙여짐<br>아키텍처 : x86_64 -&gt; 64비트 CPU를 의미</p>
<h4 id="자주쓰는-RPM-명령어-옵션"><a href="#자주쓰는-RPM-명령어-옵션" class="headerlink" title="자주쓰는 RPM 명령어 옵션"></a>자주쓰는 RPM 명령어 옵션</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ rpm -Uvh 패키지파일이름.rpm</div><div class="line">    // U -&gt; (대문자)패키지가 설치/업그레이드</div><div class="line">    // v -&gt; 설치진행과정의 확인</div><div class="line">    // h -&gt; 설치진행과정을 &quot;#&quot;마크로 화면에 출력</div><div class="line"></div><div class="line">$ rpm -e 패키지이름  //패키지 삭제</div><div class="line"></div><div class="line">$ rpm -qa 패키지이름  //패키지가 설치되었는지 확인</div><div class="line"></div><div class="line">$ rpm -qf 파일의 절대경로 // 파일이 어느 패키지에 포함된 것인지 확인</div><div class="line"></div><div class="line">$ rpm -qlp 패키지파일이름.rpm //패키지 파일에 어떤 파일들이 포함되었는지 확인</div><div class="line"></div><div class="line">$ rpm -qip 패키지파일이름.rpm //패키지 파일의 상세정보</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ rpm -qa mc  //mc 패키지가 설치되었나 확인</div><div class="line"></div><div class="line">$ rpm -Uvh mc-4.8.7-8.el7.x86_64.rpm //설치</div><div class="line"></div><div class="line">$ rpm -qa mc  //mc 패키지가 설치되었나 확인</div><div class="line"></div><div class="line">$ rpm -qi mc  //mc 패키지 정보 출력</div><div class="line"></div><div class="line">$ rpm -e mc-4.8.7-8.el7.x86_64.rpm  //삭제</div><div class="line">오류: mc-4.8.7-8.el7.x86_64.rpm 패키지가 설치되어 있지 않습니다</div><div class="line">//설치파일을 삭제하는것이다.!!!!</div><div class="line"></div><div class="line">$ rpm -e mc  //패키지 이름만으로 삭제</div></pre></td></tr></table></figure>
<h3 id="YUM의-등장"><a href="#YUM의-등장" class="headerlink" title="YUM의 등장"></a>YUM의 등장</h3><p>Yellowdog Updater Modified</p>
<p>rpm의 경우 의존성 문제가 존재함. 이를 해결하기 위해 나온것이 YUM<br>의존성 문제란? A를 설치하기 위해 B가 먼저 설치되어있어야 하는것.<br>rpm은 B가 설치되어있지 않을 경우 A패키지 설치를 시도할 경우 B를 설치해야 한다고 알려주기는 하나 대략적으로 알려주고, B또한 다른 패키지에 의존성이 있을수도 있어 불편함을 유발한다.</p>
<p>yum은 인터넷이 정상적으로 동작해야 작동함. yum은 의존성이 있는것을 모두 알아서 설치해준다!!! 즉 yum 명령어는 내부적으로 rpm명령을 실행하는것!!</p>
<h4 id="yum의-동작과정"><a href="#yum의-동작과정" class="headerlink" title="yum의 동작과정"></a>yum의 동작과정</h4><p>1.yum install을 입력한다<br>2./etc/yum.repos.d/ 를 참고하여 URL을 확인하고<br>3.전체 패키지 목록 파일을 요청한다(CentOS 7 패키지 저장소로)<br>4.전체 패키지 목록 파일만 다운로드<br>5.설치할 패키지와 관련된 패키지의 이름을 화면에 출력<br>6.y를 입력하면 설치에 필요한 패키지 파일을 요청함<br>7.설치할 패키지 파일을 다운로드해서 자동 설치<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ yum install 패키지이름   //패키지 설치</div><div class="line"></div><div class="line">$ yum -y install 패키지이름   //패키지 설치(y안눌러도 됨)</div><div class="line"></div><div class="line">$ yum remove 패키지이름  //패키지 제거</div><div class="line"></div><div class="line">$ yum localinstall rpm파일이름.rpm  //로컬에 존재하는 rpm으로 설치</div><div class="line">      // 만약 의존성이 있을경우 그 대상은 레파지토리에서 깐다.</div><div class="line"></div><div class="line">$ yum info mc   //mc패키지에 관한 정보확인      </div><div class="line"></div><div class="line">$ yum groupinstall &quot;패키지 그룹이름&quot; //예로 자바를 깐다면 jdk</div><div class="line">                          //이클립스 등 한꺼번에 설치됭</div><div class="line"></div><div class="line">$ yum clean all           //캐시를 지우는것.</div><div class="line">                      //yum이 이상할때 써보자                          </div></pre></td></tr></table></figure></p>
<h4 id="yum고급실습"><a href="#yum고급실습" class="headerlink" title="yum고급실습"></a>yum고급실습</h4><p>네트워크를 거치지 않고 마운트 시킨 dvd에서 받는다. 교재 221참고<br>dvd에 없으면 네트워크에서 갖고온다.</p>
<h4 id="yum-grouplist"><a href="#yum-grouplist" class="headerlink" title="yum grouplist"></a>yum grouplist</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ yum grouplist   //그룹리스트 조회</div><div class="line">$ yum grouplist hidden //숨겨진것까지 조회</div><div class="line"></div><div class="line">//영어로 그룹을 설치하는것이 좋다.. 그러므로</div><div class="line"></div><div class="line">$ chvt 2 //2번 가상터미널로 이동</div><div class="line">$ root</div><div class="line"> password</div><div class="line"></div><div class="line">$ yum grouplist hidden &gt; glist.txt  //glist.txt로 생성</div><div class="line"></div><div class="line">$ chvt 1  //x 윈도모드로 이동</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RPM&quot;&gt;&lt;a href=&quot;#RPM&quot; class=&quot;headerlink&quot; title=&quot;RPM&quot;&gt;&lt;/a&gt;RPM&lt;/h3&gt;&lt;p&gt;초창기 리눅스는 설치가 어려웠다 .소스코드를 갖고와서 적재적소에 컴파일을 해야했다. 그래서 일반사용자가 사용하기엔 거의
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 파일의 소유권/허가권, 링크</title>
    <link href="http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux6/"/>
    <id>http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux6/</id>
    <published>2017-07-03T04:33:03.000Z</published>
    <updated>2017-07-03T05:45:36.399Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># touch sample.txt  //빈 파일생성</div><div class="line"># ls -l</div><div class="line">-rw-r--r--  1 root   root         0  7월  3 13:35 sample.txt</div></pre></td></tr></table></figure>
<p>1.맨앞의 -는 파일의 유형을 의미.<br>  -: 일반파일<br>  d: 디렉토리<br>  l: 링크파일</p>
<p>2.rw-r–r–는 세개씩 끊어 읽으면 된다.<br>2-1.  맨앞 세개는 소유자의 파일접근권한 (rw-)<br>즉 소유자는 읽기, 쓰기 가능, 실행 불가</p>
<p>2-2.  두번째는 그룹의 파일접근권한<br>읽기만 가능</p>
<p>2-3.  세번째는 그 외의 사용자의 파일접근권한이다.<br>읽기만 가능<br>또한 rw-r–r–는 3자리씩 끊어서 보면 644로 볼수 있다.<br>rwxrwxrwx는? 666</p>
<p>3.1은 링크의 수</p>
<p>4.root는 파일 소유자 이름</p>
<p>5.root는 파일 소유 그룹이름</p>
<p>6.0은 파일의 크기</p>
<p>7.7월  3 13:35는 마지막 변경 날짜/시간</p>
<p>8.sample.txt는 파일이름</p>
<h4 id="chmod-파일-허가권-변경"><a href="#chmod-파일-허가권-변경" class="headerlink" title="chmod 파일 허가권 변경"></a>chmod 파일 허가권 변경</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"># chmod 655 sample.txt</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 root root 0  7월  3 13:35 sample.txt</div><div class="line"></div><div class="line">$ chmod o-x  test      //일반사용자(o : ordinary)는 -x (x:execute) 실행 못하도록</div><div class="line">$ ls -l test</div><div class="line">-rwxrwxrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //마지막 x가 빠짐</div><div class="line"></div><div class="line">$ chmod ug-w test    //소유주(u: user), 소유그룹(g: group) 쓰기권한 제거</div><div class="line">$ ls -l test</div><div class="line">-r-xr-xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //3번째 6번째 w가 빠짐</div><div class="line"></div><div class="line">$ chmod ugo-r test  //전부다 읽기권한 제거</div><div class="line">$ ls -l test   </div><div class="line">---x--x-w- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //r이 제거된것 확인</div><div class="line"></div><div class="line">$ chmod uo+rw test  //소유주, 기타사용자에게 읽기,쓰기 허용</div><div class="line">$ ls -l test  </div><div class="line">-rwx--xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line"></div><div class="line">//숫자를 넣지 않고 하는것을 심볼릭방법이라 하는데 이것이 더 편할 때가 있다.</div><div class="line">숫자로 할 경우 기존의 권한도 알아야 하기 때문에..</div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="chown-파일-소유자-변경"><a href="#chown-파일-소유자-변경" class="headerlink" title="chown 파일 소유자 변경"></a>chown 파일 소유자 변경</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># chown centos sample.txt   //centos로 소유권을 넘김</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 centos root 0  7월  3 13:35 sample.txt  //소유권 변경됨</div></pre></td></tr></table></figure>
<h4 id="chgrp-파일-소유-그룹-변경"><a href="#chgrp-파일-소유-그룹-변경" class="headerlink" title="chgrp 파일 소유 그룹 변경"></a>chgrp 파일 소유 그룹 변경</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># chgrp centos sample.txt</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 centos centos 0  7월  3 13:35 sample.txt</div></pre></td></tr></table></figure>
<h4 id="chown-파일-소유자-그룹-변경"><a href="#chown-파일-소유자-그룹-변경" class="headerlink" title="chown 파일 소유자, 그룹 변경"></a>chown 파일 소유자, 그룹 변경</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># chown root.root sample.txt</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 root root 0  7월  3 13:35 sample.txt</div></pre></td></tr></table></figure>
<h4 id="에-대한-이해"><a href="#에-대한-이해" class="headerlink" title="./에 대한 이해"></a>./에 대한 이해</h4><p>파일을 실행하기 위해서는 아래의 명령어를 입력해야한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./파일명</div></pre></td></tr></table></figure><br>./는 왜 붙는것일까?<br>그냥 파일명만 입력하면 찾지못하는데 그 이유는 현재 디렉토리가 경로에 없어서 그렇다.<br>그래서 ./을 넣어주는 것이다. 앞에서 배웠듯이 . 은 현재 디렉토리를 의미하는것을 떠올려보자.<br>즉 ./파일명 는 현재 디렉터리 아래에 있는 파일명을 실행하라는 것이다.</p>
<h4 id="su-해당사용자로-로그인"><a href="#su-해당사용자로-로그인" class="headerlink" title="su 해당사용자로 로그인"></a>su 해당사용자로 로그인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># su - centos   //centos계정으로 로그인</div><div class="line">      //루트계정일 경우 암호를 묻지않는다.</div><div class="line">      //-를 붙이면 디렉토리가 centos디렉토리로 변경되가</div><div class="line">      //붙이지 않으면 변경되지 않는다.</div></pre></td></tr></table></figure>
<h4 id="실습해보자"><a href="#실습해보자" class="headerlink" title="실습해보자."></a>실습해보자.</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"># touch test    //test 파일 생성</div><div class="line"></div><div class="line"># vi test     //이후 명령어(ex ls) 입력 그후 저장후 종료</div><div class="line"></div><div class="line"># ./test      //test 파일 실행</div><div class="line"></div><div class="line">실행되지 않음.   </div><div class="line"></div><div class="line"># chmod 755 test    //실행권한을 모두 준다.</div><div class="line"></div><div class="line"># ./test    //실행된다.</div><div class="line"></div><div class="line">현재 파일의 소유권은 root이다.</div><div class="line"></div><div class="line"># chown centos.centos test  //소유자,그룹을 변경</div><div class="line"></div><div class="line"># su - centos   //센토스 사용자로 접근</div><div class="line">              //이때 암호는 물어보지 않음. 루트에서 이동하는것이므로</div><div class="line"></div><div class="line">$ ls -l /root/test    //허가 거부가 된다.</div><div class="line">                    //왜냐하면 /root 디렉토리가 일반사용자는 들어올수 없게 되어있음.</div><div class="line">                    //그러므로 파일을 이동시키거나, /root 디렉토리에 다른사용자가 들어</div><div class="line">                    //올수 있게 허가해주어야 한다. 후자는 좋지 않은 방법이므로 전자를</div><div class="line">                    //활용하자</div><div class="line"></div><div class="line"># exit                //centos계정 로그아웃</div><div class="line"></div><div class="line"># mv test ~centos     //centos 홈폴더로 test파일이동.</div><div class="line"></div><div class="line"># su - centos   //다시 centos로 로그인</div><div class="line"></div><div class="line">$ chmod 777 test</div><div class="line"></div><div class="line">$ chown root.root test  //소유권을 다시 root로 변경</div><div class="line">                      //불가능하다. 어딜감히 root로 변경해</div><div class="line">                      //악성코드를 심고 할 수도 있고..위험함..</div><div class="line">                      //그래서 이 명령어는 루트사용자만 가능!!!</div><div class="line"></div><div class="line">$ chmod o-x  test      //일반사용자(o : ordinary)는 -x (x:execute) 실행 못하도록</div><div class="line">$ ls -l</div><div class="line">-rwxrwxrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">                    //마지막에 -가 들어간것을 확인</div><div class="line"></div><div class="line">$ chmod ug-w test    //소유주(u: user), 소유그룹(g: group) 쓰기권한 제거</div><div class="line">$ ls -l test</div><div class="line">-r-xr-xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">                    //3번째 6번째 w가 빠짐</div><div class="line"></div><div class="line">$ chmod ugo-r test  //전부다 읽기권한 제거</div><div class="line">$ ls -l test   </div><div class="line">---x--x-w- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //r이 제거된것 확인</div><div class="line"></div><div class="line">$ chmod uo+rw test  //소유주, 기타사용자에게 읽기,쓰기 허용</div><div class="line">$ ls -l test  </div><div class="line">-rwx--xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line"></div><div class="line">//숫자를 넣지 않고 하는것을 심볼릭방법이라 하는데 이것이 더 편할 때가 있다.</div><div class="line">숫자로 할 경우 기존의 권한도 알아야 하기 때문에..                    </div></pre></td></tr></table></figure>
<h4 id="링크"><a href="#링크" class="headerlink" title="링크"></a>링크</h4><p>파일의 링크는 하드링크, 심볼릭 링크가 있다.<br>윈도우의 바로가기처럼 연결되어있는것은 심볼릭링크 소프트 링크라 한다.</p>
<p>원본파일이 inode블록(실제 파일정보를 갖고있는것)을 가르키고 inode블록은 원본파일 데이터를 가르킨다.</p>
<p>하드링크파일은 inode를 직접 가르키며<br>심볼링크파일은 새로운 inode를 만들고 새로운 inode는 원본파일 포인터를 하나 더만들고 그것을 가르킨다. 원본파일 포인터는 원본파일을 가르킨다. 교재 201p를 참고하자.</p>
<p>주로 하드링크보다는 심볼릭 링크를 생성한다.</p>
<h5 id="실습해보기"><a href="#실습해보기" class="headerlink" title="실습해보기"></a>실습해보기</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># mkdir linktest</div><div class="line"># cd linktest/</div><div class="line"># vi basefile //아무거나 입력후 저장후 종료</div><div class="line">//원본파일이 생겼으므로 inode 블록이 생성되었을것이다.</div><div class="line"># ls -il basefile //inode 번호 확인</div><div class="line">405679049 -rw-r--r-- 1 root root 34  7월  3 14:36 basefile</div><div class="line">  //405679049이 inode 번호</div><div class="line"></div><div class="line"># ln basefile hardlink  //하드링크 생성</div><div class="line"># ln -s basefile softlink //소프트링크생성</div><div class="line"># ls -il</div><div class="line"></div><div class="line">405679049 -rw-r--r-- 2 root root 34  7월  3 14:36 basefile</div><div class="line">405679049 -rw-r--r-- 2 root root 34  7월  3 14:36 hardlink</div><div class="line">405679048 lrwxrwxrwx 1 root root  8  7월  3 14:40 softlink -&gt; basefile</div><div class="line"></div><div class="line">//basefile inode와 hardlink inode가 같다. softlink의 inode는 새로 만들어서 basefile을 가르킨다.</div><div class="line"></div><div class="line"># mv basefile ../     //원본파일을 앞 디렉토리로 이동시킴</div><div class="line"># ls -il</div><div class="line"></div><div class="line"># cat hardlink  // 출력이 될까 안될까?</div><div class="line">        //출력이 된다. 그 이유는 원본 inode를 가르키기 때문에!</div><div class="line"></div><div class="line"># cat softlink  // 출력이 될까 안될까.?</div><div class="line">        //안된다. 원본파일이 없어졌기 때문에.</div><div class="line"></div><div class="line"># mv ../basefile    //다시 원상복구 시킴  (앞디렉토리로간 basefile 델꼬옴)</div><div class="line"></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 사용자 및 그룹 관리</title>
    <link href="http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux5/"/>
    <id>http://KKimSangHeon.github.io/2017/07/03/ThisIsLinux5/</id>
    <published>2017-07-03T02:29:09.000Z</published>
    <updated>2017-07-03T04:32:32.265Z</updated>
    
    <content type="html"><![CDATA[<p>리눅스는 다중 사용자 시스템이다. 즉 서버 한대에 여러명이 접속한다. 그러므로 사용자를 관리하고 그룹을 관리하는게 중요한 이슈이다.<br>기본적으로 rootㄹ는 슈퍼유저가 관리하며 모든 사용자는 하나 이상의 그룹에 소속되어야 한다.<br>사용자는 /etc/passwd에 정의되어 있다.<br>아래의 명령문을 실행시켜 vi 에디터로 확인해보자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vi /etc/passwd</div></pre></td></tr></table></figure><br>마지막 줄엔 다음과같은 코드가 존재한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">centos:x:1000:1000:centos:/home/centos:/bin/bash</div></pre></td></tr></table></figure><br>이에 대해 자세히 알아보자.</p>
<p>1.centos =<br>  사용자가 centos 이다.</p>
<p>2.x =<br>  비밀번호</p>
<p>3.1000 =<br>  centos라는 사용자의 ID</p>
<p>4.1000 =<br>  centos사용자는 반드시 소속된 그룹이 있어야하는데 이는 소속된 그룹의 ID 즉 그룹번호이다.<br>어떻게 그룹번호를 갖고 그룹명을 알까? /etc/group 파일에 정의되어 있다. 이 파일을 vi 에디터로 열면 그룹이름:그룹비밀번호:그룹의ID(그룹번호)의 형식을 갖는다.<br>centos:x:1000:centos  // 그룹이름:그룹비밀번호:그룹의ID(그룹번호)<br>이게 무슨뜻일까? centos라는 사용자가 centos그룹에 속해 있다는 것이다. 마지막 centos 는 생략이 가능하며 신경쓰지 않아도 된다.<br>예를 들면 홍길동이라는 부서에 홍길동 사원이 존재하는것이다. 회사에서는 부서를 만들고 사원을 뽑는다. 마찬가지로 centos도 새로운 사용자를 만들면 사용자 이름과 같은 그룹을 만들고 이 그룹에 해당시킨다.<br>이것과 관련해 실습을 진행해보자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># useradd myuser    //유저 등록</div><div class="line"># tail -5 /etc/passwd    //해당파일의 마지막 5줄만 보기</div><div class="line"></div><div class="line">myuser:x:1001:1001::/home/myuser:/bin/bash  //그룹번호 1001을 기억</div><div class="line"></div><div class="line"># tail -5 /etc/group    //해당파일의 마지막 5줄만 보기</div><div class="line"></div><div class="line">myuser:x:1001:  //사용자 이름과 같은 그룹이 만들어졌고 그 그룹에 사용자가 속해있다.</div></pre></td></tr></table></figure></p>
<p>5.centos =<br>  전체이름이다. 생략이 가능하다</p>
<p>6./home/centos centos =<br>  사용자의 홈 디렉토리</p>
<p>7./bin/bash =<br>  사용할 기본 쉘</p>
<h4 id="실습해보자"><a href="#실습해보자" class="headerlink" title="실습해보자"></a>실습해보자</h4><p>디렉토리 설명<br>/etc/passwd : 사용자 정보가 있음<br>/etc/shadow : 사용자 비밀번호가 있음(비밀번호는 암호화되어서 저장됨)<br>/etc/group  : 그룹정보가 있음</p>
<h5 id="실습-1"><a href="#실습-1" class="headerlink" title="실습 1"></a>실습 1</h5><p>유저 생성, 유저 그룹지정, 그룹생성<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"># useradd user1         //user1생성</div><div class="line"># tail -5 /etc/passwd   //생성되었는지 확인</div><div class="line">user1:x:1001:1001::/home/user1:/bin/bash  //잘생성됨</div><div class="line"></div><div class="line"># tail -5 /etc/shadow     //사용자의 비밀번호를 확인해보자</div><div class="line">user1:!!:17350:0:99999:7:::   //비밀번호를 설정하지 않았지만 암호화 되어있다.</div><div class="line"></div><div class="line"># tail -5 /etc/group    //사용자의 그룹이 생성되었나 확인해보자</div><div class="line">user1:x:1001:           //잘 생성되었다</div><div class="line"></div><div class="line">하지만 바람직하지 않다.! user1의 그룹이 user1이라니 말이되나!</div><div class="line"></div><div class="line">다시실습해보자 이번에는 그룹을 먼저 생성하고 사용자를 소속시키자</div><div class="line"></div><div class="line"># userdel -r user1 //보통 현업에선 -r옵션을 넣어 디렉토리까진 지우지 않는다.</div><div class="line">                  //하지만 실습이므로 과감하게 지운다.</div><div class="line"># groupadd centosGroup    //그룹생성</div><div class="line"></div><div class="line"># tail -5 /etc/group    //잘생성되었나 확인</div><div class="line">centosGroup:x:1001:   //잘생성됨</div><div class="line"></div><div class="line"># useradd -g centosGroup user1  //centosGroup에 소속된 user1생성</div><div class="line"># useradd -g centosGroup user2  //centosGroup에 소속된 user2생성</div><div class="line"></div><div class="line"># tail -5 /etc/passwd     //잘 생성되었나 확인.</div><div class="line">user1:x:1001:1001::/home/user1:/bin/bash</div><div class="line">user2:x:1002:1001::/home/user2:/bin/bash</div><div class="line">  //잘 생성되었고 사용자 ID는 다르지만 같은 그룹ID를 갖는다.</div><div class="line"></div><div class="line"># passwd user1   //암호지정. 이후 1234 1234입력</div><div class="line">                //일반사용자는 암호를 8자 미만으로 지정못하지만</div><div class="line">                //루트사용자는 8자 미만으로 지정해줄수 있다.</div><div class="line"></div><div class="line"># passwd user2   //암호지정. 이후 1234 1234입력</div><div class="line"></div><div class="line"># tail -5 /etc/shadow   //user1,user2의 암호를 보자</div><div class="line">                      //user1,user2의 암호를 1234로 지정하였지만</div><div class="line">                      //암호화된 값이 다르다!!</div></pre></td></tr></table></figure></p>
<h5 id="실습-2"><a href="#실습-2" class="headerlink" title="실습 2"></a>실습 2</h5><p>x윈도에서 사용자권한관리 - x윈도가 없으면 안되므로 비추<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># yum -y install system-config-users  //system-config-users패키지 설치</div><div class="line"># system-config-users   //x윈도우 상에서 사용자 관리가 가능하다!</div></pre></td></tr></table></figure></p>
<h3 id="관련-명령어"><a href="#관련-명령어" class="headerlink" title="관련 명령어"></a>관련 명령어</h3><p>189p 참고<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">-u : ID 지정</div><div class="line">-g : 그룹지정</div><div class="line">-d : 홈디렉터리지정</div><div class="line">-s : 쉘 지정</div><div class="line"></div><div class="line"># useradd shkim //새로운 사용자를 추가</div><div class="line"></div><div class="line"># passwd shkim //사용자의 비밀번호를 지정하거나 변경</div><div class="line"></div><div class="line"># usermod -g root shkim  //사용자의 속성을 변경</div><div class="line"></div><div class="line"># userdel shkim //사용자는 지우나 디렉토리를 제거하지 않음.</div><div class="line">            //-r 옵션이 존재. 이는 사용자가 사용하던 디렉토리까지 제거</div><div class="line"></div><div class="line"># change -m 2 shkim  //사용자의 암호를 주기적으로 변경하도록 설정</div><div class="line">          //-m 2는 최소 이틀이상 써야한다.(189p 참고)</div><div class="line"></div><div class="line"># groups // 사용자가 속한 그룹을 보여줌</div><div class="line"></div><div class="line"># groupadd newgroup   //새로운 그룹을 새성          </div><div class="line"></div><div class="line"># groupmod  -n newgroup mygroup//그룹의 속성을 변경 newgroup을 mygroup로 변경</div><div class="line"></div><div class="line"># groupdel newgroup //그룹을 삭제</div><div class="line"></div><div class="line"># gpasswd newgroup  //그룹의 암호설정</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;리눅스는 다중 사용자 시스템이다. 즉 서버 한대에 여러명이 접속한다. 그러므로 사용자를 관리하고 그룹을 관리하는게 중요한 이슈이다.&lt;br&gt;기본적으로 rootㄹ는 슈퍼유저가 관리하며 모든 사용자는 하나 이상의 그룹에 소속되어야 한다.&lt;br&gt;사용자는
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 리눅스 기본 명령어</title>
    <link href="http://KKimSangHeon.github.io/2017/07/02/ThisIsLinux4/"/>
    <id>http://KKimSangHeon.github.io/2017/07/02/ThisIsLinux4/</id>
    <published>2017-07-02T06:25:50.000Z</published>
    <updated>2017-07-02T08:19:39.298Z</updated>
    
    <content type="html"><![CDATA[<h3 id="기본명령어"><a href="#기본명령어" class="headerlink" title="기본명령어"></a>기본명령어</h3><p>당연히 알고있어야 하는것들이다! 자연스럽게 사용할줄 알아야함!</p>
<p>폴더 == 디렉토리<br>리눅스는 숨김파일일 경우 파일명 앞에 . 이 붙는다. (폴더도 마찬가지)</p>
<p>$ ls -l 명령어를 실행하였을 때<br>-로 시작하면 파일 d로 시작하면 디렉토리</p>
<h4 id="ls-파일-목록보기"><a href="#ls-파일-목록보기" class="headerlink" title="ls 파일 목록보기"></a>ls 파일 목록보기</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ ls    // 파일이나 폴더의 목록을 보는것 윈도우의 dir.</div><div class="line"></div><div class="line">$ ls /etc/sysconfig   //특정 폴더내의 목록을 보는것</div><div class="line"></div><div class="line">$ ls -a   //숨김파일까지 보는것.</div><div class="line"></div><div class="line">$ ls -l  // 자세히 보는것</div><div class="line">         //-로 시작하면 파일 d로 시작하면 디렉토리</div><div class="line"></div><div class="line">$ ls *.cfg //확장자가 cfg인것</div><div class="line"></div><div class="line">$ ls ls my* // my로 시작하는것들 조회</div><div class="line"></div><div class="line">$ ls -al //숨김파일까지 자세히 조회</div><div class="line">          // -a, -l 의 결합</div></pre></td></tr></table></figure>
<h4 id="cd-디렉토리-이동"><a href="#cd-디렉토리-이동" class="headerlink" title="cd 디렉토리 이동"></a>cd 디렉토리 이동</h4><p>x윈도가 있으면 편하겠지만 없으면 이동이 명령어로만 가능하기 때문에 익숙해지자.</p>
<p>cd 명령어를 쓴 후에는 pwd 를 통해 현재 디렉토리를 보자. 리눅스의 디렉터리 구조를 이해 할 수 있게된다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">$ cd /etc/sysconfig/</div><div class="line">$ pwd     //현재 디렉터리 위치 출력</div><div class="line"></div><div class="line">$ cd /    // 최상위폴더로 이동(루트 디렉토리라함)</div><div class="line">          // $ cd / 명령어의 경우 다음 명령창이 아래와 같이 나온다.</div><div class="line">          // [root@localhost /]#</div><div class="line"></div><div class="line"></div><div class="line">$ cd      //  &quot;/루트 디렉토리&quot;(현재 사용자의 홈폴더)로 이동</div><div class="line">          //  $ cd 명령어의 경우 다음 명령창이 아래와 같이 나온다.</div><div class="line">          //  [root@localhost ~]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">$ cd /etc       //루트 디렉토리의 etc로 이동(절대경로)</div><div class="line">$ cd etc        //현재 디렉토리에서 etc로 이동 (상대경로)</div><div class="line">$ cd ..         //현재 디렉토리의 바로 앞 디렉토리로 이동</div><div class="line">$ cd .          //현재 디렉토리 반환</div><div class="line"></div><div class="line">$ cd ~centos  //해당 사용자의 홈 디렉토리로 이동</div><div class="line">              //즉 $ cd~사용자 == $ cd</div><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h4 id="여기서-주의할점"><a href="#여기서-주의할점" class="headerlink" title="여기서 주의할점!"></a>여기서 주의할점!</h4><p>우리가 서버에서 사용하는 계정은 root이라는 점을 잊지말자.<br>$ cd / 명령어를 실행하면 루트 디렉토리 즉 최상위 폴더로 이동하는데 여기서 ls를 입력하면 root 폴더가 하나 있다. 이 두가지를 혼동하는 경우가 많은데 주의 하도록 하자. 루트 디렉토리 그리고 루트 디렉토리에 존재하는 root 폴더는 다르며 루트 디렉토리안의 root 폴더는 root계정이기 때문에 존재하는것이다. 강의에서는 루트 디렉토리 그리고 /root 디렉토리 로 구분한다.</p>
<h4 id="에-대한-이해"><a href="#에-대한-이해" class="headerlink" title="..에 대한 이해"></a>..에 대한 이해</h4><p>다음을 이해해보자<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost /]# cd /etc/sysconfig/network-scripts/</div><div class="line">[root@localhost network-scripts]# cd ../../../root</div><div class="line">[root@localhost ~]# pwd</div><div class="line">/root</div></pre></td></tr></table></figure></p>
<h4 id="에-대한-이해-1"><a href="#에-대한-이해-1" class="headerlink" title=".에 대한 이해"></a>.에 대한 이해</h4><p>다음을 이해해보자<br>이거를 어디다 쓸까 싶지만 현재 디렉토리의 어떤것을 실행하거나 어떤 것을 현재 디렉토리로 옮길 때 사용된다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cd .</div><div class="line">[root@localhost ~]# pwd</div><div class="line">/root</div></pre></td></tr></table></figure></p>
<h4 id="touch-비어있는-파일-생성"><a href="#touch-비어있는-파일-생성" class="headerlink" title="touch 비어있는 파일 생성"></a>touch 비어있는 파일 생성</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch        //비어있는 파일 생성</div></pre></td></tr></table></figure>
<h4 id="rm-파일-삭제"><a href="#rm-파일-삭제" class="headerlink" title="rm 파일 삭제"></a>rm 파일 삭제</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ rm file1    // 삭제명령어 (삭제할것인지 재확인함)</div><div class="line"></div><div class="line">$ rm -f file1   // 삭제 명령어(삭제할것인지 확인하지 않고 삭제)</div></pre></td></tr></table></figure>
<h4 id="cp-복사"><a href="#cp-복사" class="headerlink" title="cp 복사"></a>cp 복사</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cp file3 file4  //file3가 file4로 복사됨</div><div class="line"></div><div class="line">$ cp -r /etc/sysconfig .  //  /etc/sysconfig폴더를 현재 폴더에 복사한다. -r은 디렉토리 복사일 때 필요함</div></pre></td></tr></table></figure>
<h4 id="mv-이동-및-파일명-변경"><a href="#mv-이동-및-파일명-변경" class="headerlink" title="mv 이동 및 파일명 변경"></a>mv 이동 및 파일명 변경</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ mv myfile3.txt /root/sysconfig    //myfile3.txt파일을 /root/sysconfig 로 이동</div><div class="line"></div><div class="line">$ mv file file3     //파일이름을 file에서 file3로 변경</div></pre></td></tr></table></figure>
<h4 id="mkdir-디렉토리-생성"><a href="#mkdir-디렉토리-생성" class="headerlink" title="mkdir 디렉토리 생성"></a>mkdir 디렉토리 생성</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mkdir folder1   //folder1 디렉토리 생성</div><div class="line"></div><div class="line">$ mkdir -p dir1/dir2/dir3     // dir1/dir2/dir3 디렉토리를 생성</div><div class="line">                      //  디렉토리가 3개가 만들어지는것이 아니라 dir1 안에 dir2 안에 dir3가 만들어진다.</div></pre></td></tr></table></figure>
<h4 id="rmdir-디렉토리-제거"><a href="#rmdir-디렉토리-제거" class="headerlink" title="rmdir 디렉토리 제거"></a>rmdir 디렉토리 제거</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ rmdir folder1   //디렉토리 제거 (폴더가 비어있을 경우 가능)</div><div class="line"></div><div class="line">$ rmdir -r folder1  //내부에 파일이 있는 디렉토리 제거</div><div class="line">              //(안에 들어있는 파일 하나하나 지울것인지 다물어본다.)</div><div class="line"></div><div class="line">$ rm -rf dir1   //묻지도 따지지도 않고 dir1 디렉토리 제거</div><div class="line">                //매우 위험하다!! 주의해서 사용</div></pre></td></tr></table></figure>
<h4 id="cat-파일-읽기"><a href="#cat-파일-읽기" class="headerlink" title="cat 파일 읽기"></a>cat 파일 읽기</h4><p>사실 vi를 써도 되지만 그게 귀찮을 떄 사용<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat anaconda.ks.cfg</div></pre></td></tr></table></figure></p>
<h4 id="head-파일-읽기"><a href="#head-파일-읽기" class="headerlink" title="head 파일 읽기"></a>head 파일 읽기</h4><p>맨 위의 10줄만 보기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ head anaconda-ks.cfg</div></pre></td></tr></table></figure></p>
<h4 id="tail-파일-읽기"><a href="#tail-파일-읽기" class="headerlink" title="tail 파일 읽기"></a>tail 파일 읽기</h4><p>맨 밑의 10줄만 보기<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ tail anaconda-ks.cfg</div></pre></td></tr></table></figure></p>
<h4 id="more-less-페이지-단위로-읽기"><a href="#more-less-페이지-단위로-읽기" class="headerlink" title="more,less 페이지 단위로 읽기"></a>more,less 페이지 단위로 읽기</h4><p>페이지 단위로 끊어 읽기 스페이스는 다음페이지 B는 이전페이지 종료하려면 Q<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ more anaconda-ks.cfg</div><div class="line"></div><div class="line">$ less anaconda-ks.cfg  //less more보다 몇가지 명령어가 더 존재함</div></pre></td></tr></table></figure></p>
<h4 id="file-파일이-어떤-파일인지-확인"><a href="#file-파일이-어떤-파일인지-확인" class="headerlink" title="file 파일이 어떤 파일인지 확인"></a>file 파일이 어떤 파일인지 확인</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ file file1    //디렉터리인지, 링크인지, 비었는지 등을 알려준다.</div></pre></td></tr></table></figure>
<p>$ file /dev/cdrom 은 링크이다. 내 환경에서는 sr0을 가르키지만 다를 수 있다는 점을 알고있자.</p>
<h4 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clear     //화면을 깨끗하게 해준다.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;기본명령어&quot;&gt;&lt;a href=&quot;#기본명령어&quot; class=&quot;headerlink&quot; title=&quot;기본명령어&quot;&gt;&lt;/a&gt;기본명령어&lt;/h3&gt;&lt;p&gt;당연히 알고있어야 하는것들이다! 자연스럽게 사용할줄 알아야함!&lt;/p&gt;
&lt;p&gt;폴더 == 디렉토리&lt;br&gt;리눅
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. vi에디터, CD/DVD마운트</title>
    <link href="http://KKimSangHeon.github.io/2017/07/02/ThisIsLinux3/"/>
    <id>http://KKimSangHeon.github.io/2017/07/02/ThisIsLinux3/</id>
    <published>2017-07-02T04:13:19.000Z</published>
    <updated>2017-07-02T06:19:38.179Z</updated>
    
    <content type="html"><![CDATA[<h3 id="에디터"><a href="#에디터" class="headerlink" title="에디터"></a>에디터</h3><p>gedit / vi 로 나뉜다. gedit는 윈도우의 메모장으로 생각하면 되며 단순하다. vi는 리눅스에서 자주 사용되므로 반드시 익혀야 한다.</p>
<h4 id="gedit"><a href="#gedit" class="headerlink" title="gedit"></a>gedit</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ gedit //gedit 실행</div><div class="line">        //윈도우 + 스페이스 : 한영전환</div><div class="line"></div><div class="line">$ gedit 파일명 // 파일열기</div></pre></td></tr></table></figure>
<h4 id="vi-에디터"><a href="#vi-에디터" class="headerlink" title="vi 에디터"></a>vi 에디터</h4><p>x윈도우가 설치되지 않은곳에서도 사용 가능하기에 공통적으로 사용가능하다!<br>초기 실행시 vi에디터는 명령모드이다. 즉 입력이 불가능한 상태이다.</p>
<p>새파일 작성시  , 수정시</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ vi 파일명 //vi 에디터가 실행된다.</div><div class="line"></div><div class="line">i 또는 a 입력 //이후 편집, 입력작업진행</div><div class="line"></div><div class="line">esc   //작업이 끝난 후 명령모드로 변경</div><div class="line"></div><div class="line">:wq   //저장하고 종료한다.</div><div class="line">:q!   //수정사항 무시하고 종료.</div></pre></td></tr></table></figure></h2><p>코드의 행 번호를 확인하고 싶을경우<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ :set number</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="swp-파일"><a href="#swp-파일" class="headerlink" title="swp 파일?"></a>swp 파일?</h3><p>중간에 작업을 하다 터미널이 비정상적으로 종료될 경우 swp파일이 생성된다. vi를 실행하면 에러가 뜨는데 엔터를 누르면 작업이 가능하다.</p>
<p>이 파일을 확인하기 위해서는 다음명령어를 입력한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -a //숨김파일까지 조회</div></pre></td></tr></table></figure></p>
<p>그 후 파일을 swp 파일을 지우려면 다음을 입력한다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rm .myfile3.txt.swp</div></pre></td></tr></table></figure></p>
<h3 id="도움말기능"><a href="#도움말기능" class="headerlink" title="도움말기능"></a>도움말기능</h3><p>도움말 사용방법<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mas ls //ls에 대한 도움말을 확인 . 스페이스바로 페이지 이동가능</div></pre></td></tr></table></figure></p>
<h3 id="마운트"><a href="#마운트" class="headerlink" title="마운트"></a>마운트</h3><p>물리적인 장치와 디렉터리를 연결시켜주는 과정<br>무슨소리지? 윈도우는 CD를 넣으면 D 드라이드 등으로 연결시켜 주지만 리눅스는 이과정이 없어서 특정 디렉토리로 연결시켜 주는것이다.</p>
<p>X윈도우에서 가능하며, 텍스트 모드에서 가능하다<br>1.<br>우선 vmware상으로 cd를 삽입해야 하므로 그 과정을 거친다. 좌측상단 Player을 누르고 Removable Decices -&gt; CD/DVD -&gt; Setting 을 들어간다.<br>혹은 우측상단 CD 모양 누르고 Setting</p>
<p>2.<br>CD/DVD 탭으로 가서 Connected 키고 Use ISO…. 에 iso 이미지 선택</p>
<p>3.<br>자동으로 인식이 되는데???? 리눅스는 자동으로 안된다며…<br>하지만 이게 되는 리눅스가 있고 안되는게 있다. 또한 텍스트 모드는 자동으로 인식이 되지 않으므로 수동으로 연습하는 것이 필요!</p>
<h4 id="마운트-사용법"><a href="#마운트-사용법" class="headerlink" title="마운트 사용법"></a>마운트 사용법</h4><p>사전지식 :<br>dvd장치의 경로 : /dev/cdrom<br>보통 /media/cdrom 디렉토리를 마운트 할 떄 많이씀</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$ umount /dev/cdrom   //마운트 된것을 끊는것. 연결이 되지 않았을 경우 오류메시지가 나온다. 하지만 상관없다.</div><div class="line"></div><div class="line">$ ls /media   //마운트 대상 디렉터리를 생성하기 전에 존재유무 확인</div><div class="line">$ mkdir /media/cdrom    //마운트 대상 디렉토리 생성</div><div class="line"></div><div class="line">$ mount /dev/cdrom  /media/cdrom    //마운트!</div><div class="line"></div><div class="line">$ cd /media/cdrom //디렉토리 이동</div><div class="line"></div><div class="line">$ ls  //마운트가 잘 되었는지 확인</div><div class="line"></div><div class="line">$ umount /dev/cdrom   //마운트 끊기 하지만 에러가 난다. 현재 cdrom 안에 존재하기 때문에.</div><div class="line"></div><div class="line">$ cd      // 홈디렉토리로 이동</div><div class="line"></div><div class="line">$ umount /dev/cdrom   //마운트 끊기 재시도</div><div class="line"></div><div class="line">$ ls /media/cdrom   //정상적으로 끊어진것을 확인</div><div class="line"></div></pre></td></tr></table></figure>
<h3 id="ISO-파일-제작"><a href="#ISO-파일-제작" class="headerlink" title="ISO 파일 제작"></a>ISO 파일 제작</h3><p>p180 보고 진행하세요~ 앞으로 사용할 일은 없지만 가볍게 실습해보세요<br>ISO 파일을 생성하는 명령어는 genisoimage 이다. 또 iso 파일을 CD로 굽기 위한 명령어는 cdrecord이며 DVD로 굽는 명령어는 growisofs 이다.</p>
<p>먼저 아래의 명령어로 패키지가 설치되어있는지 확인해보자.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ rpm -qa 패키지이름</div></pre></td></tr></table></figure><br>설치되어있지 않다면<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum -y install 패키지명 으로 설치를 한다.</div></pre></td></tr></table></figure></p>
<p>그 후 아래와 같이 입력하자. /boot디렉토리의 모든 파일을 test1.iso파일로 만드는 것이다.<br>-r -J 는 8글자 이상의 파일 이름 및 대소문자를 구분해서 인식하는 옵션이며 -o는 출력할 파일을 위한 옵션이다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ genisoimage -r -J -o test1.iso /boot  </div></pre></td></tr></table></figure></p>
<p>테스트 해보기 위해 디렉토리를 만들고 마운트 시킨다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mkdir /media/iso</div><div class="line">$ mount -o loop test1.iso /media/iso</div><div class="line">$ ls -l /media/iso</div><div class="line">$ ls -l /boot</div></pre></td></tr></table></figure></p>
<p>테스트를 했으면 마운트를 취소시켜준다<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ umount /media/iso  </div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;에디터&quot;&gt;&lt;a href=&quot;#에디터&quot; class=&quot;headerlink&quot; title=&quot;에디터&quot;&gt;&lt;/a&gt;에디터&lt;/h3&gt;&lt;p&gt;gedit / vi 로 나뉜다. gedit는 윈도우의 메모장으로 생각하면 되며 단순하다. vi는 리눅스에서 자주 사용되
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>4장. 시작과종료, 가상콘솔, 런레벨, 자동완성</title>
    <link href="http://KKimSangHeon.github.io/2017/07/01/ThisIsLinux2/"/>
    <id>http://KKimSangHeon.github.io/2017/07/01/ThisIsLinux2/</id>
    <published>2017-07-01T13:53:50.000Z</published>
    <updated>2017-07-02T04:12:47.584Z</updated>
    
    <content type="html"><![CDATA[<h3 id="참고사항"><a href="#참고사항" class="headerlink" title="참고사항"></a>참고사항</h3><p>lrwxrwxrwx. 어쩌구가 있을경우 맨앞의 l은 링크파일임을 의미한다. 윈도우의 바로가기를 생각하자!</p>
<h3 id="종료관련-명령어"><a href="#종료관련-명령어" class="headerlink" title="종료관련 명령어"></a>종료관련 명령어</h3><p>리눅스는 기본개념이 멀티유저 이므로 함부러 누군가 종료하거나 재시작하면 문제의 소지가 있다. ex) 네이버 서버를 누군가 종료시킨다면?</p>
<p>리눅스를 서버로 사용할 경우 리눅스는 종료가 아닌 로그아웃이 일반적인 개념이다!</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">$ shutdown -P now // 종료</div><div class="line"></div><div class="line">$ shutdown -P +10 //10분후에 종료</div><div class="line"></div><div class="line">$ shutdown -c //종료예약한것 취소</div><div class="line"></div><div class="line">$ shutdown -r 23:00 //23시에 재부팅</div><div class="line"></div><div class="line">$ shutdown -r +10 //10분후에 재부팅</div><div class="line"></div><div class="line">$ shutdown -c // 리부팅예약한것 취소</div><div class="line"></div><div class="line">$ shutdown -k +15  //20분 후에 종료된다는 메세지가 날라감</div><div class="line">                  //루트를 제외한 모든 사용자에게..</div><div class="line">                  //실제 종료는 안됨.</div><div class="line">                  //필요한 이유: 서버에 많은 사용자가 접속하였을 경우 사용자들의 로그아웃을 유도.</div><div class="line"></div><div class="line">$ init 0~6        // 0-종료모드 2-멀티유저모드 5-그래픽모드의 다중사용자모드 6-리부트모드</div><div class="line"></div><div class="line">$ startx      //x윈도우 모드로 변경</div><div class="line">              주의) 예로 단순히 init4에서 init1로가는것과 다르다.</div><div class="line">              //명령어 모드에서 x윈도우 모드로 변경되는것</div></pre></td></tr></table></figure>
<h3 id="가상콘솔-명령어"><a href="#가상콘솔-명령어" class="headerlink" title="가상콘솔 명령어"></a>가상콘솔 명령어</h3><p>CentOS는 6개의 가상콘솔을 제공하는데 ctrl+alt+F2~F6으로 이동이 가능하다. F1은 X윈도우 모드이다.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chvt 1~6 입력 //가상콘솔 이동</div></pre></td></tr></table></figure>
<h3 id="자동완성"><a href="#자동완성" class="headerlink" title="자동완성"></a>자동완성</h3><p>일부만 입력하고 탭을 누르면 자동완성된다.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ /abcdef</div><div class="line">를 입력하고자 할 경우</div><div class="line"></div><div class="line">$ /abc</div><div class="line">만 입력하고 탭키를 누르면</div><div class="line">$ /abcdef 가 입력된다.</div><div class="line"></div><div class="line">먄약 abcde, abcdef 라는 디렉토리가 존재할 경우에는</div><div class="line">$ /abc</div><div class="line">입력 후 탭키를 누르면 자동완성이 되지않는다. 이 경우 탭키를 두번누르면 abcde, abcdef 라는 디렉토리가 있다는 사실을 알려준다.</div></pre></td></tr></table></figure></p>
<h3 id="히스토리"><a href="#히스토리" class="headerlink" title="히스토리"></a>히스토리</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ history //자신이 입력했던 명령어들이 출력된다.</div><div class="line"></div><div class="line">$ history //히스토리 리스트를 제거한다.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;참고사항&quot;&gt;&lt;a href=&quot;#참고사항&quot; class=&quot;headerlink&quot; title=&quot;참고사항&quot;&gt;&lt;/a&gt;참고사항&lt;/h3&gt;&lt;p&gt;lrwxrwxrwx. 어쩌구가 있을경우 맨앞의 l은 링크파일임을 의미한다. 윈도우의 바로가기를 생각하자!&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>리눅스 명령어</title>
    <link href="http://KKimSangHeon.github.io/2017/07/01/Instruction/"/>
    <id>http://KKimSangHeon.github.io/2017/07/01/Instruction/</id>
    <published>2017-07-01T04:57:06.000Z</published>
    <updated>2017-07-03T23:54:23.515Z</updated>
    
    <content type="html"><![CDATA[<h3 id="참고사항"><a href="#참고사항" class="headerlink" title="참고사항"></a>참고사항</h3><p> $: 일반사용자     </p>
<p> #: 루트사용자</p>
<hr>
<h3 id="명령어"><a href="#명령어" class="headerlink" title="명령어"></a>명령어</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">$ halt -p 		// 종료</div><div class="line"></div><div class="line">$ gedit 파일명 		//편집기 열기</div><div class="line"></div><div class="line">$ ifconfig 		//윈도우 ipconfig와 동일</div><div class="line"></div><div class="line">$ reboot			//리부트 명령어</div><div class="line"></div><div class="line">$ su - 			//루트사용자의 권한을 얻음(폴더가 이동됨)</div><div class="line"></div><div class="line">$ su  		//루트사용자의 권한을 얻음(폴더 이동되지 않고)</div><div class="line"></div><div class="line">$ setfont sun12x22	//글자크기 변경</div><div class="line"></div><div class="line">$ vi 파일명		//vi 에디터 열기</div><div class="line"></div><div class="line">$ ip addr		 //ip 확인</div><div class="line"></div><div class="line">$ clear           //콘솔창 초기화</div><div class="line"></div><div class="line">$ yum 프로그램    //프로그램 설치</div><div class="line"></div><div class="line">$ cd  //홈디렉터리로 이동</div><div class="line"></div><div class="line">$ shutdown -P now // 종료</div><div class="line"></div><div class="line">$ shutdown -P +10 //10분후에 종료</div><div class="line"></div><div class="line">$ shutdown -c //종료예약한것 취소</div><div class="line"></div><div class="line">$ shutdown -r 23:00 //23시에 재부팅</div><div class="line"></div><div class="line">$ shutdown -r +10 //10분후에 재부팅</div><div class="line"></div><div class="line">$ shutdown -c // 리부팅예약한것 취소</div><div class="line"></div><div class="line">$ shutdown -k +15  //20분 후에 종료된다는 메세지가 날라감</div><div class="line">                  //루트를 제외한 모든 사용자에게..</div><div class="line">                  //실제 종료는 안됨.</div><div class="line">                  //필요한 이유: 서버에 많은 사용자가 접속하였을 경우 사용자들의 로그아웃을 유도.</div><div class="line"></div><div class="line">$ init 0~6        // 0-종료모드 2-멀티유저모드 5-그래픽모드의 다중사용자모드 6-리부트모드</div><div class="line"></div><div class="line">$ startx      //x윈도우 모드로 변경</div><div class="line">              주의) 예로 단순히 init4에서 init1로가는것과 다르다.</div><div class="line">              //명령어 모드에서 x윈도우 모드로 변경되는것</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">$ chvt 1~6 입력 //가상콘솔 이동</div><div class="line"></div><div class="line">$ gedit //gedit 실행</div><div class="line">        //윈도우 + 스페이스 : 한영전환</div><div class="line"></div><div class="line">$ gedit 파일명 // 파일열기</div><div class="line"></div><div class="line">$ vi 파일명 //vi 에디터가 실행된다.</div><div class="line"></div><div class="line">i 또는 a 입력 //이후 편집, 입력작업진행</div><div class="line"></div><div class="line">esc   //작업이 끝난 후 명령모드로 변경</div><div class="line"></div><div class="line">:wq   //저장하고 종료한다.</div><div class="line">:q!   //수정사항 무시하고 종료</div><div class="line"></div><div class="line">$ :set number //코드의 행번호 확인</div><div class="line"></div><div class="line">$ ls -a //숨김파일까지 조회</div><div class="line"></div><div class="line">$ rm .myfile3.txt.swp //파일삭제</div><div class="line"></div><div class="line">$ mas ls //ls에 대한 도움말을 확인 . 스페이스바로 페이지 이동가능</div><div class="line"></div><div class="line">$ umount /dev/cdrom   //마운트 된것을 끊는것. 연결이 되지 않았을 경우 오류메시지가 나온다.</div><div class="line"></div><div class="line">$ mount /dev/cdrom  /media/cdrom    //마운트!</div><div class="line"></div><div class="line">$ rpm -qa 패키지이름 //패키지 설치여부 확인</div><div class="line"></div><div class="line">$ yum -y install 패키지명 으로 설치를 한다.</div><div class="line"></div><div class="line">$ ls    // 파일이나 폴더의 목록을 보는것 윈도우의 dir.</div><div class="line"></div><div class="line">$ ls /etc/sysconfig   //특정 폴더내의 목록을 보는것</div><div class="line"></div><div class="line">$ ls -a   //숨김파일까지 보는것.</div><div class="line"></div><div class="line">$ ls -l  // 자세히 보는것</div><div class="line">         //-로 시작하면 파일 d로 시작하면 디렉토리</div><div class="line"></div><div class="line">$ ls *.cfg //확장자가 cfg인것</div><div class="line"></div><div class="line">$ ls ls my* // my로 시작하는것들 조회</div><div class="line"></div><div class="line">$ ls -al //숨김파일까지 자세히 조회</div><div class="line">          // -a, -l 의 결합</div><div class="line"></div><div class="line">$ cd /etc/sysconfig/</div><div class="line">$ pwd     //현재 디렉터리 위치 출력</div><div class="line"></div><div class="line">$ cd /    // 최상위폴더로 이동(루트 디렉토리라함)</div><div class="line">          // $ cd / 명령어의 경우 다음 명령창이 아래와 같이 나온다.</div><div class="line">          // [root@localhost /]#</div><div class="line"></div><div class="line">$ cd      //  &quot;/루트 디렉토리&quot;(현재 사용자의 홈폴더)로 이동</div><div class="line">          //  $ cd 명령어의 경우 다음 명령창이 아래와 같이 나온다.</div><div class="line">          //  [root@localhost ~]</div><div class="line"></div><div class="line">$ cd /etc       //루트 디렉토리의 etc로 이동(절대경로)</div><div class="line">$ cd etc        //현재 디렉토리에서 etc로 이동 (상대경로)</div><div class="line">$ cd ..         //현재 디렉토리의 바로 앞 디렉토리로 이동</div><div class="line">$ cd .          //현재 디렉토리 반환</div><div class="line"></div><div class="line">$ cd ~centos  //해당 사용자의 홈 디렉토리로 이동</div><div class="line">              //즉 $ cd~사용자 == $ cd  </div><div class="line"></div><div class="line">$ touch        //비어있는 파일 생성</div><div class="line"></div><div class="line">$ rm file1    // 삭제명령어 (삭제할것인지 재확인함)</div><div class="line"></div><div class="line">$ rm -f file1   // 삭제 명령어(삭제할것인지 확인하지 않고 삭제)</div><div class="line"></div><div class="line">$ cp file3 file4  //file3가 file4로 복사됨</div><div class="line"></div><div class="line">$ cp -r /etc/sysconfig .  //  /etc/sysconfig폴더를 현재 폴더에 복사한다. -r은 디렉토리 복사일</div><div class="line"></div><div class="line">$ mv myfile3.txt /root/sysconfig    //myfile3.txt파일을 /root/sysconfig 로 이동</div><div class="line"></div><div class="line">$ mv file file3     //파일이름을 file에서 file3로 변경</div><div class="line"></div><div class="line">$ mkdir folder1   //folder1 디렉토리 생성</div><div class="line"></div><div class="line">$ mkdir -p dir1/dir2/dir3     // dir1/dir2/dir3 디렉토리를 생성</div><div class="line">                      //  디렉토리가 3개가 만들어지는것이 아니라 dir1 안에 dir2 안에 dir3가 만들어진다.</div><div class="line"></div><div class="line">$ rmdir folder1   //디렉토리 제거 (폴더가 비어있을 경우 가능)</div><div class="line"></div><div class="line">$ rmdir -r folder1  //내부에 파일이 있는 디렉토리 제거</div><div class="line">              //(안에 들어있는 파일 하나하나 지울것인지 다물어본다.)</div><div class="line"></div><div class="line">$ rm -rf dir1   //묻지도 따지지도 않고 dir1 디렉토리 제거</div><div class="line">                //매우 위험하다!! 주의해서 사용</div><div class="line"></div><div class="line">$ cat anaconda.ks.cfg   // 파일을 읽기</div><div class="line"></div><div class="line">$ head anaconda-ks.cfg  //위에 10줄만 읽기</div><div class="line">$ head -5 anaconda-ks.cfg  //위에 5줄만 읽기</div><div class="line"></div><div class="line">$ tail anaconda-ks.cfg  //아래 10줄만 읽기</div><div class="line"></div><div class="line">$ more anaconda-ks.cfg  //페이지 단위로 끊어읽기</div><div class="line"></div><div class="line">$ less anaconda-ks.cfg  //페이지 단위로 끊어읽기 less가 more보다 몇가지 명령어가 더 존재함</div><div class="line"></div><div class="line">$ file file1    //디렉터리인지, 링크인지, 비었는지 등을 알려준다.</div><div class="line"></div><div class="line"># userdel -r user1 //보통 현업에선 -r옵션을 넣어 디렉토리까진 지우지 않는다.</div><div class="line">                  //하지만 실습이므로 과감하게 지운다.</div><div class="line"># groupadd centosGroup    //그룹생성</div><div class="line"></div><div class="line"># useradd user1         //user1생성</div><div class="line"></div><div class="line"># useradd -g centosGroup user1  //centosGroup에 소속된 user1생성</div><div class="line"># useradd -g centosGroup user2  //centosGroup에 소속된 user2생성</div><div class="line"></div><div class="line"># passwd shkim //사용자의 비밀번호를 지정하거나 변경</div><div class="line"></div><div class="line"># usermod -g root shkim  //사용자의 속성을 변경</div><div class="line"></div><div class="line"># userdel shkim //사용자는 지우나 디렉토리를 제거하지 않음.</div><div class="line">            //-r 옵션이 존재. 이는 사용자가 사용하던 디렉토리까지 제거</div><div class="line"></div><div class="line"># change -m 2 shkim  //사용자의 암호를 주기적으로 변경하도록 설정</div><div class="line">          //-m 2는 최소 이틀이상 써야한다.(189p 참고)</div><div class="line"></div><div class="line"># groups // 사용자가 속한 그룹을 보여줌</div><div class="line"></div><div class="line"># groupadd newgroup   //새로운 그룹을 새성          </div><div class="line"></div><div class="line"># groupmod  -n newgroup mygroup//그룹의 속성을 변경 newgroup을 mygroup로 변경</div><div class="line"></div><div class="line"># groupdel newgroup //그룹을 삭제</div><div class="line"></div><div class="line"># gpasswd newgroup  //그룹의 암호설정</div><div class="line"></div><div class="line">$ chmod o-x  test      //일반사용자(o : ordinary)는 -x (x:execute) 실행 못하도록</div><div class="line">$ ls -l test</div><div class="line">-rwxrwxrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //마지막 x가 빠짐</div><div class="line"></div><div class="line">$ chmod ug-w test    //소유주(u: user), 소유그룹(g: group) 쓰기권한 제거</div><div class="line">$ ls -l test</div><div class="line">-r-xr-xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //3번째 6번째 w가 빠짐</div><div class="line"></div><div class="line">$ chmod ugo-r test  //전부다 읽기권한 제거</div><div class="line">$ ls -l test   </div><div class="line">---x--x-w- 1 centos centos 52  7월  3 13:52 test</div><div class="line">        //r이 제거된것 확인</div><div class="line"></div><div class="line">$ chmod uo+rw test  //소유주, 기타사용자에게 읽기,쓰기 허용</div><div class="line">$ ls -l test  </div><div class="line">-rwx--xrw- 1 centos centos 52  7월  3 13:52 test</div><div class="line"></div><div class="line">//숫자를 넣지 않고 하는것을 심볼릭방법이라 하는데 이것이 더 편할 때가 있다.</div><div class="line">숫자로 할 경우 기존의 권한도 알아야 하기 때문에..</div><div class="line"></div><div class="line"># chown centos sample.txt   //centos로 소유권을 넘김</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 centos root 0  7월  3 13:35 sample.txt  //소유권 변경됨</div><div class="line"></div><div class="line"># chgrp centos sample.txt   //파일소유그룹 변경</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 centos centos 0  7월  3 13:35 sample.txt</div><div class="line"></div><div class="line"># chown root.root sample.txt  //파일 소유자, 그룹 변경</div><div class="line"># ls -l sample.txt</div><div class="line">-rw-r-xr-x 1 root root 0  7월  3 13:35 sample.txt</div><div class="line"></div><div class="line"># su - centos   //centos계정으로 로그인</div><div class="line">      //루트계정일 경우 암호를 묻지않는다.</div><div class="line">      //-를 붙이면 디렉토리가 centos디렉토리로 변경되가</div><div class="line">      //붙이지 않으면 변경되지 않는다.</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;참고사항&quot;&gt;&lt;a href=&quot;#참고사항&quot; class=&quot;headerlink&quot; title=&quot;참고사항&quot;&gt;&lt;/a&gt;참고사항&lt;/h3&gt;&lt;p&gt; $: 일반사용자     &lt;/p&gt;
&lt;p&gt; #: 루트사용자&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;명령어&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="관련정보" scheme="http://KKimSangHeon.github.io/categories/Linux/%EA%B4%80%EB%A0%A8%EC%A0%95%EB%B3%B4/"/>
    
    
      <category term="리눅스 명령어" scheme="http://KKimSangHeon.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%AA%85%EB%A0%B9%EC%96%B4/"/>
    
  </entry>
  
  <entry>
    <title>리눅스 에러</title>
    <link href="http://KKimSangHeon.github.io/2017/07/01/LinuxError/"/>
    <id>http://KKimSangHeon.github.io/2017/07/01/LinuxError/</id>
    <published>2017-07-01T04:45:37.000Z</published>
    <updated>2017-07-01T14:39:51.881Z</updated>
    
    <content type="html"><![CDATA[<p>증상:<br>Virtualized performance counters are not supported on the host CPU type. Module VPMC power on failed. Failed to start the virtual machine 이라는 에러메세지 출력.</p>
<p>해결법:<br>.vmx 파일을 열고 vpmc.enable 부분을 “FALSE”로 수정.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;증상:&lt;br&gt;Virtualized performance counters are not supported on the host CPU type. Module VPMC power on failed. Failed to start the virtual 
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="관련정보" scheme="http://KKimSangHeon.github.io/categories/Linux/%EA%B4%80%EB%A0%A8%EC%A0%95%EB%B3%B4/"/>
    
    
      <category term="Linux Error" scheme="http://KKimSangHeon.github.io/tags/Linux-Error/"/>
    
  </entry>
  
  <entry>
    <title>BinarySearch</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/BinarySearch/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/BinarySearch/</id>
    <published>2017-06-30T10:38:20.000Z</published>
    <updated>2017-06-30T11:01:37.840Z</updated>
    
    <content type="html"><![CDATA[<h3 id="이진탐색"><a href="#이진탐색" class="headerlink" title="이진탐색"></a>이진탐색</h3><p>데이터의 정렬이 선행되어야 한다. 시간복잡도는 O(log2n) 이다.<br><figure class="highlight c"><figcaption><span>BinarySearch.c 재귀적인 방법</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ISearch</span><span class="params">(<span class="keyword">int</span> ar[], <span class="keyword">int</span> first, <span class="keyword">int</span> last, <span class="keyword">int</span> target)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> mid;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(first &gt; last)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;    <span class="comment">// -1의 반환은 탐색의 실패를 의미</span></div><div class="line"></div><div class="line">	mid=(first+last) / <span class="number">2</span> ;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(ar[mid] == target)</div><div class="line">		<span class="keyword">return</span> mid;    <span class="comment">// 탐색된 타겟의 인덱스 값 반환</span></div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(target &lt; ar[mid])</div><div class="line">		<span class="keyword">return</span> ISearch(ar, first, mid<span class="number">-1</span>, target);</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="keyword">return</span> ISearch(ar, mid+<span class="number">1</span>, last, target);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight c"><figcaption><span>BinarySearch.c 반복문 이용</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">BinarySearch(<span class="keyword">int</span> DataSet[], <span class="keyword">int</span> Size, <span class="keyword">int</span> target)&#123;</div><div class="line">	<span class="keyword">int</span> Left,Right,Mid;</div><div class="line"></div><div class="line">	Left=<span class="number">0</span>;</div><div class="line">	Right=Size<span class="number">-1</span>;</div><div class="line"></div><div class="line">	<span class="keyword">while</span>(Left&lt;=Right)&#123;</div><div class="line">		Mid=(Left+Rigth) / <span class="number">2</span> ;</div><div class="line"></div><div class="line">		<span class="keyword">if</span>( Target==DataSet[Mid])</div><div class="line">			<span class="keyword">return</span> DataSet[Mid];</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(Target&gt;DataSet[Mid])</div><div class="line">			Left=Mid+<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			Right=Mid<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>이진탐색의 경우 비교대상이 되는 mid값을 단순히 (first+last)/2로 설정한다.<br>그러나 보간 탐색의 경우 mid 값 설정방식이 다르며 이진탐색보다 우수한 성능을 보인다.</p>
<h3 id="보간탐색"><a href="#보간탐색" class="headerlink" title="보간탐색"></a>보간탐색</h3><p>탐색대상이 앞쪽에 위치 할 경우 앞쪽에서 탐색을 시작하고 뒤쪽에 위치할 경우 뒤쪽에서 탐색을 시작한다.<br>이진탐색보다 우수하다.<br><figure class="highlight c"><figcaption><span>ISearch.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ISearch</span><span class="params">(<span class="keyword">int</span> ar[], <span class="keyword">int</span> first, <span class="keyword">int</span> last, <span class="keyword">int</span> target)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> mid;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(ar[first]&gt;target || ar[last]&lt;target)</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="comment">// 이진 탐색과의 차이점을 반영한 문장</span></div><div class="line">	mid = ((<span class="keyword">double</span>)(target-ar[first]) / (ar[last]-ar[first]) *(last-first)) + first;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(ar[mid] == target)</div><div class="line">		<span class="keyword">return</span> mid;    <span class="comment">// 탐색된 타겟의 인덱스 값 반환</span></div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(target &lt; ar[mid])</div><div class="line">		<span class="keyword">return</span> ISearch(ar, first, mid<span class="number">-1</span>, target);</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="keyword">return</span> ISearch(ar, mid+<span class="number">1</span>, last, target);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="보간탐색의-mid값-계산-방법"><a href="#보간탐색의-mid값-계산-방법" class="headerlink" title="보간탐색의 mid값 계산 방법"></a>보간탐색의 mid값 계산 방법</h4><img src="/2017/06/30/BinarySearch/BinarySearch1.bmp" alt="보간탐색의 mid값 계산 방법 [그림1]" title="보간탐색의 mid값 계산 방법 [그림1]">
<p>그림[1]에서 arr[s]는 찾는값을 의미함.</p>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;이진탐색&quot;&gt;&lt;a href=&quot;#이진탐색&quot; class=&quot;headerlink&quot; title=&quot;이진탐색&quot;&gt;&lt;/a&gt;이진탐색&lt;/h3&gt;&lt;p&gt;데이터의 정렬이 선행되어야 한다. 시간복잡도는 O(log2n) 이다.&lt;br&gt;&lt;figure class=&quot;highl
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Search" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Search/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Search" scheme="http://KKimSangHeon.github.io/tags/Search/"/>
    
      <category term="BinarySearch" scheme="http://KKimSangHeon.github.io/tags/BinarySearch/"/>
    
  </entry>
  
  <entry>
    <title>2장. CentOS 리눅스 소개</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/ThisIsLinux1/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/ThisIsLinux1/</id>
    <published>2017-06-30T09:55:52.000Z</published>
    <updated>2017-07-01T05:14:51.441Z</updated>
    
    <content type="html"><![CDATA[<h3 id="리눅스"><a href="#리눅스" class="headerlink" title="리눅스"></a>리눅스</h3><hr>
<h4 id="리눅스란"><a href="#리눅스란" class="headerlink" title="리눅스란?"></a>리눅스란?</h4><p>리눅스 = 무료 유닉스 라 생각하면 된다.<br>1991 ‘리누스 토르발스’가 버전 0.01을 최초로 완성. 리누스 토르발스는 커널(kernel)만 개발함(여기서 커널은 자동차 엔진이라고 보면된다.)<br>모든 배포판은 리누스 토르발스가 개발한 커널을 갖고 사람들이 만들어진것이다. CentOS 또한 마찬가지..자동차로 비유하자면 A,B,C 회사가 하나의 엔진을 사용하여 각기 다른 자동차를 만들어내놓음.<br>우리가 공부할 CentOS의 커널버전은 3.17.4인데 변경이 가능하다.!<br>자동차로 비교하면 자동차를 그대로 두고 엔진만 변경하는것.<br>이를 커널 업그레이드 라고 한다.</p>
<h4 id="GNU-프로젝트"><a href="#GNU-프로젝트" class="headerlink" title="GNU 프로젝트?"></a>GNU 프로젝트?</h4><p>GNU 프로젝트 - GPL(General Public License[자유 소프트웨어의 수정과 공유의 자유를 보장하는것.]) 에 따라 소스를 배포하여 공개하고 그것을 더 개선하여 배포하고 의 반복.. 리눅스 또한 마찬가지. 그래서 현재는 유닉스 보다 더 좋다고 말하는 사람들이 많다. 여기서 재미있는점 하나. 소스코드를 무료로 얻어서 기능개선 후 판매는 가능하다. 그러나 GPL에 의해 소스코드는 공유해야한다는점.</p>
<h4 id="레드햇-리눅스와-CentOS-리눅스"><a href="#레드햇-리눅스와-CentOS-리눅스" class="headerlink" title="레드햇 리눅스와 CentOS 리눅스?"></a>레드햇 리눅스와 CentOS 리눅스?</h4><p>전 세계적으로 유명하며 기업에서 많이쓴다. 무료버전은 없으며 상용버전만 존재한다. 하지만 GPL에 의해 소스코드는 공개되어 있어 레드햇 엔터프라이즈 리눅스의 소스코드를 그대로 가져와 로고만 바꾼것이 CentOS!!<br>결국 레드햇 리눅스 == CentOS 리눅스</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;리눅스&quot;&gt;&lt;a href=&quot;#리눅스&quot; class=&quot;headerlink&quot; title=&quot;리눅스&quot;&gt;&lt;/a&gt;리눅스&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;리눅스란&quot;&gt;&lt;a href=&quot;#리눅스란&quot; class=&quot;headerlink&quot; title=&quot;리눅스란?&quot;&gt;&lt;
    
    </summary>
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/categories/Linux/"/>
    
      <category term="이것이 리눅스다" scheme="http://KKimSangHeon.github.io/categories/Linux/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EB%A6%AC%EB%88%85%EC%8A%A4%EB%8B%A4/"/>
    
    
      <category term="Linux" scheme="http://KKimSangHeon.github.io/tags/Linux/"/>
    
      <category term="This Is Linux" scheme="http://KKimSangHeon.github.io/tags/This-Is-Linux/"/>
    
  </entry>
  
  <entry>
    <title>기수정렬 (RadixSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/RadixSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/RadixSort/</id>
    <published>2017-06-30T05:36:34.000Z</published>
    <updated>2017-06-30T11:02:17.317Z</updated>
    
    <content type="html"><![CDATA[<h3 id="기수정렬"><a href="#기수정렬" class="headerlink" title="기수정렬"></a>기수정렬</h3><p>버켓에 데이터를 작은 수 부터 넣고 빼내어 정렬하는 방식이다.<br>기수정렬의 시간복잡도는 O(ln)이며 l은 버켓의 크기를 의미한다.</p>
<p>red, why, few 정렬가능    - 버킷 3개 필요<br>10,161,18,1 가능 - 버킷 3개 필요<br>proffesor , red , why 불가능<br>125 , -101, 167, -505 불가능</p>
<p>##참고사항</p>
<p>1의자리 수 구하기-num/1%10<br>10의자리 수 구하기 -num/10%10<br>100의 자리 수 구하기 -num/100%10</p>
<figure class="highlight c"><figcaption><span>InsertionSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">RadixSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> num, <span class="keyword">int</span> maxLen)</span>   <span class="comment">// maxLen은 가장 긴 데이터의 길이</span></span></div><div class="line">&#123;</div><div class="line">	Queue buckets[BUCKET_NUM];</div><div class="line">	<span class="keyword">int</span> bi;</div><div class="line">	<span class="keyword">int</span> pos;</div><div class="line">	<span class="keyword">int</span> di;</div><div class="line">	<span class="keyword">int</span> divfac = <span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> radix;</div><div class="line"></div><div class="line">	<span class="comment">// 총 10개의 버킷 초기화</span></div><div class="line">	<span class="keyword">for</span>(bi=<span class="number">0</span>; bi&lt;BUCKET_NUM; bi++)</div><div class="line">		QueueInit(&amp;buckets[bi]);</div><div class="line"></div><div class="line">	<span class="comment">// 가장 긴 데이터의 길이만큼 반복</span></div><div class="line">	<span class="keyword">for</span>(pos=<span class="number">0</span>; pos&lt;maxLen; pos++)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">// 정렬 대상의 수만큼 반복</span></div><div class="line">		<span class="keyword">for</span>(di=<span class="number">0</span>; di&lt;num; di++)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">// N번째 자리의 숫자 추출</span></div><div class="line">			radix = (arr[di] / divfac) % <span class="number">10</span>;</div><div class="line"></div><div class="line">			<span class="comment">// 추출한 숫자를 근거로 데이터 버킷에 저장</span></div><div class="line">			Enqueue(&amp;buckets[radix], arr[di]);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 버킷 수만큼 반복</span></div><div class="line">		<span class="keyword">for</span>(bi=<span class="number">0</span>, di=<span class="number">0</span>; bi&lt;BUCKET_NUM; bi++)</div><div class="line">		&#123;</div><div class="line">			<span class="comment">// 버킷에 저장된 것 순서대로 다 꺼내서 다시 arr에 저장</span></div><div class="line">			<span class="keyword">while</span>(!QIsEmpty(&amp;buckets[bi]))</div><div class="line">				arr[di++] = Dequeue(&amp;buckets[bi]);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// N번째 자리의 숫자 추출을 위한 피제수의 증가</span></div><div class="line">		divfac *= <span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;기수정렬&quot;&gt;&lt;a href=&quot;#기수정렬&quot; class=&quot;headerlink&quot; title=&quot;기수정렬&quot;&gt;&lt;/a&gt;기수정렬&lt;/h3&gt;&lt;p&gt;버켓에 데이터를 작은 수 부터 넣고 빼내어 정렬하는 방식이다.&lt;br&gt;기수정렬의 시간복잡도는 O(ln)이며 l은 
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Radix Sort" scheme="http://KKimSangHeon.github.io/tags/Radix-Sort/"/>
    
  </entry>
  
  <entry>
    <title>퀵정렬 (QuickSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/QuickSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/QuickSort/</id>
    <published>2017-06-30T05:36:18.000Z</published>
    <updated>2017-06-30T11:02:24.397Z</updated>
    
    <content type="html"><![CDATA[<h3 id="퀵정렬"><a href="#퀵정렬" class="headerlink" title="퀵정렬"></a>퀵정렬</h3><p>퀵 정렬 O(nlog2n)- 피벗을 정하여 분할하여 정복.. 피벗을 선택 할때 3개를 선택하여 평균치를 구하여 구하면 더 효율적으로 피벗을 정할 수 있다.<br>피벗이 잘 선택될 경우 시간복잡도가 줄어든다.</p>
<p>최악의 경우 O(n^2)이 될 수 있다  (피벗값이 많이 안좋을 경우)</p>
<p>O(nlog2n)의 시간복잡도를 갖는 다른 정렬 알고리즘 보다 평균적으로 빠르다.<br>why ? 데이터 이동이 상대적으로 작고 병합정렬과 같이 별도의 메모리 공간을 요구하지 않기 때문에..</p>
<p>나만의 요약! : 피벗값을 기준으로 처음지점부터 시작한 반복문은 피벗보다 작은값을 찾고 뒤에서 시작한 반복문은 피벗보다 큰값을 찾아 서로 바꾼다. ( 단 피벗을 지나치치 않음)</p>
<figure class="highlight c"><figcaption><span>QuickSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> idx1, <span class="keyword">int</span> idx2)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> temp = arr[idx1];</div><div class="line">	arr[idx1] = arr[idx2];</div><div class="line">	arr[idx2] = temp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> pivot = arr[left];    <span class="comment">// 피벗의 위치는 가장 왼쪽!</span></div><div class="line">	<span class="keyword">int</span> low = left+<span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> high = right;</div><div class="line"></div><div class="line">	<span class="keyword">while</span>(low &lt;= high)    <span class="comment">// 교차되지 않을 때까지 반복</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span>(pivot &gt; arr[low])</div><div class="line">			low++;</div><div class="line"></div><div class="line">		<span class="keyword">while</span>(pivot &lt; arr[high])</div><div class="line">			high--;</div><div class="line"></div><div class="line">		<span class="comment">/*</span></div><div class="line">		while(pivot &gt;= arr[low] &amp;&amp; low &lt;= right)</div><div class="line">			low++;</div><div class="line"></div><div class="line">		while(pivot &lt;= arr[high] &amp;&amp; high &gt;= (left+1))</div><div class="line">			high--;</div><div class="line">		*/</div><div class="line"></div><div class="line">		<span class="keyword">if</span>(low &lt;= high)    <span class="comment">// 교차되지 않은 상태라면 Swap 실행</span></div><div class="line">			Swap(arr, low, high);    <span class="comment">// low와 high가 가리키는 대상 교환</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	Swap(arr, left, high);    <span class="comment">// 피벗과 high가 가리키는 대상 교환</span></div><div class="line">	<span class="keyword">return</span> high;    <span class="comment">// 옮겨진 피벗의 위치 정보 반환</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(left &lt;= right)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">int</span> pivot = Partition(arr, left, right);    <span class="comment">// 둘로 나눠서</span></div><div class="line">		QuickSort(arr, left, pivot<span class="number">-1</span>);    <span class="comment">// 왼쪽 영역을 정렬</span></div><div class="line">		QuickSort(arr, pivot+<span class="number">1</span>, right);    <span class="comment">// 오른쪽 영역을 정렬</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;퀵정렬&quot;&gt;&lt;a href=&quot;#퀵정렬&quot; class=&quot;headerlink&quot; title=&quot;퀵정렬&quot;&gt;&lt;/a&gt;퀵정렬&lt;/h3&gt;&lt;p&gt;퀵 정렬 O(nlog2n)- 피벗을 정하여 분할하여 정복.. 피벗을 선택 할때 3개를 선택하여 평균치를 구하여 구하면 
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Quick Sort" scheme="http://KKimSangHeon.github.io/tags/Quick-Sort/"/>
    
  </entry>
  
  <entry>
    <title>병합정렬 (MergeSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/MergeSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/MergeSort/</id>
    <published>2017-06-30T05:36:10.000Z</published>
    <updated>2017-06-30T11:02:44.760Z</updated>
    
    <content type="html"><![CDATA[<h3 id="병합정렬"><a href="#병합정렬" class="headerlink" title="병합정렬"></a>병합정렬</h3><p>재귀적으로 분할하여 병합하는 방식으로 재귀적으로 모든 요소들을 쪼갠 후 합쳐나간다. 시간복잡도는 O(nlog2n))이다.</p>
<figure class="highlight c"><figcaption><span>MergeSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeTwoArea</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> mid, <span class="keyword">int</span> right)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> fIdx = left;</div><div class="line">	<span class="keyword">int</span> rIdx = mid+<span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> * sortArr = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*(right+<span class="number">1</span>));</div><div class="line">	<span class="keyword">int</span> sIdx = left;</div><div class="line"></div><div class="line">	<span class="keyword">while</span>(fIdx&lt;=mid &amp;&amp; rIdx&lt;=right)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(arr[fIdx] &lt;= arr[rIdx])</div><div class="line">			sortArr[sIdx] = arr[fIdx++];</div><div class="line">		<span class="keyword">else</span></div><div class="line">			sortArr[sIdx] = arr[rIdx++];</div><div class="line"></div><div class="line">		sIdx++;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(fIdx &gt; mid)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(i=rIdx; i&lt;=right; i++, sIdx++)</div><div class="line">			sortArr[sIdx] = arr[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span>(i=fIdx; i&lt;=mid; i++, sIdx++)</div><div class="line">			sortArr[sIdx] = arr[i];</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(i=left; i&lt;=right; i++)</div><div class="line">		arr[i] = sortArr[i];</div><div class="line"></div><div class="line">	<span class="built_in">free</span>(sortArr);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> mid;</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(left &lt; right)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">// 중간 지점을 계산한다.</span></div><div class="line">		mid = (left+right) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="comment">// 둘로 나눠서 각각을 정렬한다.</span></div><div class="line">		MergeSort(arr, left, mid);</div><div class="line">		MergeSort(arr, mid+<span class="number">1</span>, right);</div><div class="line"></div><div class="line">		<span class="comment">// 정렬된 두 배열을 병합한다.</span></div><div class="line">		MergeTwoArea(arr, left, mid, right);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;병합정렬&quot;&gt;&lt;a href=&quot;#병합정렬&quot; class=&quot;headerlink&quot; title=&quot;병합정렬&quot;&gt;&lt;/a&gt;병합정렬&lt;/h3&gt;&lt;p&gt;재귀적으로 분할하여 병합하는 방식으로 재귀적으로 모든 요소들을 쪼갠 후 합쳐나간다. 시간복잡도는 O(nlog2n
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Merge Sort" scheme="http://KKimSangHeon.github.io/tags/Merge-Sort/"/>
    
  </entry>
  
  <entry>
    <title>힙정렬 (HeapSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/HeapSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/HeapSort/</id>
    <published>2017-06-30T05:35:38.000Z</published>
    <updated>2017-06-30T11:02:55.505Z</updated>
    
    <content type="html"><![CDATA[<h3 id="힙-정렬"><a href="#힙-정렬" class="headerlink" title="힙 정렬"></a>힙 정렬</h3><p>힙을 만들어서 힙에 넣고 빼는것으로서 시간복잡도는 O(nlog2n) 이다.</p>
<figure class="highlight c"><figcaption><span>BubbleSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">	HInsert(&amp;heap,arr[i]);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</div><div class="line">	arr[i]=HDelete(&amp;heap);</div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;힙-정렬&quot;&gt;&lt;a href=&quot;#힙-정렬&quot; class=&quot;headerlink&quot; title=&quot;힙 정렬&quot;&gt;&lt;/a&gt;힙 정렬&lt;/h3&gt;&lt;p&gt;힙을 만들어서 힙에 넣고 빼는것으로서 시간복잡도는 O(nlog2n) 이다.&lt;/p&gt;
&lt;figure class=&quot;h
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Heap Sort" scheme="http://KKimSangHeon.github.io/tags/Heap-Sort/"/>
    
  </entry>
  
  <entry>
    <title>삽입정렬 (InsertionSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/InsertionSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/InsertionSort/</id>
    <published>2017-06-30T05:35:28.000Z</published>
    <updated>2017-06-30T11:03:11.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="삽입정렬"><a href="#삽입정렬" class="headerlink" title="삽입정렬"></a>삽입정렬</h3><p>1~n까지 정렬해 나감 1~2 정렬 12묶음 3정렬 13묶음 4정렬<br>첫 번째 데이터는 정렬이 되어있다고 봄. 그래서 i=0이아닌 1부터 시작.시간복잡도는 O(n^2) 이다.</p>
<figure class="highlight c"><figcaption><span>InsertionSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</div><div class="line">&#123;</div><div class="line">	insData=arr[i];	<span class="comment">//정렬대상을 insData에 저장</span></div><div class="line">	<span class="keyword">for</span>(j=i<span class="number">-1</span>;i&gt;=<span class="number">0</span>;j--)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(arr[j]&gt;insData)</div><div class="line">			arr[j+<span class="number">1</span>]=arr[j];</div><div class="line">		<span class="keyword">else</span></div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	arr[j+<span class="number">1</span>]=insData;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;삽입정렬&quot;&gt;&lt;a href=&quot;#삽입정렬&quot; class=&quot;headerlink&quot; title=&quot;삽입정렬&quot;&gt;&lt;/a&gt;삽입정렬&lt;/h3&gt;&lt;p&gt;1~n까지 정렬해 나감 1~2 정렬 12묶음 3정렬 13묶음 4정렬&lt;br&gt;첫 번째 데이터는 정렬이 되어있다고 봄
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Insertion Sort" scheme="http://KKimSangHeon.github.io/tags/Insertion-Sort/"/>
    
  </entry>
  
  <entry>
    <title>선택정렬 (SelectionSort)</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/SelectionSort/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/SelectionSort/</id>
    <published>2017-06-30T04:59:38.000Z</published>
    <updated>2017-06-30T11:03:24.859Z</updated>
    
    <content type="html"><![CDATA[<h3 id="선택정렬"><a href="#선택정렬" class="headerlink" title="선택정렬"></a>선택정렬</h3><p>오름차순일 경우 작은걸 맨앞에 넣고 그 다음 작은걸 두 번째 넣고 ..<br>이 과정을 계속 반복한다. 시간복잡도는 O(n^2) 이다.</p>
<figure class="highlight c"><figcaption><span>SelectionSort.c</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</div><div class="line">&#123;</div><div class="line">	maxIdx=i;</div><div class="line">	<span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)	<span class="comment">//최소값 탐색</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span>(arr[i]&lt;arr[maxIdx])</div><div class="line">			maxIdx=j;</div><div class="line">	&#125;</div><div class="line">	swap;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>참고 : 윤성우의 열혈 자료구조</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;선택정렬&quot;&gt;&lt;a href=&quot;#선택정렬&quot; class=&quot;headerlink&quot; title=&quot;선택정렬&quot;&gt;&lt;/a&gt;선택정렬&lt;/h3&gt;&lt;p&gt;오름차순일 경우 작은걸 맨앞에 넣고 그 다음 작은걸 두 번째 넣고 ..&lt;br&gt;이 과정을 계속 반복한다. 시간복잡
    
    </summary>
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/categories/Data-Structure/Sort/"/>
    
    
      <category term="Data Structure" scheme="http://KKimSangHeon.github.io/tags/Data-Structure/"/>
    
      <category term="Sort" scheme="http://KKimSangHeon.github.io/tags/Sort/"/>
    
      <category term="Selection Sort" scheme="http://KKimSangHeon.github.io/tags/Selection-Sort/"/>
    
  </entry>
  
  <entry>
    <title>작성논문</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/paper/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/paper/</id>
    <published>2017-06-30T04:40:14.000Z</published>
    <updated>2017-07-02T15:39:35.296Z</updated>
    
    <content type="html"><![CDATA[<h3 id="A-Survey-of-Fingerprint-Indoor-Positioning-Techniques"><a href="#A-Survey-of-Fingerprint-Indoor-Positioning-Techniques" class="headerlink" title="A Survey of Fingerprint Indoor Positioning Techniques"></a>A Survey of Fingerprint Indoor Positioning Techniques</h3><h4 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h4><p>The location based service (LBS) industry is so flourishing that enumerating all LBSs available now is almost impossible. In the marketing field, LBSs may recognize the current location of tenta-tive customers and push advertisement messages and coupons to them when they enter a predefined area. When a person makes a call to 911, the location of the person is identified by the emergency response agency so that help can be provided quickly. The location-based information service deliv-ers information of points of interests located near to the user. The navigation service is another well-known type of location-based services.<br>Location-based service cannot be realized unless the positioning problem is solved. The Global Positioning System (GPS) can be used as a general solution for outdoor positioning. However, posi-tioning for indoor area is still under development. We are especially interested in wireless local area network (WLAN)-based indoor positioning techniques because it is available in almost all huge man made constructions. Most of WLAN-based indoor positioning techniques use either the signal propa-gation model or fingerprints.<br>Implementation of the signal propagation model based indoor positioning method can be done quickly whereas implementation of the fingerprint method takes a long time. However, the finger-print method is more accurate than the signal propagation model based method. This paper surveys recently published fingerprint indoor positioning techniques.</p>
<p><a href="http://asehl.org/vol9_2016/19.pdf" target="_blank" rel="external">자세히 보기</a></p>
<hr>
<h3 id="Review-of-the-Techniques-for-Smart-Learning-Systems"><a href="#Review-of-the-Techniques-for-Smart-Learning-Systems" class="headerlink" title="Review of the Techniques for Smart Learning Systems"></a>Review of the Techniques for Smart Learning Systems</h3><h4 id="introduction-1"><a href="#introduction-1" class="headerlink" title="introduction"></a>introduction</h4><p>Flipped learning is said to be one of the most efficient teaching and learning methods. In flipped learning, students watch lecture videos at home. In the class, they solve interesting problems under the teacher’s guide. Nowadays, students watch videos through smart devices while they are on the way home. Therefore, schools should provide a smart learning system.<br>A database of lecture videos, smart applications, content management systems, and streaming servers are essential parts of smart learning systems. There are many database management system (DBMS) with which we can develop database of lecture videos. Among them, this paper reviews techniques to use MySQL DBMS.</p>
<p><a href="http://onlinepresent.org/proceedings/vol127_2016/1.pdf" target="_blank" rel="external">자세히 보기</a></p>
<hr>
<h3 id="Techniques-for-Group-Management-Application-Development"><a href="#Techniques-for-Group-Management-Application-Development" class="headerlink" title="Techniques for Group Management Application Development"></a>Techniques for Group Management Application Development</h3><h4 id="introduction-2"><a href="#introduction-2" class="headerlink" title="introduction"></a>introduction</h4><p>A group management system provides many types of valuable services. For example, a teacher can be aware of current locations of all the students in real time during a field trip using a group management mobile application. In the early stage of location based service, fleet management was one of the hottest research topics. This paper reviews group management related research results.<br>Positioning, handling maps, handling a database and mobile programming are indispensable technologies for the development of fleet management systems. Usages of these technologies in fleet management system development are discussed.<br><a href="http://onlinepresent.org/proceedings/vol143_2017/14.pdf" target="_blank" rel="external">자세히 보기
</a></p>
<hr>
<h3 id="Survey-of-Techniques-for-Location-Based-Mobile-Campus-Guide-Systems"><a href="#Survey-of-Techniques-for-Location-Based-Mobile-Campus-Guide-Systems" class="headerlink" title="Survey of Techniques for Location-Based Mobile Campus Guide Systems"></a>Survey of Techniques for Location-Based Mobile Campus Guide Systems</h3><h4 id="introduction-3"><a href="#introduction-3" class="headerlink" title="introduction"></a>introduction</h4><p>Location-based service provides useful information based on the place where the user is located. Smart phones are ideal devices that provide location-based services because they are equipped with various sensors with which we can determine the location of smart phones.<br>As an example of location-based service, the authors of [1] introduced a campus guide mobile app. This paper surveys techniques needed in development of location-based mobile campus guide systems. Campus guide systems prints out texts and images. It also plays audios and videos. Therefore, video on demand (VOD) techniques will be discussed. Techniques to identify the context of user will also be discussed. Finally, this paper will propose a design of a campus guide</p>
<p><a href="https://www.dropbox.com/s/4rrpp97xa7fgf68/Survey%20of%20Techniques%20for%20Location-Based%20Mobile%20Campus%20Guide%20Systems.doc?dl=0" target="_blank" rel="external">자세히 보기
</a></p>
<img src="/2017/06/30/paper/paper1.png" alt="상장" title="상장">
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;A-Survey-of-Fingerprint-Indoor-Positioning-Techniques&quot;&gt;&lt;a href=&quot;#A-Survey-of-Fingerprint-Indoor-Positioning-Techniques&quot; class=&quot;heade
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="My Projects" scheme="http://KKimSangHeon.github.io/categories/About-Me/My-Projects/"/>
    
    
      <category term="작성 논문" scheme="http://KKimSangHeon.github.io/tags/%EC%9E%91%EC%84%B1-%EB%85%BC%EB%AC%B8/"/>
    
  </entry>
  
  <entry>
    <title>시각장애인을 위한 길안내 app</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/For-blind/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/For-blind/</id>
    <published>2017-06-30T03:42:08.000Z</published>
    <updated>2017-06-30T04:32:05.752Z</updated>
    
    <content type="html"><![CDATA[<h1 id="참가배경"><a href="#참가배경" class="headerlink" title="참가배경"></a>참가배경</h1><p>-교내 창업경진대회가 진행 중이라는 소식을 듣고 참가하게 되었습니다. 비콘과 관련된 프로젝트를 진행중이던 상황이라 비콘을 이용해서 창업아이템을 고안하게 되었습니다.</p>
<h1 id="Idea를-떠올린-계기"><a href="#Idea를-떠올린-계기" class="headerlink" title="Idea를 떠올린 계기"></a>Idea를 떠올린 계기</h1><img src="/2017/06/30/For-blind/for-blind-img1.png" alt="점형블록실태 [그림1]" title="점형블록실태 [그림1]">
<p>-지하철을 이용하던 어느 날 시각장애인이 길을 찾는데 어려움을 겪는 것을 보았습니다. 시각장애인이 길을 찾는데 어려움을 겪은 이유는 점형블록에 대한 인식이 부족한 상인이 올려둔 짐 때문이었고 결국 시각 장애인은 주변 사람들의 도움을 통해 올바른 길을 찾아 갈 수 있었습니다. 저는 그 이후 지하철 내 점형블록을 눈여겨보게 되었습니다. [그림1]의 좌측 사진과 같이 깨진 점형블록이 보수되지 않은 채 존재하며, 우측 사진과 같이 매트가 깔려있기도 했습니다.</p>
<img src="/2017/06/30/For-blind/for-blind-img2.png" alt="음성유도기에 관한기사 [그림2]" title="음성유도기에 관한기사 [그림2]">
<p>-또한 그들을 위한 시설인 음성유도기 또한 고장나있는경우가 많으며 가격이 비싸다는 단점이 존재하였습니다.(개당 약 270만원)</p>
<h1 id="Idea-소개"><a href="#Idea-소개" class="headerlink" title="Idea 소개"></a>Idea 소개</h1><p>역사에 10m^2당 비콘을 하나씩 설치하여 핑거프린팅 알고리즘을 적용한 후 현재위치를 파악합니다. (<a href="https://kkimsangheon.github.io/2017/06/29/where-are-you/">FingerPrinting Algorithm(참고))</a></p>
<img src="/2017/06/30/For-blind/for-blind-img3.png" alt="이동방향 파악 [그림3]" title="이동방향 파악 [그림3]">
<p>그 후 [그림3]과 같이 이동방향을 파악 후 이동방향에 따른 음성안내를 실시합니다.<br><img src="/2017/06/30/For-blind/for-blind-img4.png" alt="음성안내를 실시하기 위한 방법 [그림4]" title="음성안내를 실시하기 위한 방법 [그림4]"><br>음성안내를 실시하기 위해서는 다음의 Newtone API 혹은 Naver의 음성합성 기능을 사용하면 가능합니다.</p>
<h1 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h1><img src="/2017/06/30/For-blind/for-blind-img5.jpg" alt="장려상" title="장려상">
<p>운이 좋게도 장려상과 30만원의 장학금을 지급받았습니다 !</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;참가배경&quot;&gt;&lt;a href=&quot;#참가배경&quot; class=&quot;headerlink&quot; title=&quot;참가배경&quot;&gt;&lt;/a&gt;참가배경&lt;/h1&gt;&lt;p&gt;-교내 창업경진대회가 진행 중이라는 소식을 듣고 참가하게 되었습니다. 비콘과 관련된 프로젝트를 진행중이던 상황이
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="My Projects" scheme="http://KKimSangHeon.github.io/categories/About-Me/My-Projects/"/>
    
    
      <category term="Android" scheme="http://KKimSangHeon.github.io/tags/Android/"/>
    
      <category term="Beacon" scheme="http://KKimSangHeon.github.io/tags/Beacon/"/>
    
      <category term="창업경진대회" scheme="http://KKimSangHeon.github.io/tags/%EC%B0%BD%EC%97%85%EA%B2%BD%EC%A7%84%EB%8C%80%ED%9A%8C/"/>
    
  </entry>
  
  <entry>
    <title>기숙사 외박계</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/Dormitory-Sleep-Out/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/Dormitory-Sleep-Out/</id>
    <published>2017-06-30T01:22:14.000Z</published>
    <updated>2017-06-30T03:37:41.143Z</updated>
    
    <content type="html"><![CDATA[<h1 id="프로그램-개발배경"><a href="#프로그램-개발배경" class="headerlink" title="프로그램 개발배경"></a>프로그램 개발배경</h1><p>-교내 기숙사의 외박계 프로그램이 존재하지 않으며, 업체에 의뢰하여 제작하려했으나 비용상의 문제로 거절된것을 알게되었습니다. 그래서 직접 만들어서 제출하면 어떨까 라는 생각을 하게되어 개발하게 되었습니다.</p>
<h1 id="프로그램-소개"><a href="#프로그램-소개" class="headerlink" title="프로그램 소개"></a>프로그램 소개</h1><p>CentOS상에 서버를 실행시켰으며, 카카오톡 옐로아이디 페이지에서 세팅을 진행하였습니다. 각 과정을 거친 후 자신의 외박계를 하나 작성할 수 있는 프로그램입니다.</p>
<h1 id="프로그램-동작화면"><a href="#프로그램-동작화면" class="headerlink" title="프로그램 동작화면"></a>프로그램 동작화면</h1><img src="/2017/06/30/Dormitory-Sleep-Out/Dormitory-Sleep-Out1.png" alt="초기접속화면 [그림1]" title="초기접속화면 [그림1]">
<p>초기 채팅방에 진입하였을 경우 외박계를 작성할 것인지, 작성한 외박계를 확인할 것인지 선택합니다.<br><img src="/2017/06/30/Dormitory-Sleep-Out/Dormitory-Sleep-Out2.png" alt="외박계 작성절차1 [그림2]" title="외박계 작성절차1 [그림2]"><br>외박계 작성을 선택하였을 경우 이름, 거주하는 동, 호수, 귀관일, 행선지를 입력하고<br><img src="/2017/06/30/Dormitory-Sleep-Out/Dormitory-Sleep-Out3.png" alt="외박계 작성절차2 [그림3]" title="외박계 작성절차2 [그림3]"><br>전화번호 또한 입력 후 아무키나 입력하면 등록이 완료됩니다.<br><img src="/2017/06/30/Dormitory-Sleep-Out/Dormitory-Sleep-Out4.png" alt="[그림1]에서 확인을 선택 [그림4]" title="[그림1]에서 확인을 선택 [그림4]"><br>[그림1]에서 확인버튼을 선택하였을 경우 [그림4]와 같이 입력한 내용을 확인할 수 있습니다.</p>
<img src="/2017/06/30/Dormitory-Sleep-Out/Dormitory-Sleep-Out5.png" alt="관리자계정모드 [그림5]" title="관리자계정모드 [그림5]">
<p>작성된 외박계를 관리자가 확인하기 위해서는 채팅방에서 supervisorgj@를 입력합니다. 그 후 [그림5]와 같이 외박계를 조회할 수 있습니다.</p>
<h1 id="소스코드-Github-Repository"><a href="#소스코드-Github-Repository" class="headerlink" title="소스코드 (Github Repository)"></a>소스코드 (Github Repository)</h1><p><a href="https://github.com/KKimSangHeon/DormitorySleepOut" target="_blank" rel="external">-카카오톡 자동응답 서버 소스코드</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;프로그램-개발배경&quot;&gt;&lt;a href=&quot;#프로그램-개발배경&quot; class=&quot;headerlink&quot; title=&quot;프로그램 개발배경&quot;&gt;&lt;/a&gt;프로그램 개발배경&lt;/h1&gt;&lt;p&gt;-교내 기숙사의 외박계 프로그램이 존재하지 않으며, 업체에 의뢰하여 제작하려
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="My Projects" scheme="http://KKimSangHeon.github.io/categories/About-Me/My-Projects/"/>
    
    
      <category term="Node.js" scheme="http://KKimSangHeon.github.io/tags/Node-js/"/>
    
      <category term="Kakao talk open API" scheme="http://KKimSangHeon.github.io/tags/Kakao-talk-open-API/"/>
    
      <category term="챗봇" scheme="http://KKimSangHeon.github.io/tags/%EC%B1%97%EB%B4%87/"/>
    
      <category term="MySQL" scheme="http://KKimSangHeon.github.io/tags/MySQL/"/>
    
      <category term="CentOS" scheme="http://KKimSangHeon.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Music Share</title>
    <link href="http://KKimSangHeon.github.io/2017/06/30/music-share/"/>
    <id>http://KKimSangHeon.github.io/2017/06/30/music-share/</id>
    <published>2017-06-30T00:31:38.000Z</published>
    <updated>2017-06-30T03:32:36.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="프로그램-개발배경"><a href="#프로그램-개발배경" class="headerlink" title="프로그램 개발배경"></a>프로그램 개발배경</h1><p>-C 소켓프로그래밍에 대한 이해를 높이고자 진행한 프로젝트입니다.</p>
<h1 id="프로그램-소개"><a href="#프로그램-소개" class="headerlink" title="프로그램 소개"></a>프로그램 소개</h1><p>-본 프로그램은 회원가입기능, 로그인기능, 서버에 mp3파일을 올리는기능 등이 구현되어 있습니다. 회원가입을 하고 로그인 후 서버에 mp3파일을 올리거나 다운로드 받을 수 있습니다. 프로그램 개발환경은 우분투 14.04 LTS 입니다.</p>
<h1 id="프로그램-기능"><a href="#프로그램-기능" class="headerlink" title="프로그램 기능"></a>프로그램 기능</h1><img src="/2017/06/30/music-share/music-share1.png" alt="서버에 접속한 클라이언트[그림1]" title="서버에 접속한 클라이언트[그림1]">
<p>초기 서버에 접속하였을 경우 화면입니다. 서버에서는 클라이언트의 접속현황 및 상태를 확인할 수 있으며 클라이언트에서는 다음에 할 수 있는 일을 확인할 수 있습니다.</p>
<img src="/2017/06/30/music-share/music-share2.png" alt="두 클라이언트가 회원가입[그림2]" title="두 클라이언트가 회원가입[그림2]">
<p>두 클라이언트가 회원가입을 진행하고 있고 이에 대한 내용이 서버측 화면에 출력됩니다.</p>
<img src="/2017/06/30/music-share/music-share3.png" alt="회원가입한 ID로 로그인[그림3]" title="회원가입한 ID로 로그인[그림3]">
<p>클라이언트가 가입한 ID를 이용하여 로그인을 하였습니다. 로그인 후 에는 서버에 존재하는 mp3파일리스트를 조회하거나 mp3파일을 업로드, 다운로드 할 수있습니다.</p>
<img src="/2017/06/30/music-share/music-share4.png" alt="로그인 후 mp3파일 업로드[그림4]" title="로그인 후 mp3파일 업로드[그림4]">
<p>클라이언트가 로그인을 한 후 mp3파일을 업로드하는 화면입니다.</p>
<img src="/2017/06/30/music-share/music-share5.png" alt="로그인 후 mp3파일 조회[그림5]" title="로그인 후 mp3파일 조회[그림5]">
<p>클라이언트가 로그인을 한 후 서버에 존재하는 mp3파일을 조회하는 화면입니다.</p>
<img src="/2017/06/30/music-share/music-share6.png" alt="mp3파일 다운로드[그림6]" title="mp3파일 다운로드[그림6]">
<p>[그림4]에서 KSH클라이언트가 업로드한 hello.mp3 파일을 HRA클라이언트가 접속하여 다운로드 하는 화면입니다.</p>
<img src="/2017/06/30/music-share/music-share7.png" alt="비밀번호 찾기기능[그림7]" title="비밀번호 찾기기능[그림7]">
<p>비밀번호를 찾기위해 ID, Email을 입력하였고 이 후 비밀번호가 화면에 출력되는 모습입니다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;프로그램-개발배경&quot;&gt;&lt;a href=&quot;#프로그램-개발배경&quot; class=&quot;headerlink&quot; title=&quot;프로그램 개발배경&quot;&gt;&lt;/a&gt;프로그램 개발배경&lt;/h1&gt;&lt;p&gt;-C 소켓프로그래밍에 대한 이해를 높이고자 진행한 프로젝트입니다.&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="About Me" scheme="http://KKimSangHeon.github.io/categories/About-Me/"/>
    
      <category term="My Projects" scheme="http://KKimSangHeon.github.io/categories/About-Me/My-Projects/"/>
    
    
      <category term="C" scheme="http://KKimSangHeon.github.io/tags/C/"/>
    
      <category term="Socket" scheme="http://KKimSangHeon.github.io/tags/Socket/"/>
    
      <category term="Music Share" scheme="http://KKimSangHeon.github.io/tags/Music-Share/"/>
    
      <category term="Ubuntu" scheme="http://KKimSangHeon.github.io/tags/Ubuntu/"/>
    
  </entry>
  
</feed>
